[
  {
    "answerId": 37907441,
    "question": "A leaderboard application",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon DynamoDB</strong></b><span>&nbsp;provides fast access to items in a table by specifying primary key values. However, many applications might benefit from having one or more secondary (or alternate) keys available, to allow efficient access to data with attributes other than the primary key. To address this, you can create one or more secondary indexes on a table, and issue&nbsp;Query&nbsp;or&nbsp;Scan&nbsp;requests against these indexes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A&nbsp;</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">secondary index</strong></b></i><span>&nbsp;is a data structure that contains a subset of attributes from a table, along with an alternate key to support&nbsp;Query&nbsp;operations. You can retrieve data from the index using a&nbsp;Query, in much the same way as you use&nbsp;Query&nbsp;with a table. A table can have multiple secondary indexes, which gives your applications access to many different query patterns.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>DynamoDB supports two types of secondary indexes:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Global secondary index</strong></b></a><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;—&nbsp;</strong></b><span>an index with a partition key and a sort key that can be different from those on the base table. A global secondary index is considered “global” because queries on the index can span all of the data in the base table, across all partitions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LSI.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Local secondary index</strong></b></a><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;—&nbsp;</strong></b><span>an index that has the same partition key as the base table, but a different sort key. A local secondary index is “local” in the sense that every partition of a local secondary index is scoped to a base table partition that has the same partition key value.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To speed up queries on non-key attributes, you can create a global secondary index. A global secondary index contains a selection of attributes from the base table, but they are organized by a primary key that is different from that of the table. The index key does not need to have any of the key attributes from the table; it doesn’t even need to have the same key schema as a table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, you could create a global secondary index named&nbsp;Hence, the correct answer in this scenario is to:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"color: rgb(65, 117, 5);\">Create a global secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\">.</strong></b><i><em class=\"Editor__editor-text-italic___C9n8O\">GameTitleIndex</em></i><span>, with a partition key of&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">GameTitle</em></i><span>&nbsp;and a sort key of&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">TopScore</em></i><span>. Since the base table’s primary key attributes are always projected into an index, the UserId attribute is also present. The following diagram shows what&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">GameTitleIndex</em></i><span>&nbsp;index would look like:</span><br><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development%20with%20AWS%20Services%20(CDA)-1(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a local secondary index. Assign the TopScore attribute as the partition key and the GameTitle attribute as the sort key</strong></b><span>&nbsp;is incorrect. You can’t add a local secondary index to an existing table. Moreover, even if it’s possible, making a query that returns the top scores for each game is impossible with the TopScore attribute as the partition key. When you issue a query, you must also specify a partition key. In this case, if you run a query with a partition key value of 500, the results might return different games with a score of 500 from various users. It does not tell if it’s the highest score in that game.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a local secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key&nbsp;</strong></b><span>is incorrect because you can’t add this index to an already existing table. Additionally, a local secondary&nbsp;index has the same partition key as the base table, but has a different sort key. It is “local” in the sense that every partition of a local secondary index is scoped to a base table partition that has the same partition key value.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the&nbsp;Scan&nbsp;operation and filter the results based on a GameTitle value&nbsp;</strong></b><span>is incorrect. Technically, this also works but it is less efficient and slower compared to querying on secondary indexes. The&nbsp;Scan&nbsp;operation reads every item in a table. As the table grows, the slower the&nbsp;Scan&nbsp;operation would become.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html</span></a></p>",
    "choices": [
      {
        "id": 1529828,
        "value": "Create a global secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529829,
        "value": "Create a local secondary index. Assign the TopScore attribute as the partition key and the GameTitle attribute as the sort key",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529830,
        "value": "Create a local secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529831,
        "value": "Use the Scan operation and filter the results based on a GameTitle value",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 0,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529828,
        "questionId": 381474,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381474,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><br><span>A mobile game is using a DynamoDB table named GameScore that keeps track of users and scores. Each item in the table is identified by a partition key (UserId) and a sort key (GameTitle). The diagram below shows how the items in the table are organized</span><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development%20with%20AWS%20Services%20(CDA)-1(ask).jpg\"><span>A developer wants to write a leaderboard application to display the top scores for each game.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>How can the developer meet the requirement in the MOST efficient manner?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907442,
    "question": "Read request",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>One read request unit represents one strongly consistent read request, or two eventually consistent read requests, for an item up to 4 KB in size. Transactional read requests require 2 read request units to perform one read for items up to 4 KB.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you need to read an item that is larger than 4 KB, DynamoDB needs additional read request units. The total number of read request units required depends on the item size, and whether you want an eventually consistent or strongly consistent read.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development%20with%20AWS%20Services%20(CDA)-2(hint).jpg\"><span>For example, suppose that you create a table with 10 provisioned read capacity units. This allows you to perform 10 strongly consistent reads per second, or 20 eventually consistent reads per second, for items up to 4 KB.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Reading an item larger than 4 KB consumes more read capacity units. For example, a strongly consistent read of an item that is 8 KB (4 KB × 2) consumes 2 read capacity units. An eventually consistent read on that same item consumes only 1 read capacity unit.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Item sizes for reads are rounded up to the next 4 KB multiple. For example, reading a 3,500-byte item consumes the same throughput as reading a 4 KB item.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">To get the number of strong and eventual consistent read requests that your table can accommodate per second, you simply have to do the following steps:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Step #1&nbsp;Multiply the value of the provisioned RCU by 4 KB</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>= 10 RCU x 4 KB</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>= 40</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Step #2&nbsp;To get the number of strong&nbsp;consistency requests, just divide the result of step 1 by 4 KB</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>= 40 / 4 KB</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>=&nbsp;10 strongly consistent read requests</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Step #3&nbsp;To get the number of eventual&nbsp;consistency requests, just divide the result of step 1 by 2 KB</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>=40&nbsp;/ 2</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;</strong></b><span>KB</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>=&nbsp;20 eventually consistent read requests</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is&nbsp;that the table can handle&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10 strongly consistent reads and 20 eventually consistent reads per second.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">10 strongly consistent reads and 10 eventually consistent reads per second</strong></b><span>&nbsp;is incorrect. Although the former value is correct, the latter one is not. Take note that one strongly consistent read request is equivalent to two eventually consistent read request as these two consistency types are quite different from each other.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">5 strongly consistent reads and 20 eventually consistent reads per second</strong></b><span>&nbsp;is incorrect. Although the latter value is correct, the former one is not. If the scenario says that it uses transaction read requests, then it is correct that it will provide 5 strongly consistent reads. However, it is explicitly mentioned to get both strong and eventual consistency.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">20 strongly consistent reads and 10 eventually consistent reads per second</strong></b><span>&nbsp;is incorrect because it should be the other way around. The table can provide 10 strongly consistent reads and 20 eventually consistent reads per second.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html#ItemSizeCalculations.Reads</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Calculating the Required Read and Write Capacity Unit for your DynamoDB Table:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://tutorialsdojo.com/calculating-the-required-read-and-write-capacity-unit-for-your-dynamodb-table/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://tutorialsdojo.com/calculating-the-required-read-and-write-capacity-unit-for-your-dynamodb-table/</span></a></p>",
    "choices": [
      {
        "id": 1529832,
        "value": "5 strongly consistent reads and 20 eventually consistent reads per second",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529833,
        "value": "10 strongly consistent reads and 20 eventually consistent reads per second",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529834,
        "value": "20 strongly consistent reads and 10 eventually consistent reads per second",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529835,
        "value": "10 strongly consistent reads and 10 eventually consistent reads per second",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 1,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529833,
        "questionId": 381475,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381475,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\" style=\"text-align: start;\"><span>A company is re-architecting its legacy application to use AWS Lambda and DynamoDB. The table is provisioned to have 10 read capacity units, and each item has a size of 4 KB.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\" style=\"text-align: start;\"><span>How many eventual and strong consistent read requests can the table handle per second?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907443,
    "question": " Developing a serverless website",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can configure your application to deliver static content and decrease the end-user latency using Amazon S3 and Amazon CloudFront. High-resolution images, videos, and other static files can be stored in Amazon S3. CloudFront speeds up content delivery by leveraging its global network of data centres, known as edge locations, to reduce delivery time by caching your content close to your end-users.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-3(hint).jpg\"><span>CloudFront fetches your content from an origin, such as an Amazon S3 bucket, an Amazon EC2 instance, an Amazon Elastic Load Balancing load balancer, or your own web server, when it’s not already in an edge location. CloudFront can be used to deliver your entire website or application, including dynamic, static, streaming, and interactive content. You can set your Amazon S3 bucket as the origin of your CloudFront web distribution.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">–&nbsp;Amazon S3</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon CloudFront</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon EC2</strong></b><span>&nbsp;is incorrect because EC2 instances are more suited for dynamic, server-side processing and they are region-specific, which means the latency for users would vary depending on their geographical distance from the EC2 instance. They are not designed for low-latency global content delivery of static web assets.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Elastic File System</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because this is not a suitable service for storing static content, unlike S3. It is a regional service storing data within and across multiple Availability Zones (AZs) for high availability and durability. In addition, you can’t directly connect it to CloudFront, unlike S3.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Glacier</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because this is primarily used for data archival with usually a long data retrieval time. Like EFS, you can’t directly connect it to CloudFront, unlike Amazon S3.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/getting-started/tutorials/deliver-content-faster/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/getting-started/tutorials/deliver-content-faster/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/cloudfront/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/cloudfront/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/networking-and-content-delivery/amazon-s3-amazon-cloudfront-a-match-made-in-the-cloud/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://aws.amazon.com/blogs/networking-and-content-delivery/amazon-s3-amazon-cloudfront-a-match-made-in-the-cloud/</span></a></p>",
    "choices": [
      {
        "id": 1529836,
        "value": "Amazon EC2",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529837,
        "value": "Amazon S3",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529838,
        "value": "Amazon CloudFront",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529839,
        "value": "Amazon Elastic File System",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529840,
        "value": "Amazon Glacier",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 2,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529838,
        "questionId": 381476,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1529837,
        "questionId": 381476,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381476,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company is developing a serverless website that consists of images, videos, HTML pages and JavaScript files. There is also a requirement to serve the files with lowest possible latency to its global users.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which combination of services should be used in this scenario? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907444,
    "question": "Traffic monitoring",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon Kinesis Data Streams is a massively scalable, highly durable data ingestion and processing service optimized for streaming data. You can configure hundreds of thousands of data producers to continuously put data into a Kinesis data stream. Data will be available within milliseconds to your Amazon Kinesis applications, and those applications will receive data records in the order they were generated.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The purpose of resharding in Amazon Kinesis Data Streams is to enable your stream to adapt to changes in the rate of data flow. You split shards to increase the capacity (and cost) of your stream. You merge shards to reduce the cost (and capacity) of your stream.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>One approach to resharding could be to split every shard in the stream—which would double the stream’s capacity. However, this might provide more additional capacity than you actually need and therefore create unnecessary costs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-4(hint).jpg\"><span>You can also use metrics to determine which are your “hot” or “cold” shards, that is, shards that are receiving much more data, or much less data, than expected. You could then selectively split the hot shards to increase capacity for the hash keys that target those shards. Similarly, you could merge cold shards to make better use of their unused capacity.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can obtain some performance data for your stream from the Amazon CloudWatch metrics that Kinesis Data Streams publishes. However, you can also collect some of your own metrics for your streams. One approach would be to log the hash key values generated by the partition keys for your data records. Recall that you specify the partition key at the time that you add the record to the stream.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct statements regarding Kinesis resharding are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;– You can decrease the stream’s capacity by merging shards</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;–&nbsp;You can increase the stream’s capacity by splitting shards</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">you have to merge the hot shards to increase the capacity of the stream</strong></b><span>&nbsp;is incorrect because a hot shard is the one that receives more data in the stream, which you should split rather than merge.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">you have to split the cold shards to decrease the capacity of the stream</strong></b><span>&nbsp;is incorrect because&nbsp;a cold shard is the one that receives fewer data in the stream, which you should merge rather than split.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">the data records that are flowing to the parent shards will be lost when you reshard</strong></b><span>&nbsp;is incorrect because&nbsp;the data records are actually re-routed to flow to the child shards based on the hash key values that the data-record partition keys map to. Hence, this is incorrect because the records are not lost.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html</span></a></p>",
    "choices": [
      {
        "id": 1529841,
        "value": "You can decrease the stream's capacity by merging shards",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529842,
        "value": "You have to merge the hot shards to increase the capacity of the stream",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529843,
        "value": "The data records that are flowing to the parent shards will be lost when you reshard",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529844,
        "value": "You can increase the stream's capacity by splitting shards",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529845,
        "value": "You have to split the cold shards to decrease the capacity of the stream",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 3,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529844,
        "questionId": 381477,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1529841,
        "questionId": 381477,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381477,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A tech company has a real-time traffic monitoring system which uses Amazon Kinesis Data Stream to collect data and a group of EC2 instances that consume and process the data stream. Your development team is responsible for adjusting the number of shards in the data stream to adapt to changes in the rate of data flow.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following are correct regarding Kinesis resharding which your team should consider in managing the application? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907445,
    "question": "Lambda function",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use an&nbsp;</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">Concurrent executions</strong></b></i><span>&nbsp;refers to the number of executions of your function code that are happening at any given time. You can estimate the concurrent execution count, but the it will differ depending on whether or not your Lambda function is processing events from a poll-based event source.</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Lambda function</strong></b><span>&nbsp;to process records in an Amazon Kinesis data stream. With Kinesis, you can collect data from many sources and process them with multiple consumers. Lambda supports standard data stream iterators and HTTP/2 stream consumers. Lambda reads records from the data stream and invokes your function synchronously with an event that contains stream records. Lambda reads records in batches and invokes your function to process records from the batch.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-5(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For Lambda functions that process Kinesis or DynamoDB streams, the number of shards is the unit of concurrency. If your stream has 100 active shards, there will be at most 100 Lambda function invocations running concurrently. This is because Lambda processes each shard’s events in sequence.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer in this scenario is that:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">there will be at most 100 Lambda function invocations running concurrently.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">the Lambda function has 500 concurrent executions</strong></b><span>&nbsp;is incorrect because the number of concurrent executions for poll-based event sources is different from push-based event sources. This number of concurrent executions would have been correct if the Lambda function is integrated with a push-based even source such as API Gateway or Amazon S3 Events. Remember that the Kinesis and Lambda integration is using a poll-based event source, which means that&nbsp;the number of shards is the unit of concurrency for the function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">the Lambda function will throttle the incoming requests due to the excessive number of Kinesis shards</strong></b><span>&nbsp;is incorrect because, by default,&nbsp;AWS Lambda will automatically scale the function’s concurrency execution in response to increased traffic, up to your concurrency limit. Moreover, having 100 shards is not excessive at all as long as there is a sufficient number of workers or consumers of the stream.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">the Kinesis shards must be merged to increase the data capacity of the stream as well as the concurrency execution of the Lambda function</strong></b><span>&nbsp;is incorrect because, in the first place, you have to split the shards in order to increase the data capacity of the stream and not merge them. Since the Lambda function is using a poll-based event source mapping for Kinesis, the number of shards is the unit of concurrency for the function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/scaling.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/lambda/latest/dg/scaling.html</span></a></p>",
    "choices": [
      {
        "id": 1529846,
        "value": "The Lambda function has 500 concurrent executions",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529847,
        "value": "There will be at most 100 Lambda function invocations running concurrently.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529848,
        "value": "The Lambda function will throttle the incoming requests due to the excessive number of Kinesis shards.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529849,
        "value": "The Kinesis shards must be merged to increase the data capacity of the stream as well as the concurrency execution of the Lambda function",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 4,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529847,
        "questionId": 381478,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381478,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You are using an AWS Lambda function to process records in an Amazon Kinesis Data Streams stream which has 100 active shards. The Lambda function takes an average of 10 seconds to process the data and the stream is receiving 50 new items per second.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following statements are TRUE regarding this scenario?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907446,
    "question": "Two Lambda functions",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The unit of scale for AWS Lambda is a concurrent execution.&nbsp;However, scaling indefinitely is not desirable in all scenarios. For example, you may want to control your concurrency for cost reasons or to regulate how long it takes you to process a batch of events, or to simply match it with a downstream resource. To assist with this, Lambda provides a concurrent execution limit control at both the account level and the function level.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">concurrent executions</em></i><span>&nbsp;refers to the number of executions of your function code that are happening at any given time. You can estimate the concurrent execution count, but the concurrent execution count will differ depending on whether or not your Lambda function is processing events from a poll-based event source.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-6(hint).jpg\"><span>If you create a Lambda function to process events from event sources that aren’t poll-based (for example, Lambda can process every event from other sources, like Amazon S3 or API Gateway), each published event is a unit of work, in parallel, up to your account limits. Therefore, the number of invocations these event sources make influences the concurrency.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you set the concurrent execution limit for a function, the value is deducted from the unreserved concurrency pool. For example, if your account’s concurrent execution limit is 1000 and you have 10 functions, you can specify a limit on one function at 200 and another function at 100. The remaining 700 will be shared among the other 8 functions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS Lambda will keep the unreserved concurrency pool at a minimum of 100 concurrent executions, so that functions that do not have specific limits set can still process requests. So, in practice, if your total account limit is 1000, you are limited to allocating 900 to individual functions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By default, an AWS account’s concurrent execution limit is 1000 which will be shared by all Lambda functions. In this scenario, it is highly likely that the first function has more provisioned concurrency than the other one. It is possible that&nbsp;the concurrency execution limit of the first function is set to a significantly high value (e.g. 900) and the second function is set to use&nbsp;the unreserved account concurrency which may only contain the last 100 units out of the&nbsp;AWS account’s concurrent execution limit of 1000.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct solutions in this scenario are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Set the concurrency execution limit of both functions to 450</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Decrease the concurrency execution limit of the first function.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Setting the concurrency execution limit of both functions to 500&nbsp;</strong></b><span>is incorrect because by default, a newly created AWS account has a concurrent execution limit of only 1000. Take note that AWS Lambda will keep the unreserved concurrency pool at a minimum of 100 concurrent executions so that functions that do not have specific limits set can still process requests. Hence, you can only allocate a concurrent execution limit of 900 for a single Lambda function or 450 for two functions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configuring the second function to use an unreserved account concurrency&nbsp;</strong></b><span>is incorrect because this may possibly be the current setting of this function, which is why the requests are being throttled. The total number of concurrent execution limits that you allocated to all Lambda functions affect the value of the unreserved concurrency limit. Since the second function is being throttled, it is highly likely that it is already using an unreserved account concurrency, which only has a low value since the units were already exhausted by the first function. Take note that the unreserved concurrency pool has a minimum value of 100 concurrent executions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Setting the concurrency execution limit of the second function to 0&nbsp;</strong></b><span>is incorrect because this will throttle all future invocations of this function and will make the problem worse.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/scaling.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/lambda/latest/dg/scaling.html</span></a></p>",
    "choices": [
      {
        "id": 1529850,
        "value": "Decrease the concurrency execution limit of the first function.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529851,
        "value": "Set the concurrency execution limit of the second function to 0.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529852,
        "value": "Set the concurrency execution limit of both functions to 450.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529853,
        "value": "Set the concurrency execution limit of both functions to 500.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529854,
        "value": "Configure the second function to use an unreserved account concurrency.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 5,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529852,
        "questionId": 381479,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1529850,
        "questionId": 381479,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381479,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You recently deployed an application to a newly created AWS account, which uses two identical Lambda functions to process ad-hoc requests. The first function processes incoming requests efficiently but the second one has a longer processing time even though both of the functions have exactly the same code. Based on your monitoring, the&nbsp;Throttles&nbsp;metric of the second function is greater than the first one in Amazon CloudWatch.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following are possible solutions that you can implement to fix this issue? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907447,
    "question": "A new version of a serverless application",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you use AWS SAM to create your serverless application, it comes built-in with CodeDeploy to help ensure safe Lambda deployments. There are various deployment preference types that you can choose from.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For example:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you choose&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Canary10Percent10Minutes&nbsp;</strong></b><span>then&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;percent of your customer traffic is immediately shifted to your new version. After&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;minutes, all traffic is shifted to the new version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>However, if your pre-hook/post-hook tests fail, or if a CloudWatch alarm is triggered, CodeDeploy rolls back your deployment. The following table outlines other traffic-shifting options that are available:</span></p><ol class=\"Editor__editor-list-ol___2onc5\"><li value=\"1\" class=\"Editor__editor-listitem___EW2Qh Editor__editor-nested-listitem___1xhQS\"><ul class=\"Editor__editor-list-ul___3e1ik\"><li value=\"1\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Canary</strong></b><span>:&nbsp;</span><u><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-underline___y38TS\">Traffic       is shifted in two increments</strong></b></u><span>. You can choose from predefined       canary options. The options specify the percentage of traffic that’s       shifted to your updated Lambda function version in the first increment,       and the interval, in minutes, before the remaining traffic is shifted in       the second increment.</span></li><li value=\"2\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Linear</strong></b><span>:&nbsp;</span><u><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-underline___y38TS\">Traffic       is shifted in equal increments with an equal number of minutes between       each increment.</strong></b></u><span>&nbsp;You can choose from predefined linear       options that specify the percentage of traffic that’s shifted in each       increment and the number of minutes between each increment.</span></li><li value=\"3\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">All-at-once</strong></b><span>:       All traffic is shifted from the original Lambda function to the updated       Lambda function version at once.</span></li></ul></li></ol><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.LambdaCanary10Percent5Minutes</strong></b><span>&nbsp;option is correct because&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;percent of your customer traffic is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">immediately</strong></b><span>&nbsp;shifted to your new version. After&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">5</strong></b><span>&nbsp;minutes, all traffic is shifted to the new version. This means that the entire deployment time will only take&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">5</strong></b><span>&nbsp;minutes</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.HalfAtATime</strong></b><span>is incorrect because this is only applicable for&nbsp;EC2/On-premises compute platform and not for Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.LambdaLinear10PercentEvery1Minute</strong></b><span>&nbsp;is incorrect because it will add 10 percent of the traffic linearly to the new version every minute. Hence, all traffic will be shifted to the new version only after&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;minutes</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.LambdaLinear10PercentEvery2Minutes</strong></b><span>&nbsp;is incorrect because&nbsp;it will add 10 percent of the traffic linearly to the new version every 2 minutes. Hence, all traffic will be shifted to the new version only after&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">20</strong></b><span>&nbsp;minutes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-deploying.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-deploying.html</span></a></p>",
    "choices": [
      {
        "id": 1529855,
        "value": "CodeDeployDefault.HalfAtATime",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529856,
        "value": "CodeDeployDefault.LambdaCanary10Percent5Minutes",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529857,
        "value": "CodeDeployDefault.LambdaLinear10PercentEvery1Minute",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529858,
        "value": "CodeDeployDefault.LambdaLinear10PercentEvery2Minutes",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 6,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529856,
        "questionId": 381480,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381480,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer has recently completed a new version of a serverless application that is ready to be deployed using AWS SAM. There is a requirement that the traffic should shift from the previous Lambda function to the new version in the shortest time possible, but you still don’t want to shift traffic all-at-once immediately.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which deployment configuration is the MOST suitable one to use in this scenario?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907448,
    "question": "A new API",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use the API Gateway Import API feature to import a REST API from an external definition file into API Gateway. Currently, the Import API feature supports OpenAPI v2.0 and OpenAPI v3.0 definition files. You can update an API by overwriting it with a new definition or merge a definition with an existing API. You specify the options using a mode query parameter in the request URL.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can paste a&nbsp;</span><a href=\"http://swagger.io/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>Swagger</span></a><span>&nbsp;API definition in the AWS Console to create a new API and populate it with the resources and methods from your Swagger or OpenAPI definition, just as shown below:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-8(hint).jpg\"><span>You can also import your Swagger definition through the AWS CLI and SDKs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer in this scenario is to</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;import their Swagger or OpenAPI definitions to API Gateway using the AWS Console.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using CodeDeploy to migrate and deploy the company’s web services to API Gateway&nbsp;</strong></b><span>is incorrect because using CodeDeploy alone is not enough to deploy new custom APIs. This is mainly used in conjunction with AWS SAM where you can add deployment preferences to manage the way traffic is shifted during an AWS Lambda application deployment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using AWS SAM to migrate and deploy the company’s web services to API Gateway</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect. Although using AWS SAM is the preferred way to deploy your serverless application, it is not the easiest way to import the Swagger API definitions file. As mentioned above, you can simply import Swagger or OpenAPI files directly to AWS.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Creating models and templates for request and response mappings based on the company’s API definitions&nbsp;</strong></b><span>is incorrect because this is primarily done for API Gateway integration to other services and not for importing API definitions file.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-api-from-example.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-api-from-example.html</span></a></p>",
    "choices": [
      {
        "id": 1529859,
        "value": "Use AWS SAM to migrate and deploy the company's web services to API Gateway",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529860,
        "value": "Create models and templates for request and response mappings based on the company's API definitions",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529861,
        "value": "Use CodeDeploy to migrate and deploy the company's web services to API Gateway.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529862,
        "value": "Import their Swagger or OpenAPI definitions to API Gateway using the AWS Console",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 7,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529862,
        "questionId": 381481,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381481,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company is using OpenAPI, which is also known as Swagger, for the API specifications of their REST web services that are hosted on their on-premises data centre. They want to migrate their system to AWS using Lambda and API Gateway. In line with this, you are instructed to create a new API and populate it with the resources and methods from their Swagger definition.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the EASIEST way to accomplish this task</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907449,
    "question": "AWS Services",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS CodePipeline</strong></b><span>&nbsp;is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define. This makes it a good choice for automating your CI/CD process and centrally monitoring application activity.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Moreover, AWS CodePipeline integrates with AWS CloudWatch, which provides a reliable, scalable, and flexible monitoring solution. You can create dashboards in CloudWatch to centrally monitor application activity and manage day-to-day development tasks.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-9ex(hint).jpg\"><br><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Fault Injection Simulator&nbsp;</strong></b><span>is incorrect because this is just a managed service that is commonly used in chaos engineering, and not for application development. It enables you to perform fault injection experiments on your AWS workloads to improve the performance and resiliency of your applications.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Elastic Beanstalk</strong></b><span>&nbsp;is incorrect because it is an orchestration service to quickly deploy and manage applications in AWS.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon CodeGuru</strong></b><span>&nbsp;is incorrect because this is simply a developer tool that provides intelligent recommendations to improve the quality of your codebase and for identifying an application’s most “expensive” lines of code in terms of resource intensiveness, CPU performance, and code efficiency.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/codepipeline/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://aws.amazon.com/codepipeline/</span></a></p>",
    "choices": [
      {
        "id": 1529863,
        "value": "AWS CodePipeline",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529864,
        "value": "Amazon CodeGuru",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529865,
        "value": "AWS Elastic Beanstalk",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529866,
        "value": "AWS Fault Injection Simulator",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 8,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529863,
        "questionId": 381482,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381482,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company has a development team that’s heavily relying on AWS CodeBuild, and CodeDeploy. The management would like to further automate its CI/CD process. They requested a system that monitors the status of each code change, from the moment it’s committed through to its deployment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following AWS services will help you achieve this?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907450,
    "question": "Segment document",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A segment can break down the data about the work done into&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">subsegments</strong></b><span>. Subsegments provide more granular timing information and details about downstream calls that your application made to fulfill the original request. A subsegment can contain additional details about a call to an AWS service, an external HTTP API, or an SQL database. You can even define arbitrary subsegments to instrument specific functions or lines of code in your application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-10(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For services that don’t send their own segments like Amazon DynamoDB, X-Ray uses subsegments to generate&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">inferred segments</em></i><span>&nbsp;and downstream nodes on the service map. This lets you see all of your downstream dependencies, even if they don’t support tracing, or are external.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Subsegments represent your application’s view of a downstream call as a client. If the downstream service is also instrumented, the segment that it sends replaces the inferred segment generated from the upstream client’s subsegment. The node on the service graph always uses information from the service’s segment, if it’s available, while the edge between the two nodes uses the upstream service’s subsegment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer in this scenario is to include&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">subsegments</strong></b><span>&nbsp;in your segment document.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Including</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;tracing header</strong></b><span>&nbsp;is incorrect because this is added in the HTTP request header and not on the segment document. A tracing header (X-Amzn-Trace-Id) can originate from the X-Ray SDK, an AWS service, or the client request.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Including&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">metadata</strong></b><span>&nbsp;is incorrect because this does not record the calls to AWS services and resources that are made by the application.&nbsp;Segments and subsegments can include a&nbsp;metadata&nbsp;object containing one or more fields with values of any type, including objects and arrays.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Including&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">annotations</strong></b><span>&nbsp;is incorrect because just like&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">metadata</em></i><span>, this also does not record the application’s calls to your AWS services and resources.&nbsp;Segments and subsegments can include an annotations object containing one or more fields that X-Ray indexes for use with filter expressions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html#api-segmentdocuments-subsegments\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html#api-segmentdocuments-subsegments</span></a></p>",
    "choices": [
      {
        "id": 1529867,
        "value": "annotations",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529868,
        "value": "subsegments",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529869,
        "value": "metadata",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529870,
        "value": "tracing header",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 9,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529868,
        "questionId": 381483,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381483,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In order to quickly troubleshoot their systems, your manager instructed you to record the calls that your application makes to all AWS services and resources. You developed a custom code that will send the segment documents directly to X-Ray by using the PutTraceSegments API.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What should you include in your segment document to meet the above requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907451,
    "question": "DynamoDB Streams",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">DynamoDB Streams </strong></b><span>provides a time-ordered sequence of item level changes in any DynamoDB table. The changes are de-duplicated and stored for 24 hours. Applications can access this log and view the data items as they appeared before and after they were modified, in near real time.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-11(hint).jpg\"><span>Amazon DynamoDB is also integrated with AWS Lambda so that you can create&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">triggers</em></i><span>—pieces of code that automatically respond to events in DynamoDB Streams. With triggers, you can build applications that react to data modifications in DynamoDB tables.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When an item in the table is modified,&nbsp;StreamViewType&nbsp;determines what information are written to the stream for this table. Valid values for&nbsp;StreamViewType&nbsp;are&nbsp;KEYS_ONLY,&nbsp;NEW_IMAGE,&nbsp;OLD_IMAGE,&nbsp;and&nbsp;NEW_AND_OLD_IMAGES.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">OLD_IMAGE</strong></b><span>&nbsp;type, the entire item which has the previous value as it appeared before it was modified is written to the stream. Hence, this is the correct answer in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">KEYS_ONLY</strong></b><span>&nbsp;is incorrect because it will only write the key attributes of the modified item to the stream. This choice is wrong since the question states that values should be copied as well.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">NEW_IMAGE</strong></b><span>&nbsp;is incorrect because it will configure the stream to write the entire item with its new value as it appears after it was modified. This choice is wrong since the stream should capture the item’s pre-modified values.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">NEW_AND_OLD_IMAGES</strong></b><span>&nbsp;is incorrect because although it writes the new values of the item in the stream, it also includes the old one as well. Since this type will send both the new and the old item images of the item to the stream, this option is wrong. Remember that&nbsp;it should&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">only</strong></b><span>&nbsp;send a copy of the item’s previous value to the S3 bucket, and not the new value in the DynamoDB table. The most suitable one to use here is the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">OLD_IMAGE&nbsp;</strong></b><span>type.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/Streams.Lambda.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/Streams.Lambda.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_StreamSpecification.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_StreamSpecification.html</span></a></p>",
    "choices": [
      {
        "id": 1529871,
        "value": "NEW_IMAGE",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529872,
        "value": "KEYS_ONLY",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529873,
        "value": "NEW_AND_OLD_IMAGES",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529874,
        "value": "OLD_IMAGE",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 10,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529874,
        "questionId": 381484,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381484,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is working on an application which stores data to an Amazon DynamoDB table with the DynamoDB Streams feature enabled. He set up an event source mapping with DynamoDB Streams and AWS Lambda function to monitor any table changes then store the original data of the overwritten item in S3. When an item is updated, it should only send a copy of the item’s previous value to an S3 bucket and maintain the new value in the DynamoDB table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which StreamViewType is the MOST suitable one to use in the DynamoDB configuration to fulfill this scenario?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907452,
    "question": "Read and write operations",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Partitions are usually throttled when they are accessed by your downstream applications much more frequently than other partitions (that is, a “hot” partition), or when workloads rely on short periods of time with high usage (a “burst” of read or write activity). This problem can be more pronounced in stateful applications, where maintaining session data or transactions may cause repeated access to the same partition. To avoid hot partitions and throttling, you must optimize your table and partition structure.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>DynamoDB adaptive capacity automatically boosts throughput capacity to high-traffic partitions. However, each partition is still subject to the hard limit. This means that adaptive capacity can’t solve larger issues with your table or partition design. To avoid hot partitions and throttling, optimize your table and partition structure.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Development with AWS Services (CDA)-12(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To solve this issue, consider one or more of the following solutions:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Increase the amount of read or write capacity for your table to anticipate short-term spikes or bursts in read or write operations.&nbsp;</strong></b><span>If you decide later you don’t need the additional capacity, decrease it. Take note that Before deciding on how much to increase read or write capacity, consider the best practices in designing your partition keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Implement&nbsp;error retries and exponential backoff.&nbsp;</strong></b><span>This technique improves reliability in stateful applications by allowing retries after progressively longer wait times between errors. AWS SDKs have built-in support for this logic.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Distribute your read operations and&nbsp;</strong></b><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-partition-key-sharding.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><b><strong class=\"Editor__editor-text-bold___25KrR\">write operations</strong></b></a><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;as evenly as possible across your table.</strong></b><span>&nbsp;A hot partition can degrade the overall performance, particularly for stateful applications that repeatedly access certain keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Implement a caching solution, such as&nbsp;DynamoDB Accelerator (DAX)&nbsp;or&nbsp;Amazon ElastiCache.</strong></b><span>&nbsp;For stateful workloads with frequent reads to session or static data, caching can significantly reduce database access.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;– Implement error retries and exponential backoff.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;– Refactor your application to distribute your read and write operations as evenly as possible across your table.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Using a DynamoDB Accelerator (DAX)&nbsp;</strong></b><span>is incorrect. Although it can reduce read load by caching frequently accessed items, it will simply incurs additional costs to maintain the DAX cluster. Since the issue can be addressed by improving workload distribution without extra cost, DAX is not a cost-effective solution for this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Increasing the amount of read or write capacity for your table&nbsp;</strong></b><span>is incorrect because, while it can alleviate throttling by temporarily handling higher traffic, it is an expensive solution that contradicts the minimal-cost requirement. Scaling read and write capacity (RCU and WCU) can lead to significant increases in operational costs, especially for stateful applications with continuous usage patterns.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Implementing read sharding to distribute workloads evenly</strong></b><span>&nbsp;is incorrect because&nbsp;the issue primarily involves write operations in a stateful workload. Instead, write sharding should be used to better distribute writes across the partition key space. This can be achieved by appending either random or calculated suffixes to partition key values, which spreads the data more evenly across partitions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/throttled-ddb/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/premiumsupport/knowledge-center/throttled-ddb/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-partition-key-sharding.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-partition-key-sharding.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/best-practices.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/best-practices.html</span></a></p>",
    "choices": [
      {
        "id": 1529875,
        "value": "Implement error retries and exponential backoff",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529876,
        "value": "Increase the amount of read or write capacity for your table",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529877,
        "value": "Implement read sharding to distribute workloads evenly",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529878,
        "value": "Use DynamoDB Accelerator (DAX).",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529879,
        "value": "Refactor your application to distribute your read and write operations as evenly as possible across your table",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 11,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529875,
        "questionId": 381485,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1529879,
        "questionId": 381485,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381485,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The read and write operations to an Amazon DynamoDB table are throttled, causing errors in a stateful application that maintains user sessions. Despite checking Amazon CloudWatch metrics, the consumed capacity units have not exceeded the provisioned capacity. Upon further investigation, it is found that a “hot partition” is being accessed more frequently than others by downstream services.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What should be done to resolve this issue with MINIMAL cost? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907453,
    "question": "API Gateway",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can integrate an API method in your API Gateway with a custom HTTP endpoint of your application in two ways:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– HTTP proxy integration</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– HTTP custom integration</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span style=\"font-family: Calibri, sans-serif; font-size: 12pt;\">In your API Gateway console, you can define the type of HTTP integration of your resource by checking, or not checking, the “</span><span>With proxy integration, the setup is simple. You only need to set the HTTP method and the HTTP endpoint URI, according to the backend requirements, if you are not concerned with content encoding or caching.</span><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"font-family: Calibri, sans-serif; font-size: 12pt;\">Configure as proxy resource</strong></b><span style=\"font-family: Calibri, sans-serif; font-size: 12pt;\">” checkbox. For example, this API Resource configuration is a type of&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\" style=\"font-family: Calibri, sans-serif; font-size: 12pt;\">HTTP Proxy integration</em></i><span style=\"font-family: Calibri, sans-serif; font-size: 12pt;\">&nbsp;since the appropriate checkbox is ticked:</span><br><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-13(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With custom integration, setup is more involved. In addition to the proxy integration setup steps, you need to specify how the incoming request data is mapped to the integration request and how the resulting integration response data is mapped to the method response.&nbsp;API Gateway supports the following endpoint ports: 80, 443 and 1024-65535.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Programmatically, you choose an integration type by setting the&nbsp;</span><a href=\"https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/#type\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>type</span></a><span>&nbsp;property on the&nbsp;</span><a href=\"https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>Integration</span></a><span>&nbsp;resource. For the Lambda proxy integration, the value is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_PROXY</strong></b><span>. For the Lambda custom integration and all other AWS integrations, it is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS</strong></b><span>. For the HTTP proxy integration and HTTP integration, the value is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP_PROXY</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP</strong></b><span>, respectively. For the mock integration, the&nbsp;type&nbsp;value is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">MOCK</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Since the integration type that is being described in the scenario fits the definition of an&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">HTTP proxy integration</em></i><span>, the correct answer in this scenario is to use the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP_PROXY</strong></b><span>&nbsp;integration type.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS</strong></b><span>&nbsp;is incorrect because this type is only used for&nbsp;Lambda custom integration. Take note that the scenario uses an application hosted in EC2 and not in Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_PROXY</strong></b><span>&nbsp;is incorrect because this type is primarily used for&nbsp;Lambda proxy integration. The scenario didn’t mention that it uses a serverless application or Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP</strong></b><span>&nbsp;is incorrect because this type is only used for HTTP custom integration where you need to specify how the incoming request data is mapped to the integration request and how the resulting integration response data is mapped to the method response.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/setup-http-integrations.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/setup-http-integrations.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html</span></a></p>",
    "choices": [
      {
        "id": 1529880,
        "value": "HTTP",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529881,
        "value": "HTTP_PROXY",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529882,
        "value": "AWS_PROXY",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529883,
        "value": "AWS",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 12,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529881,
        "questionId": 381486,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381486,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company has a website hosted in a multicontainer Docker environment in Elastic Beanstalk. There is a requirement to integrate the website with API Gateway, where it simply passes client-submitted method requests to the backend. It is important that the client and backend interact directly with no intervention from API Gateway after the API method is set up, except for known issues such as unsupported characters.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following integration types is the MOST suitable one to use to meet this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907454,
    "question": "S3 bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon S3 Transfer Acceleration</strong></b><span>&nbsp;enables fast, easy, and secure transfers of files over long distances between your client and your Amazon S3 bucket. Transfer Acceleration leverages Amazon CloudFront’s globally distributed AWS Edge Locations. As data arrives at an AWS Edge Location, data is routed to your Amazon S3 bucket over an optimized network path.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development%20with%20AWS%20Services%20(CDA)-14(hint).jpg\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Transfer for SFTP&nbsp;</strong></b><span>is incorrect because this is just a fully managed service that enables the transfer of files directly into and out of Amazon S3 using the Secure File Transfer Protocol (SFTP) which is also known as Secure Shell (SSH) File Transfer Protocol.&nbsp;It does not provide a&nbsp;fast, easy, and secure way to transfer files over long distances between your client and your Amazon S3 bucket.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Direct Connect&nbsp;</strong></b><span>is incorrect because you have users all around the world and not just on your on-premises data center. Direct Connect would be too costly and is definitely not suitable for this purpose.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CloudFront</strong></b><span>&nbsp;is incorrect because&nbsp;this service is primarily used to serve static content and not as a transfer accelerator going to or from Amazon S3. CloudFront is a fast content delivery network (CDN) service that securely delivers data, videos, applications, and APIs to customers globally with low latency and high transfer speeds.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration-examples.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration-examples.html</span></a></p>",
    "choices": [
      {
        "id": 1529884,
        "value": "AWS Transfer for SFTP",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529885,
        "value": "AWS Direct Connect",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529886,
        "value": "CloudFront",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529887,
        "value": "Amazon S3 Transfer Acceleration",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 13,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529887,
        "questionId": 381487,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381487,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A global financial company has hundreds of users from all over the world that regularly upload terabytes of transactional data to a centralized S3 bucket. You noticed that there are some users from different parts of the globe that take a lot of time to upload their data, which causes delays in the processing. You need to improve data throughput and ensure consistently fast data transfer to the S3 bucket regardless of the user’s location.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following features should you use to satisfy the above requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907455,
    "question": "ECS",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Port mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition, which can be configured in the task definition.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Development with AWS Services (CDA)-15(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For task definitions that use the&nbsp;awsvpc&nbsp;network mode, you should only specify the&nbsp;containerPort. The&nbsp;hostPort&nbsp;can be left blank or it must be the same value as the&nbsp;containerPort.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Port mappings on Windows use the&nbsp;NetNAT&nbsp;gateway address rather than&nbsp;localhost. There is no loopback for port mappings on Windows, so you cannot access a container’s mapped port from the host itself.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Task Definition.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Service scheduler</strong></b><span>&nbsp;is incorrect because&nbsp;this only provides you the ability to run tasks manually (for batch jobs or single run tasks), with Amazon ECS placing tasks on your cluster for you. The service scheduler is ideally suited for long-running stateless services and applications but not for configuring port mappings.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Container instance</strong></b><span>&nbsp;is incorrect because this is just an Amazon EC2 instance running the Amazon ECS container agent and registered into a cluster. When you run tasks with Amazon ECS, your tasks using the EC2 launch type are placed on your active container instances. However, you can’t manually configure the port mappings directly on your container instances but through task definitions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Container Agent</strong></b><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;</em></i><span>is incorrect because this only allows container instances to connect to your cluster. The Amazon ECS container agent is included in the Amazon ECS-optimized AMIs, but you can also install it on any Amazon EC2 instance that supports the Amazon ECS specification. As with the other incorrect options, you can’t configure port mappings with this component.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PortMapping.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PortMapping.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definition_portmappings\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definition_portmappings</span></a></p>",
    "choices": [
      {
        "id": 1529888,
        "value": "Task definition",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529889,
        "value": "Container Agent",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529890,
        "value": "Container instance",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529891,
        "value": "Service scheduler",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 14,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529888,
        "questionId": 381488,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381488,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is building a Docker application using Amazon ECS. The application requires containers to maintain long-lived connections and access specific ports on the host container instance to send or receive traffic using port mapping.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which component of ECS should the developer configure to properly implement this task?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907456,
    "question": "Expose GET method",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In Lambda non-proxy (or custom) integration, you can specify how the incoming request data is mapped to the integration request and how the resulting integration response data is mapped to the method response.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For an AWS service action, you have the AWS integration of the non-proxy type only. API Gateway also supports the mock integration, where API Gateway serves as an integration endpoint to respond to a method request. The Lambda custom integration is a special case of the AWS integration, where the integration endpoint corresponds to the&nbsp;</span><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>function-invoking action&nbsp;</span></a><span>of the Lambda service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Development with AWS Services (CDA)-16(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, you have to enforce the use of a required&nbsp;courseType&nbsp;query string parameter in the&nbsp;/getcourses&nbsp;resource in API Gateway. In order to do this, you can configure the method request of your resource just as shown in the diagram above.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">configure the method request of the resource</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">.</strong></b></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configuring the integration request of the resource&nbsp;</strong></b><span>is incorrect. Although configuring the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">integration request</em></i><span>&nbsp;may also be valid, the client traffic will hit the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">method request</em></i><span>&nbsp;first before it goes to the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">integration request</em></i><span>&nbsp;down to the underlying Lambda function. This is why you should configure the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">method request first</em></i><span>&nbsp;so it won’t be necessary to check the required parameters in the Lambda integration. In addition, the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">integration request</em></i><span>&nbsp;does not have the capability to enforce a request to include certain query string parameter nor enable API caching, unlike the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">method request.</em></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configuring the integration response of the resource&nbsp;</strong></b><span>is incorrect because you have to use the method request. Configuring the response, either the method-type or the integration-type, is irrelevant in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configuring the method response of the resource</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because you should configure the method request instead. Take note that the scenario explicitly mentioned about the required query parameter which needs to be present before the processing can proceed.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html#setup-method-request-model\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html#setup-method-request-model</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format</span></a></p>",
    "choices": [
      {
        "id": 1529892,
        "value": "Configure the integration response of the resource",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529893,
        "value": "Configure the method response of the resource.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529894,
        "value": "Configure the integration request of the resource.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529895,
        "value": "Configure the method request of the resource",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 15,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1529893,
        "questionId": 381489,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381489,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A serverless application is using API Gateway with a non-proxy Lambda Integration. A developer was tasked to expose a GET method on a new&nbsp;/getcourses&nbsp;resource to invoke the Lambda function, which will allow the consumers to fetch a list of online courses in JSON format. The consumers must include a query string parameter named&nbsp;courseType&nbsp;in their request to get the data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What is the MOST efficient solution that the developer should do to accomplish this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907457,
    "question": "CloudFront",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Lambda&nbsp;lets you run Lambda functions to customize the content that CloudFront delivers, executing the functions in AWS locations closer to the viewer. The functions run in response to CloudFront events, without provisioning or managing servers. You can use Lambda functions to change CloudFront requests and responses at the following points:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– After CloudFront receives a request from a viewer (viewer request)</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Before CloudFront forwards the request to the origin (origin request)</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– After CloudFront receives the response from the origin (origin response)</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Before CloudFront forwards the response to the viewer</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development%20with%20AWS%20Services%20(CDA)-17(hint).jpg\"><span>In the given scenario, you can use Lambda&nbsp;to allow your Lambda functions to customize the content that CloudFront delivers and to execute the authentication process in AWS locations closer to the users. In addition, you can set up an origin failover by creating an origin group with two origins with one as the primary origin and the other as the second origin, which CloudFront automatically switches to when the primary origin fails. This will alleviate the occasional HTTP 504 errors that users are experiencing.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers in this scenario are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Customize the content that the CloudFront web distribution delivers to your users using Lambda, which allows your Lambda functions to execute the authentication process in AWS locations closer to the users.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Configure an origin failover by creating an origin group with two origins. Specify one as the primary origin and the other as the second origin which CloudFront automatically switches to when the primary origin returns specific HTTP status code failure responses.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Launch your application to multiple AWS regions to serve your global users. Use a Route 53 record with latency routing policy to route incoming traffic to the region with the best latency to the user</strong></b><span>&nbsp;is incorrect. Although this may resolve the performance issue, this solution entails a significant implementation cost since you have to deploy your application to multiple AWS regions. Remember that the scenario asks for a solution that will&nbsp;improve the performance of the application with minimal cost.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Launch your application to multiple and geographically disperse VPCs on various AWS regions then create a transit VPC to easily connect all your resources. Use several Lambda functions in each region using the AWS Serverless Application Model (SAM) service to improve the overall application performance</strong></b><span>&nbsp;is incorrect. Although setting up multiple VPCs across various regions which&nbsp;are connected with a transit VPC is valid, this solution still entails higher setup and maintenance costs. A more cost-effective option would be to use Lambda&nbsp;instead.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Add a&nbsp;Cache-Control max-age&nbsp;directive to your objects in CloudFront and specify the longest practical value for&nbsp;max-age&nbsp;to increase the cache hit ratio of your CloudFront distribution</strong></b><span>&nbsp;is incorrect because improving the cache hit ratio for the CloudFront distribution is irrelevant in this scenario. You can improve your cache performance by increasing the proportion of your viewer requests that are served from CloudFront edge caches instead of going to your origin servers for content. However, take note that the problem in the scenario is the slow authentication process of your global users and not just the caching of the static objects.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html</span></a></p>",
    "choices": [
      {
        "id": 1529896,
        "value": "Customize the content that the CloudFront web distribution delivers to your users using Lambda@Edge, which allows your Lambda functions to execute the authentication process in AWS locations closer to the users.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529897,
        "value": "Launch your application to multiple AWS regions to serve your global users. Use a Route 53 record with latency routing policy to route incoming traffic to the region with the best latency to the user",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529898,
        "value": "Deploy your app across multiple VPCs in different AWS regions, then create a transit VPC to connect all resources. Use Lambda functions in each region with AWS SAM to enhance overall application performance.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529899,
        "value": "Configure an origin failover by creating an origin group with two origins. Specify one as the primary and the other as the secondary, which CloudFront automatically switches to when the primary returns specific HTTP status code failure responses.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529900,
        "value": "Add a Cache-Control max-age directive to your objects in CloudFront and specify the longest practical value for max-age to increase the cache hit ratio of your CloudFront distribution",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 16,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529896,
        "questionId": 381490,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1529899,
        "questionId": 381490,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381490,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company has an application that is using CloudFront to serve their static contents to their users around the globe. They are receiving a number of bad reviews from their customers lately because it takes a lot of time to log into their website. Sometimes, their users are also getting HTTP 504 errors which is why the developer was instructed to fix this problem immediately.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following combination of options should the developer use together to set up a cost-effective solution for this scenario? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907458,
    "question": "Strategy configuration",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When a task that uses the EC2 launch type is launched, Amazon ECS must determine where to place the task based on the requirements specified in the task definition, such as CPU and memory. Similarly, when you scale down the task count, Amazon ECS must determine which tasks to terminate. You can apply task placement strategies and constraints to customize how Amazon ECS places and terminates tasks.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By default, tasks are randomly placed with RunTask or spread across Availability Zones with CreateService. Spread is typically used to achieve high availability by making sure that multiple copies of a task are scheduled across multiple instances based on attributes such as Availability Zones.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">task placement strategy</strong></b><span>&nbsp;is an algorithm for selecting instances for task placement or tasks for termination. Task placement strategies can be specified when either running a task or creating a new service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon ECS supports the following task placement strategies:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">binpack</strong></b><span>&nbsp;– Place tasks based on the least available amount of CPU or memory. This minimizes the number of instances in use.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">random</strong></b><span>&nbsp;– Place tasks randomly.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">spread</strong></b><span>&nbsp;– Place tasks evenly based on the specified value. Accepted values are attribute key-value pairs,&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">instanceId</em></i><span>, or&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">host</em></i><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-18(hint).jpg\"><span>The spread strategy, contrary to the binpack strategy, tries to put your tasks on as many different instances as possible. It is typically used to achieve high availability and mitigate risks, by making sure that you don’t put all your task-eggs in the same instance-baskets. Spread across Availability Zones, therefore, is the default placement strategy used for services.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When using the spread strategy, you must also indicate a&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">field&nbsp;</em></i><span>parameter. It is used to indicate the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">bins</em></i><span>&nbsp;that you are considering. The accepted values are&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">instanceID</em></i><span>,&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">host</em></i><span>, or a custom attribute key:value pairs such as&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">attribute:ecs.availability-zone</em></i><span>&nbsp;to balance tasks across zones. There are several AWS attributes that start with the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">ecs</em></i><span>&nbsp;prefix, but you can be creative and create your own attributes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the task placement configuration which has a value of&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">\"field\": \"attribute:ecs.availability-zone\", \"type\": \"spread\"</strong></b><span>&nbsp;is correct, because this is using the appropriate strategy for task placement.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The configuration which has a value of&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">“field”: “instanceId”, “type”: “spread”</strong></b><span>&nbsp;is incorrect because although it is using a spread task placement strategy, it distributes tasks evenly across all instances and not to Availability Zones.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The configuration which has a value of&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">“field”: “memory”, “type”: “binpack”</strong></b><span>&nbsp;is incorrect because this is using a strategy that bin packs tasks based on memory. Take note that the scenario is asking for a configuration which will evenly place the tasks across multiple Availability Zones, and not based on memory.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The configuration which has a value of&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">“type”: “random”</strong></b><span>&nbsp;is incorrect because this will just place the tasks on instances randomly. You have to use the spread task placement strategy instead to meet the requirements of the scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/compute/amazon-ecs-task-placement/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/compute/amazon-ecs-task-placement/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html</span></a></p>",
    "choices": [
      {
        "id": 1529901,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>\"placementStrategy\": [\n{\n\"type\": \"random\"\n}\n]</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1529902,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>\"placementStrategy\": [\n{\n\"field\": \"attribute:ecs.availability-zone\",\n\"type\": \"spread\"\n}\n]</code></pre></p>",
        "isCorrect": true,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1529903,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>\"placementStrategy\": [\n{\n\"field\": \"memory\",\n\"type\": \"binpack\"\n}\n]</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1529904,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>\"placementStrategy\": [\n{\n\"field\": \"instanceId\",\n\"type\": \"spread\"\n}\n]</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      }
    ],
    "idx": 17,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529902,
        "questionId": 381491,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381491,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You are developing a high-traffic online stocks trading application, which will be hosted in an ECS Cluster and will be accessed by thousands of investors for intraday stocks trading. Each task of the cluster should be evenly placed across multiple Availability Zones to avoid any service disruptions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST suitable&nbsp;placementStrategy&nbsp;configuration that you should use in your task definition?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907459,
    "question": "Multiple AWS Services",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Step Functions</strong></b><span>&nbsp;provides serverless orchestration for modern applications. Orchestration centrally manages a workflow by breaking it into multiple steps, adding flow logic, and tracking the inputs and outputs between the steps. As your applications execute, Step Functions maintains application state, tracking exactly which workflow step your application is in, and stores an event log of data that is passed between application components. That means that if networks fail or components hang, your application can pick up right where it left off.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development%20with%20AWS%20Services%20(CDA)-19(hint).jpg\"><span>Application development is faster and more intuitive with Step Functions, because you can define and manage the workflow of your application independently from its business logic. Making changes to one does not affect the other. You can easily update and modify workflows in one place, without having to struggle with managing, monitoring and maintaining multiple point-to-point integrations. Step Functions frees your functions and containers from excess code, so your applications are faster to write, more resilient, and easier to maintain.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">SWF</strong></b><span>&nbsp;is incorrect because this is just a fully-managed state tracker and task coordinator service. It does not provide serverless orchestration to multiple AWS resources.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Lambda</strong></b><span>&nbsp;is incorrect. Although it is used for serverless computing, it does not provide a direct way to coordinate multiple AWS services into serverless workflows.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Batch</strong></b><span>&nbsp;is incorrect because it is primarily used to efficiently run hundreds of thousands of batch computing jobs in AWS.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Reference:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/step-functions/features/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/step-functions/features/</span></a></p>",
    "choices": [
      {
        "id": 1529905,
        "value": "SWF",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529906,
        "value": "AWS Batch",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529907,
        "value": "AWS Lambda",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529908,
        "value": "AWS Step Functions",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 18,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529908,
        "questionId": 381492,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381492,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company has assigned a developer to automate the patch management, data synchronization, and other recurring tasks in their department. The developer needs to have a service which can coordinate multiple AWS services into serverless workflows.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST cost-effective service that the developer should implement in this scenario?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907460,
    "question": "ECS",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can configure CloudFront to add specific HTTP headers to the requests that CloudFront receives from viewers and forwards to your origin or&nbsp;</span><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/edge-functions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>edge function</span></a><span>. The values of these HTTP headers are based on the characteristics of the viewer or the viewer request. The headers provide information about the viewer’s device type, IP address, geographic location, request protocol (HTTP or HTTPS), HTTP version, TLS connection details, and&nbsp;JA3 fingerprint.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With these headers, your origin or your edge function can receive information about the viewer without the need for you to write your own code to determine this information. If your origin returns different responses based on the information in these headers, you can include them in the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">cache key</em></i><span>&nbsp;so that CloudFront caches the responses separately. For example, your origin might respond with content in a specific language based on the country that the viewer is in or with content tailored to a specific device type. Your origin might also write these headers to log files, which you can use to determine information about where your viewers are, which device types they’re on, and more.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the given scenario, when a user initiates a request to the website, a CloudFront function can be triggered to inspect the&nbsp;CloudFront-Viewer-Country&nbsp;header, which pinpoints the originating country of a user.&nbsp;CloudFront functions are lightweight Javascript code that you can use to manipulate web requests at the CloudFront edge locations. By using a CloudFront function triggered on “Viewer request” events, you can assess and act upon incoming requests even before they reach the origin or CloudFront retrieves a cached response.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Here’s a representation using a CloudFront function code snippet:</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-20(hint).jpg\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Implement a CloudFront function that returns the appropriate URL based on the&nbsp;CloudFront-Viewer-Country. Configure the distribution to trigger the function on&nbsp;Viewer request&nbsp;events.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Forward the&nbsp;CloudFront-Viewer-Address&nbsp;header to the web server running on the ECS cluster. Implement a custom logic that matches the header’s value against a GeoIP database to determine user location. Based on the resolved location, redirect users to the appropriate region-specific URL&nbsp;</strong></b><span>is incorrect. While this approach is technically valid, it’s more&nbsp;complex since you have to handle the IP-to-location translation on the backend and maintain an up-to-date GeoIP database.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure the Route 53 record to use the geolocation routing policy</strong></b><span>&nbsp;is incorrect.&nbsp;Route 53 geolocation routing is primarily used for directing traffic to specific resources based on user location for performance or regulatory reasons, not for content personalization based on geolocation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use AWS Web Application Firewall (WAF’s) geo-matching rule to identify the user country and attach it to the ALB. Configure ALB listener rules with path conditions to route traffic based on the identified country&nbsp;</strong></b><span>is incorrect.&nbsp;AWS WAF’s geo-matching rule identifies a user’s country based on their IP. However, it’s primarily designed to allow or block access, not for redirection. Even if used in conjunction with ALB, the ALB’s listener rules can’t inherently make routing decisions based on a viewer’s geolocation</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/adding-cloudfront-headers.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/adding-cloudfront-headers.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html</span></a></p>",
    "choices": [
      {
        "id": 1529909,
        "value": "Implement a CloudFront function that returns the appropriate URL based on the CloudFront-Viewer-Country. Configure the distribution to trigger the function on Viewer request events.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529910,
        "value": "Forward the CloudFront-Viewer-Address header to the web server running on the ECS cluster. Implement a custom logic that matches the header’s value against a GeoIP database to determine user location. Based on the resolved location, redirect users to the appropriate region-specific URL",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529911,
        "value": "Configure the Route 53 record to use the geolocation routing policy",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529912,
        "value": "Use AWS Web Application Firewall (WAF's) geo-matching rule to identify the user country and attach it to the ALB. Configure ALB listener rules with path conditions to route traffic based on the identified country.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 19,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529909,
        "questionId": 381493,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381493,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company operates an e-commerce website on Amazon Elastic Container Service (ECS) behind an Application Load Balancer (ALB). They’ve set their ALB as an origin for an Amazon CloudFront distribution. Users interact with the website via a custom domain linked to the CloudFront distribution, all maintained within a public hosted zone in Amazon Route 53.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The company wants to display region-specific pricing tables to its users. For example, when a user from the UK visits the site, they should be redirected to&nbsp;https://abc.com/uk/, while users from the Ukraine should view prices on&nbsp;https://abc.com/ua/</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>How can a developer incorporate this feature in the least amount of development overhead?</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907461,
    "question": "Amazon DynamoDB ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Stage variables are name-value pairs that you can define as configuration attributes associated with a deployment stage of a REST API. They act like environment variables and can be used in your API setup and mapping templates.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For example, you can define a stage variable in a stage configuration and then set its value as the URL string of an HTTP integration for a method in your REST API. Later, you can reference the URL string using the associated stage variable name from the API setup. This way, you can use the same API setup with a different endpoint at each stage by resetting the stage variable value to the corresponding URLs. You can also access stage variables in the mapping templates, or pass configuration parameters to your AWS Lambda or HTTP backend.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With deployment stages in API Gateway, you can manage multiple release stages for each API, such as alpha, beta, and production. Using stage variables, you can configure an API deployment stage to interact with different backend endpoints. For example, your API can pass a GET request as an HTTP proxy to the backend web host (for example,&nbsp;http://tutorialsdojo.com). In this case, the backend web host is configured in a stage variable so that when developers call your production endpoint, API Gateway calls example.com. When you call your beta endpoint, API Gateway uses the value configured in the stage variable for the beta stage, and calls a different web host (for example,&nbsp;beta.tutorialsdojo.com). Similarly, stage variables can be used to specify a different AWS Lambda function name for each stage in your API.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-21(hint).jpg\"><span>You can also use stage variables to pass configuration parameters to a Lambda function through your mapping templates. For example, you may want to re-use the same Lambda function for multiple stages in your API, but the function should read data from a different Amazon DynamoDB table depending on which stage is being called. In the mapping templates that generate the request for the Lambda function, you can use stage variables to pass the table name to Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Stage variables are not applied to the security definitions section of the API specification. For example, you cannot use different Amazon Cognito user pools for different stages.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer in this scenario is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">use stage variables.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Setting up an API Gateway Private Integration to the Lambda function&nbsp;</strong></b><span>is incorrect because&nbsp;this is just used to expose your HTTP/HTTPS resources behind an Amazon VPC to allow access to clients outside of your VPC.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Creating environment variables in the Lambda function&nbsp;</strong></b><span>is incorrect because using an environment variable alone is not enough to meet this requirement. You have to integrate your Lambda function with API Gateway by using a stage variable, along with a proper mapping configuration.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Setting up traffic shifting with Lambda Aliases</strong></b><span>&nbsp;is incorrect because&nbsp;this is just like a pointer to a specific Lambda function version.&nbsp;By using aliases, you can access the Lambda function which the alias is pointing to, without the caller knowing the specific version the alias is pointing to. Take note that we are not talking about different versions of the Lambda functions here as the scenario explicitly mentioned that we have passed the configuration parameters from API Gateway to the Lambda function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/stage-variables.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/stage-variables.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/amazon-api-gateway-using-stage-variables.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/amazon-api-gateway-using-stage-variables.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-configuration.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/lambda/latest/dg/lambda-configuration.html</span></a></p>",
    "choices": [
      {
        "id": 1529913,
        "value": "Set up traffic shifting with Lambda Aliases.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529914,
        "value": "Use Stage Variables.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529915,
        "value": "Set up an API Gateway Private Integration to the Lambda function",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529916,
        "value": "Create environment variables in the Lambda function",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 20,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529914,
        "questionId": 381494,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381494,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company decided to re-use the same Lambda function for multiple stages of their API, but the function should read data from a different Amazon DynamoDB table depending on which stage is being called. In order to accomplish this, they instructed the developer to pass configuration parameters to a Lambda function through mapping templates in API Gateway.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST suitable solution that the developer should use to meet this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907462,
    "question": "Cloud architecture",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the traditional data centre-based model of IT, once the infrastructure is deployed, it typically runs whether it is needed or not, and all the capacity is paid for, regardless of how much it gets used. In the cloud, resources are&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">elastic</strong></b><span>, meaning they can instantly grow or shrink to match the requirements of a specific application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Elasticity allows you to match the supply of resources—which cost money—to demand. Because cloud resources are paid for based on usage, matching needs to utilization is critical for cost optimization. Demand includes both external usage, such as the number of customers who visit a website over a given period, and internal usage, such as an application team using development and test environments.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>There are two basic types of elasticity:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>1. Time-based</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>2. Volume-based</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Time-based elasticity means turning off resources when they are not being used, such as a development environment that is needed only during business hours. Volume-based elasticity means matching scale to the intensity of demand, whether that’s compute cores, storage sizes, or throughput. By combining monitoring, tagging, and automation, you can get the most value out of your AWS resources and optimize costs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By taking advantage of volume-based elasticity, you can scale resources to match capacity. The best tool for accomplishing this task is&nbsp;Auto Scaling, which you can use to optimize performance by automatically increasing the number of EC2 instances during demand spikes and decreasing capacity during lulls to reduce costs. Auto Scaling is well-suited for applications that have stable demand patterns and for ones that experience hourly, daily, or weekly variability in usage.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can also use a combination of ELB and Auto Scaling to maximize the elasticity of your architecture. Beyond Auto Scaling for Amazon EC2, you can use&nbsp;Application Auto Scaling&nbsp;to automatically scale resources for other AWS services, including:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;- Amazon ECS</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;- Amazon EC2 Spot Fleets</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;- Amazon EMR clusters</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;- Amazon AppStream 2.0 stacks and fleets</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;- Amazon DynamoDB</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Development with AWS Services (CDA)-22(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For&nbsp;Amazon EC2 Spot Fleets,&nbsp;it can either launch instances (scale out) or terminate instances (scale in), within the range that you choose, in response to one or more scaling policies.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For Amazon DynamoDB, you can dynamically adjust provisioned throughput capacity in response to actual traffic patterns. This enables a table or a global secondary index to increase its provisioned read and write capacity to handle sudden increases in traffic without throttling. When the workload decreases, Application Auto Scaling decreases the throughput so that you don’t pay for unused provisioned capacity.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon EC2 Spot Fleet.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">– Amazon DynamoDB.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon CloudFront</strong></b><span>&nbsp;is incorrect because this is primarily helpful for scaling out your application. Moreover, the scenario says that the internal application will only be used by about a hundred employees, which clearly doesn’t warrant the use of a CDN or CloudFront.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS WAF</strong></b><span>&nbsp;is incorrect because it only improves the security of your architecture and not its elasticity.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon RDS</strong></b><span>&nbsp;is incorrect.&nbsp;While Amazon RDS offers robust features and scalability, its cost structure can be higher due to the need for continuous instance uptime, storage, and backup costs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html</span></a></p>",
    "choices": [
      {
        "id": 1529917,
        "value": "Amazon CloudFront",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529918,
        "value": "Amazon DynamoDB",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529919,
        "value": "Amazon RDS",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529920,
        "value": "AWS WAF",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529921,
        "value": "Amazon EC2 Spot Fleet",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 21,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529921,
        "questionId": 381495,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1529918,
        "questionId": 381495,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381495,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is designing the cloud architecture of an internal application which will be used by about a hundred employees. She needs to ensure that the architecture is elastic enough to adequately match the supply of resources to the demand while maintaining its cost-effectiveness.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following services can provide the MOST elasticity to the architecture? (Select TWO.)</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907463,
    "question": "AWS CLI",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For commands that possibly return a long list of items, the AWS CLI provides parameters allowing you to limit the number of items included in the output when the AWS CLI queries a service’s API.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By default, the AWS CLI retrieves all accessible items with a page size of 1,000. If you need help running list commands on a large number of resources, the default page size of 1000 may be too large. This can cause calls to AWS services to exceed the maximum allowed time, resulting in a “timed out” error.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Development with AWS Services (CDA)-23(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>One of the pagination options you can use is the&nbsp;--page-size&nbsp;option. This option tells the AWS CLI to request a smaller number of items from each call to the AWS service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;aws s3api list-objects&nbsp;--bucket&nbsp;tdbucket&nbsp;--page-size&nbsp;10</strong></b><span>0</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The CLI still retrieves the entire list, but it makes a greater number of service API calls in the background and retrieves fewer items with each request. This increases the probability that individual calls will succeed in without the use of a timeout.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Apply the pagination parameters in the AWS CLI command.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the AWS CLI timeout value</strong></b><span>&nbsp;is incorrect. Increasing CLI parameters like&nbsp;--cli-connect-timeout&nbsp;or&nbsp;--cli-read-timeout&nbsp;would only prolong the process and increase susceptibility to timeouts due to network latency. On the other hand, pagination would handle large data sets by retrieving objects in manageable chunks, aligning with S3’s response limits and preventing timeouts.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enabling Amazon S3 Transfer Acceleration</strong></b><span>&nbsp;is incorrect because&nbsp;this is only a bucket-level feature that enables faster data transfers to and from Amazon S3. Although this will improve the retrieval times of your objects, this feature will still not paginate the result, which may still cause time-out errors.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enabling CORS</strong></b><span>&nbsp;is incorrect because the Cross-origin resource sharing (CORS) is simply thats allow client web applications that are loaded in one domain to communicate with resources in a different domain. This is not useful in paginating the results from an AWS CLI call.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-pagination.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-pagination.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/s3api/list-objects.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/reference/s3api/list-objects.html</span></a></p>",
    "choices": [
      {
        "id": 1529922,
        "value": "Increase the AWS CLI timeout value",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529923,
        "value": "Enable Amazon S3 Transfer Acceleration",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529924,
        "value": "Apply the pagination parameters in the AWS CLI command",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529925,
        "value": "Enable CORS",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 22,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529925,
        "questionId": 381496,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381496,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is creating a script using AWS CLI to retrieve a list of objects in an S3 bucket.&nbsp;However, the script is timing out if the bucket has tens of thousands of objects.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which solution would most likely rectify the issue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907464,
    "question": "Amazon S3 bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use the Amazon S3 Event Notifications feature to receive notifications when certain events happen in your S3 bucket. To enable notifications, add a notification configuration that identifies the events that you want Amazon S3 to publish. Make sure that it also identifies the destinations where you want Amazon S3 to send the notifications.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-24(hint).jpg\"><span>Amazon S3 can send event notification messages to the following destinations:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Amazon SQS queue</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– AWS Lambda function</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Amazon SNS topic</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Amazon EventBridge</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the given scenario, you can set up a notification for the&nbsp;ObjectCreated:Put&nbsp;event to immediately trigger a Lambda function when an object is uploaded to the S3 bucket.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Set up an Amazon S3 Event Notification to trigger the Lambda function when an&nbsp;ObjectCreated:Put&nbsp;event is detected in the bucket.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enable S3 Storage Lens to monitor the bucket and configure the Lambda function to be invoked whenever the metrics indicate a new object creation&nbsp;</strong></b><span>is incorrect.&nbsp;S3 Storage Lens just provide visibility into storage usage and activity trends. It does not trigger actions or Lambda functions based on object operations.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure an S3 Lifecycle policy to transition images to the&nbsp;INTELLIGENT_TIERING&nbsp;storage class. Use S3 Inventory to generate a report of images that weren’t watermarked and set up the Lambda function to process the report&nbsp;</strong></b><span>is incorrect.&nbsp;S3 Lifecycle policies simply manage storage transitions and object expirations, not event-driven actions like invoking Lambda functions upon uploads. Moreover, S3 Inventory just provides object lists and their metadata, but it doesn’t automatically invoke Lambda functions upon image uploads.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use S3 Object Lambda to process images on retrieval and apply watermarks dynamically before the images are served to users&nbsp;</strong></b><span>is incorrect&nbsp;because S3 Object Lambda is primarily designed to transform objects at retrieval, not at upload. While it can dynamically apply watermarks, it does so when the object is accessed, not as part of the upload process, which would lead to watermarking every time the image is retrieved rather than just once upon upload.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventNotifications.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventNotifications.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-event-notifications.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-event-notifications.html</span></a></p>",
    "choices": [
      {
        "id": 1529926,
        "value": "Configure an S3 Lifecycle policy to transition images to the INTELLIGENT_TIERING storage class. Use S3 Inventory to generate a report of images that weren’t watermarked and set up the Lambda function to process the report.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529927,
        "value": "Enable S3 Storage Lens to monitor the bucket and configure the Lambda function to be invoked whenever the metrics indicate a new object creation.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529928,
        "value": "Set up an Amazon S3 Event Notification to trigger the Lambda function when an ObjectCreated:Put event is detected in the bucket.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529929,
        "value": "Use S3 Object Lambda to process images on retrieval and apply watermarks dynamically before the images are served to users.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 23,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529928,
        "questionId": 381497,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381497,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A media company seeks to protect its copyrighted images from unauthorized distribution. They want images uploaded to their Amazon S3 bucket to be automatically watermarked. A developer has already prepared the Lambda function for this image-processing job.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which option must the developer configure to automatically invoke the function at each upload?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907465,
    "question": "Cross-device syncing ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Cognito Sync</strong></b><span>&nbsp;is an AWS service and client library that enables cross-device syncing of application-related user data. You can use it to synchronize user profile data across mobile devices and the web without requiring your own backend. The client libraries cache data locally so your app can read and write data regardless of device connectivity status. When the device is online, you can synchronize data, and if you set up push sync, notify other devices immediately that an update is available.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon Cognito lets you save end user data in datasets containing key-value pairs. This data is associated with an Amazon Cognito identity, so that it can be accessed across logins and devices. To sync this data between the Amazon Cognito service and an end user’s devices, invoke the synchronize method. Each dataset can have a maximum size of 1 MB. You can associate up to 20 datasets with an identity.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-25(hint).jpg\"><span>The Amazon Cognito Sync client creates a local cache for the identity data. Your app talks to this local cache when it reads and writes keys. This guarantees that all of your changes made on the device are immediately available on the device, even when you are offline. When the synchronize method is called, changes from the service are pulled to the device, and any local changes are pushed to the service. At this point the changes are available to other devices to synchronize.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon Cognito automatically tracks the association between identity and devices. Using the push synchronization, or push sync, feature, you can ensure that every instance of a given identity is notified when identity data changes. Push sync ensures that, whenever the sync store data changes for a particular identity, all devices associated with that identity receive a silent push notification informing them of the change.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is to use&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Cognito Sync</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">.</strong></b></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Cognito User Pools&nbsp;</strong></b><span>is incorrect because this is just a user directory that allows your users to sign in to your web or mobile app through Amazon Cognito.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Cognito Identity Pools&nbsp;</strong></b><span>is incorrect because this simply enables you to create unique identities for your users and federate them with identity providers where you can obtain temporary, limited-privilege AWS credentials to access other AWS services.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Amplify&nbsp;</strong></b><span>is incorrect because this just makes it easy for you to create, configure, and implement scalable mobile and web apps powered by AWS. It does not have the ability to synchronize user profile data across mobile devices.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-sync.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-sync.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/push-sync.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/cognito/latest/developerguide/push-sync.html</span></a></p>",
    "choices": [
      {
        "id": 1529930,
        "value": "Cognito Identity Pools",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529931,
        "value": "AWS Amplify",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529932,
        "value": "Cognito Sync",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529933,
        "value": "Cognito User Pools",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 24,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529932,
        "questionId": 381498,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381498,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A startup has recently launched their new mobile game and is gaining a lot of new users every day. The founders plan to add a new feature which will enable cross-device syncing of user profile data across mobile devices to improve the user experience.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following services should they use to meet this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907466,
    "question": " S3 Bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Multipart upload allows you to upload a single object as a set of parts. Each part is a contiguous portion of the object’s data. You can upload these object parts independently and in any order. If transmission of any part fails, you can retransmit that part without affecting other parts. After all parts of your object are uploaded, Amazon S3 assembles these parts and creates the object. In general, when your object size reaches 100 MB, you should consider using multipart uploads instead of uploading the object in a single operation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-26(hint).jpg\"><span>Using multipart upload provides the following advantages:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp; &nbsp; –&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Improved throughput</strong></b><span>&nbsp;– You can upload parts in parallel to improve throughput.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Quick recovery from any network issues</strong></b><span>&nbsp;– Smaller part size minimizes the impact of restarting a failed upload due to a network error.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Pause and resume object uploads</strong></b><span>&nbsp;– You can upload object parts over time. Once you initiate a multipart upload, there is no expiry; you must explicitly complete or abort the multipart upload.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Begin an upload before you know the final object size</strong></b><span>&nbsp;– You can upload an object as you are creating it.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">using the Multipart Upload API</strong></b><span>&nbsp;is the correct answer in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The options:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the BatchWriteItem API</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the Putltem API</strong></b><span>&nbsp;are incorrect because these are DynamoDB APIs and not S3.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enable Transfer Acceleration in the bucket&nbsp;</strong></b><span>is incorrect because although Transfer Acceleration will significantly reduce the upload time to S3, the bucket in the scenario won’t be able to turn on this feature. Take note that the name of the bucket used for Transfer Acceleration must be DNS-compliant and must not contain periods (“.”).</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Reference:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html</span></a></p>",
    "choices": [
      {
        "id": 1529934,
        "value": "Use the Putltem API.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529935,
        "value": "Use the BatchWriteItem API",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529936,
        "value": "Enable Transfer Acceleration in the bucket.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529937,
        "value": "Use the Multipart upload API",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 25,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529937,
        "questionId": 381499,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381499,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A web application is uploading large files, which are over 4 GB in size, in an S3 bucket called&nbsp;</span><a href=\"http://data.tutorialsdojo.com/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>data.tutorialsdojo.com</span></a><span>&nbsp;every 30 minutes. You want to minimize the time required to upload each file. Which of the following should you do to minimize upload time?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907467,
    "question": "DynamoDB table",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A global secondary index is an index with a partition key and a sort key that can be different from those on the base table. A global secondary index is considered “global” because queries on the index can span all of the data in the base table, across all partitions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To create a table with one or more global secondary indexes, use the CreateTable operation with the GlobalSecondaryIndexes parameter. For maximum query flexibility, you can create up to 20 global secondary indexes (default limit) per table. You must specify one attribute to act as the index partition key; you can optionally specify another attribute for the index sort key. It is not necessary for either of these key attributes to be the same as a key attribute in the table. Global secondary indexes inherit the read/write capacity mode from the base table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-27(hint).jpg\"><span>As shown in the above table, the following are the things that the developer should consider when using a global secondary index:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;–&nbsp;Queries or scans on this index consume capacity units from the index, not from the base table.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;–&nbsp;Queries on this index support eventual consistency only.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The following options are incorrect because these are about local secondary indexes:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;–&nbsp;When you query this index, you can choose either eventual consistency or strong consistency.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;–&nbsp;Queries or scans on this index consume read capacity units from the base table&nbsp;</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;–&nbsp;For each partition key value, the total size of all indexed items must be 10 GB or less.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html</span></a></p>",
    "choices": [
      {
        "id": 1529938,
        "value": "Queries on this index support eventual consistency only.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529939,
        "value": "For each partition key value, the total size of all indexed items must be 10 GB or less",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529940,
        "value": "Queries or scans on this index consume read capacity units from the base table.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529941,
        "value": "When you query this index, you can choose either eventual consistency or strong consistency.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529942,
        "value": "Queries or scans on this index consume capacity units from the index, not from the base table.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 26,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529938,
        "questionId": 381500,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": false,
        "choiceId": 1529941,
        "questionId": 381500,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381500,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is planning to add a global secondary index in a DynamoDB table. This will allow the application to query a specific index that can span all of the data in the base table, across all partitions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following should the developer consider when using this type of index? (Select TWO.)</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907468,
    "question": "API Gateway",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>All of the APIs created with Amazon API Gateway expose&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTPS</strong></b><span>&nbsp;endpoints only. Amazon API Gateway does not support unencrypted (HTTP) endpoints. By default, Amazon API Gateway assigns an internal domain to the API that automatically uses the Amazon API Gateway certificate. When configuring your APIs to run under a custom domain name, you can provide your own certificate for the domain.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;Calling a deployed API involves submitting requests to the URL for the API Gateway component service for API execution, known as&nbsp;execute-api. The base URL for REST APIs is in the following format:</span><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-28(hint).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">https</strong></b><span>://</span><i><em class=\"Editor__editor-text-italic___C9n8O\">{restapi_id}</em></i><span>.execute-api.</span><i><em class=\"Editor__editor-text-italic___C9n8O\">{region}</em></i><span>.amazonaws.com/</span><i><em class=\"Editor__editor-text-italic___C9n8O\">{stage_name}</em></i><span>/</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>where&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">{restapi_id}</em></i><span>&nbsp;is the API identifier,&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">{region}</em></i><span>&nbsp;is the region, and&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">{stage_name}</em></i><span>&nbsp;is the stage name of the API deployment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the most likely cause of the issue in the scenario is that&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">you are not using HTTPS in invoking the API.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">you are not using HTTP/2 in invoking the API</strong></b><span>&nbsp;is incorrect because API Gateway only supports HTTPS.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">you are not using FTP in invoking the API&nbsp;</strong></b><span>is incorrect because API Gateway is using HTTPS to expose the APIs. FTP is primarily used for accessing file servers and not Web APIs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">you are not using WebSocket in invoking the API</strong></b><span>&nbsp;is incorrect because&nbsp;all of the APIs created with Amazon API Gateway expose HTTPS endpoints only.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-call-api.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-call-api.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/api-gateway/faqs/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://aws.amazon.com/api-gateway/faqs/</span></a></p>",
    "choices": [
      {
        "id": 1529943,
        "value": "You are not using HTTP/2 in invoking the API.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529944,
        "value": "You are not using HTTPS in invoking the API",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529945,
        "value": "You are not using FTP in invoking the API.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529946,
        "value": "You are not using WebSocket in invoking the API",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 27,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529944,
        "questionId": 381501,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381501,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You are working as an IT Consultant for a top investment bank in Europe which uses several serverless applications in their AWS account. They just launched a new API Gateway service with a Lambda proxy integration, and you were instructed to test out the new API. However, you are getting a&nbsp;Connection refused&nbsp;error whenever you use this Invoke URL&nbsp;http://779protaw8.execute-api.us-east-1.amazonaws.com/tutorialsdojo/&nbsp;of the API Gateway.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST likely cause of this issue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907469,
    "question": "Synchronisation across devices",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS AppSync</strong></b><span>&nbsp;simplifies application development by letting you create a flexible API to securely access, manipulate, and combine data from one or more data sources. AppSync is a managed service that uses GraphQL to make it easy for applications to get exactly the data they need.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With AppSync, you can build scalable applications, including those requiring real-time updates, on a range of data sources such as NoSQL data stores, relational databases, HTTP APIs, and your custom data sources with AWS Lambda. For mobile and web apps, AppSync additionally provides local data access when devices go offline, and data synchronization with customizable conflict resolution, when they are back online.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/AWSDeveloperAssociate/Development with AWS Services (CDA)-29(hint).jpg\"><span>AWS AppSync is quite similar with Amazon Cognito Sync which is also a service for synchronizing application data across devices. It enables user data like app preferences or game state to be synchronized as well however, the key difference is that, it also extends these capabilities by allowing multiple users to synchronize and collaborate in real time on shared data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">integrate AWS AppSync to your mobile app</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Integrating AWS Amplify to your mobile app&nbsp;</strong></b><span>is incorrect because&nbsp;this service just makes it easy to create, configure, and implement scalable mobile and web apps powered by AWS. This is primarily used to automate the application release process of both your frontend and backend allowing you to deliver features faster, and not for&nbsp;synchronizing application data across devices.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Integrating Amazon Cognito Sync to your mobile app&nbsp;</strong></b><span>is incorrect. Although this service can also be used in synchronizing application data across devices, it does not allow multiple users to synchronize and collaborate in real-time on shared data, unlike AWS AppSync.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Integrating Amazon Pinpoint to your mobile app&nbsp;</strong></b><span>is incorrect because&nbsp;this service simply allows you to engage with your customers across multiple messaging channels. This is primarily used to send push notifications, emails, SMS text messages, and voice messages.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/appsync/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/appsync/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-sync.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span style=\"font-family: Aptos, sans-serif; font-size: 12pt;\">https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-sync.html</span></a></p>",
    "choices": [
      {
        "id": 1529947,
        "value": "Integrate AWS Amplify to your mobile app",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529948,
        "value": "Integrate Amazon Cognito Sync to your mobile app",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529949,
        "value": "Integrate Amazon Pinpoint to your mobile app.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529950,
        "value": "Integrate AWS AppSync to your mobile app.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 28,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529950,
        "questionId": 381502,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381502,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You are developing an online game where the app preferences and game state of the player must be synchronized across devices. It should also allow multiple users to synchronize and collaborate shared data in real time.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST appropriate solution that you should implement in this scenario?</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  },
  {
    "answerId": 37907470,
    "question": "Scenario",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The AWS Serverless Application Model (AWS SAM) is an open source framework for building serverless applications. It provides shorthand syntax to express functions, APIs, databases, and event source mappings. You define the application you want&nbsp;with just a few lines per resource and model it using YAML.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS SAM is natively supported by&nbsp;AWS CloudFormation&nbsp;and provides a simplified way of defining the Amazon API Gateway APIs, AWS Lambda functions, and Amazon DynamoDB tables needed by your serverless application. During deployment, SAM transforms and expands the SAM syntax into AWS CloudFormation syntax. Then, CloudFormation provisions your resources with reliable deployment capabilities.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS SAM</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS CloudFormation&nbsp;</strong></b><span>is incorrect. Although this service can deploy the serverless application to AWS, it is still more appropriate to use AWS SAM instead. AWS SAM can simplify the deployment of the serverless application by deploying all related resources together as a single, versioned entity.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Systems Manager</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because it is&nbsp;more focused on management and operations of AWS resources, such as automation, patching, and configuration, but it is not a deployment or application modeling tool.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Serverless Application Framework&nbsp;</strong></b><span>is incorrect. Although it is a well-known framework for building and deploying serverless applications into the AWS cloud, this is not an AWS native solution. It also does not allow configuration of DynamoDB databases or API Gateway APIs, unlike AWS SAM.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b><br><a href=\"https://aws.amazon.com/serverless/sam/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/serverless/sam/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/serverless/developer-tools/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/serverless/developer-tools/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html</span></a></p>",
    "choices": [
      {
        "id": 1529951,
        "value": "AWS SAM",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529952,
        "value": "AWS CloudFormation",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529953,
        "value": "AWS Systems Manager",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1529954,
        "value": "Serverless Application Framework",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 29,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1529951,
        "questionId": 381503,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 381503,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company is transitioning their systems to AWS due to the limitations of their on-premises data centre. As part of this project, a developer was assigned to build a brand new serverless architecture in AWS, which will be composed of AWS Lambda, API Gateway, and DynamoDB in a single stack. She needs a simple and reliable framework that will allow her to share configuration such as memory and timeouts between resources and deploy all related resources together as a single, versioned entity.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST appropriate service that the developer should use in this scenario?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8077,
      "name": "Development with AWS Services ",
      "skillId": "",
      "categoryId": 1604
    }
  }
]