[
  {
    "answerId": 38887928,
    "question": "ECS Cluster",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">task placement strategy</strong></b><span>&nbsp;is an algorithm for selecting instances for task placement or tasks for termination. Task placement strategies can be specified when either running a task or creating a new service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon ECS supports the following task placement strategies:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">binpack</strong></b><span>&nbsp;– Place tasks based on the least available amount of CPU or memory. This minimizes the number of instances in use.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">random</strong></b><span>&nbsp;– Place tasks randomly.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">spread</strong></b><span>&nbsp;– Place tasks evenly based on the specified value. Accepted values are attribute key-value pairs,&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">instanceId</em></i><span>, or&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">host</em></i><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The scenario states that the developer must select a task placement strategy which will place tasks based on the least available amount of CPU or memory. By using bin pack strategy with CPU as the field parameter, ECS is able to place tasks onto an instance with the least available amount of CPU first, before moving on to the other instances. Hence, the correct answer is to use the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">binpack</strong></b><span>&nbsp;task placement strategy.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">random</strong></b><span>&nbsp;is incorrect&nbsp;because this will place the tasks randomly, rather than placing the tasks to the instances based on the least available amount of CPU or memory.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">spread</strong></b><span>&nbsp;is incorrect because this will place tasks evenly to the instances based on a specified value.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">distinctInstance</strong></b><span>&nbsp;is incorrect because this is not a valid task placement strategy, but a&nbsp;task placement constraint.&nbsp;This is primarily used as a constraint to place each task on a different container instance. It can be specified when either running a task or creating a new service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/compute/amazon-ecs-task-placement/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/compute/amazon-ecs-task-placement/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546222,
        "value": "spread",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546223,
        "value": "random",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546224,
        "value": "binpack",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546225,
        "value": "distinctInstance",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 0,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546224,
        "questionId": 385712,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385712,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is building an e-commerce application which will be hosted in an ECS Cluster. To minimize the number of instances in use, she must select a strategy which will place tasks based on the least available amount of CPU or memory.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following task placement strategy should the developer implement?</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887929,
    "question": "API Gateway",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon DynamoDB Accelerator (DAX) is a fully managed, highly available, in-memory cache for DynamoDB that delivers up to a 10x performance improvement – from milliseconds to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">microseconds</strong></b><span>&nbsp;– even at millions of requests per second. DAX does all the heavy lifting required to add in-memory acceleration to your DynamoDB tables without requiring developers to manage cache invalidation, data population, or cluster management.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>This will enable you to focus on building great applications for your customers without worrying about performance at scale. You do not need to modify application logic since DAX is compatible with existing DynamoDB API calls. You can enable DAX with just a few clicks in the AWS Management Console or using the AWS SDK. Just as with DynamoDB, you only pay for the capacity you provision.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(2).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>One of the key benefits of using DAX is that it works transparently with existing DynamoDB API calls, and the application code does not need to be modified to take advantage of the caching layer. This means that the developer can improve the performance of their DynamoDB applications without having to modify the code, making it easier and more cost-effective to improve application performance.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Set up an Amazon DynamoDB Accelerator (DAX) caching layer in front of the DynamoDB table.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an Amazon MemoryDB for Redis database in front of the DynamoDB table to cache data</strong></b><span>&nbsp;is incorrect. While this might work, it is&nbsp;not the most cost-effective approach because it involves setting up an entirely new database in addition to the existing DynamoDB table. Additionally, this method requires modifying the application code to use the Redis cache for data queries, which can be time-consuming.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use DynamoDB Session Handler to handle the saving and retrieval of player data</strong></b><span>&nbsp;is incorrect because this is just a custom session handler for PHP and does not provide any caching functionality. It&nbsp;is not a suitable approach to reduce the number of database queries for data that rarely change.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Switch the DynamoDB table’s capacity mode to On-demand</strong></b><span>&nbsp;is incorrect.&nbsp;While it may help improve performance by automatically scaling the read capacity in response to traffic changes, it does not address the main objective of reducing the number of database queries for data that rarely change.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/dynamodb/dax\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/dynamodb/dax</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/caching/aws-caching/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/caching/aws-caching/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546226,
        "value": "Set up an Amazon DynamoDB Accelerator (DAX) caching layer in front of the DynamoDB table",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546227,
        "value": "Create an Amazon MemoryDB for Redis database in front of the DynamoDB table to cache data.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546228,
        "value": "Use DynamoDB Session Handler to handle the saving and retrieval of player data.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546229,
        "value": "Switch the DynamoDB table’s capacity mode to On-demand.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 1,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546226,
        "questionId": 385713,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385713,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A mobile game has a serverless backend consisting of an API Gateway backed by Lambda functions and a DynamoDB table in provisioned capacity mode, where player data is stored. While the game has maintained a consistent level of traffic, recent growth in the player base has caused response times to slow down. To improve performance, the developer wants to reduce the number of database queries for data that rarely change.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What approach can the developer take to achieve this goal cost-effectively and with less development overhead?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887930,
    "question": "Auto Scaling group",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data can be published to Amazon CloudWatch Logs and Amazon S3. After you’ve created a flow log, you can retrieve and view its data in the chosen destination.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">(screen how to enable VPC flow logs &nbsp;in console)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Flow logs can help you with a number of tasks; for example, to troubleshoot why specific traffic is not reaching an instance, which in turn helps you diagnose overly restrictive security group rules. You can also use flow logs as a security tool to monitor the traffic that is reaching your instance. CloudWatch Logs charges apply when using flow logs, whether you send them to CloudWatch Logs or to Amazon S3.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, you should&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">create a flow log in your VPC</strong></b><span>&nbsp;to&nbsp;capture information about the IP traffic going to and from network interfaces in your VPC.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using CloudTrail logs to track all API calls and capture information about the IP traffic going to and from your VPC&nbsp;</strong></b><span>is incorrect. Although you can indeed use CloudTrail to track the API call, it can’t capture information about the IP traffic of your VPC.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Installing and running the AWS X-Ray daemon to your EC2 instances using an instance metadata script</strong></b><span>&nbsp;is incorrect because you have to use a user data script and not a metadata. Alternatively, you can instrument your application which is running in an EC2 instance to capture the client’s IP address. However, it is much easier to just enable VPC Flow Logs to meet the requirement.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using AWS Inspector to capture information about the IP traffic going to and from the network interfaces of your EC2 instances</strong></b><span>&nbsp;is incorrect because this service is just an automated security assessment service that helps improve the security and compliance of applications deployed on AWS. It doesn’t have the ability to capture IP traffic of your VPC.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon-ec2.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon-ec2.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546230,
        "value": "Use CloudTrail logs to track all API calls and capture information about the IP traffic going to and from your VPC.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546231,
        "value": "Install and run the AWS X-Ray daemon to your EC2 instances using an instance metadata script.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546232,
        "value": "Create a flow log in your VPC.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546233,
        "value": "Use AWS Inspector to capture information about the IP traffic going to and from the network interfaces of your EC2 instances",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 2,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546232,
        "questionId": 385714,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385714,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An online stock trading platform is hosted in an Auto Scaling group of EC2 instances with an Application Load Balancer in front to distribute the incoming traffic evenly. The developer must capture information about the IP traffic going to and from network interfaces in your VPC to comply with financial regulatory requirements.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following options should the developer do to meet the requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887931,
    "question": " Legacy web application",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon ElastiCache</strong></b><span>&nbsp;for Redis is a blazing fast in-memory data store that provides sub-millisecond latency to power internet-scale real-time applications. Built on open-source Redis and compatible with the Redis APIs, ElastiCache for Redis works with your Redis clients and uses the open Redis data format to store your data. Your self-managed Redis applications can work seamlessly with ElastiCache for Redis without any code changes. ElastiCache for Redis combines the speed, simplicity, and versatility of open-source Redis with manageability, security, and scalability from Amazon to power the most demanding real-time applications in Gaming, Ad-Tech, E-Commerce, Healthcare, Financial Services, and IoT.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(4).jpg\"><span>In order to address scalability and provide a shared data storage for sessions that can be accessible from any individual web server, you can abstract the HTTP sessions from the web servers themselves. A common solution to for this is to leverage an In-Memory Key/Value store such as Redis and Memcached. While Key/Value data stores are known to be extremely fast and provide sub-millisecond latency, the added network latency and added cost are the drawbacks. An added benefit of leveraging Key/Value stores is that they can also be utilized to cache any data, not just HTTP sessions, which can help boost the overall performance of your applications.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With Redis, you can keep your data on disk with a point in time snapshot which can be used for archiving or recovery. Redis also lets you create multiple replicas of a Redis primary. This allows you to scale database reads and to have highly available clusters. Hence, the correct answer for this scenario is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">use an ElastiCache for Redis cluster to store the user session state of the application.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Store the user session state of the application using CloudFront&nbsp;</strong></b><span>is incorrect because CloudFront is not suitable for storing user session data. It is primarily used as a content delivery network.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use an ElastiCache for Memcached cluster to store the user session state of the application&nbsp;</strong></b><span>is incorrect. Although using ElastiCache is a viable answer, Memcached is not as highly available as Redis.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use Sticky Sessions with Local Session Caching</strong></b><span>&nbsp;is incorrect. Although this is also a viable solution, it doesn’t offer durability and high availability compared to a distributed session management solution. The best solution for this scenario is to use an ElastiCache for Redis cluster.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/caching/session-management\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/caching/session-management</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/elasticache/redis-vs-memcached/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/elasticache/redis-vs-memcached/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/elasticache/redis/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/elasticache/redis/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546234,
        "value": "Use Sticky Sessions with Local Session Caching.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546235,
        "value": "Use an ElastiCache for Redis cluster to store the user session state of the application.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546236,
        "value": "Store the user session state of the application using CloudFront.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546237,
        "value": "Use an ElastiCache for Memcached cluster to store the user session state of the application.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 3,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546234,
        "questionId": 385715,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385715,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is moving a legacy web application from their on-premises data center to AWS. The application is used simultaneously by thousands of users, and their session states are stored in memory. The on-premises server usually reaches 100% CPU Utilization every time there is a surge in the number of people accessing the application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the best way to re-factor the performance and availability of the application’s session management once it is migrated to AWS?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887932,
    "question": " EC2 instances",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Resharding enables you to increase or decrease the number of shards in a stream in order to adapt to changes in the rate of data flowing through the stream. The Kinesis Client Library (KCL) ensures that for every shard there is a record processor running and processing that shard. It also tracks the shards in the stream using an Amazon DynamoDB table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(5).jpg\"><span>Typically, when you use the KCL, you should ensure that the number of instances does not exceed the number of shards (except for failure standby purposes). Each shard is processed by exactly one KCL worker and has exactly one corresponding record processor, so you never need multiple instances to process one shard. However, one worker can process any number of shards, so it’s fine if the number of shards exceeds the number of instances.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To scale up processing in your application, you should test a combination of these approaches:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– Increasing the instance size (because all record processors run in parallel within a process)</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– Increasing the number of instances up to the maximum number of open shards (because shards can be processed independently)</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– Increasing the number of shards (which increases the level of parallelism)</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Thus, the maximum number of instances you can launch is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">6</strong></b><span>, to match the number of open shards in a ratio of 1:1.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Although you can launch&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">3</strong></b><span>&nbsp;instances in which each instance handles 2 shards, this is not the maximum number of instances you can deploy for your application. Hence, this option is incorrect. Take note that the maximum number of your instances is not half the number of open shards.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Just like the above option, you can also launch&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">5</strong></b><span>&nbsp;instances in which each instance handles 3 shards. However, this is not the maximum number of instances you can launch. Keep in mind that the maximum number of your instances can be equal to the number of open shards of the Kinesis stream. Therefore, this option is also incorrect.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Launching&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">12</strong></b><span>&nbsp;instances is incorrect because you should ensure that the number of instances does not exceed the number of open shards. The maximum number of instances that you should deploy is 6.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546238,
        "value": "12",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546239,
        "value": "6",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546240,
        "value": "5",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546241,
        "value": "3",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 4,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546239,
        "questionId": 385716,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385716,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Your application is processing one Kinesis data stream which has four shards, and each instance has one KCL worker. To scale up processing in your application, you reshard your stream to increase the number of open shards to six.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What is the MAXIMUM number of EC2 instances that you should launch to achieve optimum performance?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887933,
    "question": "Serverless architecture",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Serverless Application Model (AWS SAM)</strong></b><span>&nbsp;is an open-source framework that you can use to build serverless applications on AWS. It consists of the AWS SAM template specification that you use to define your serverless applications and the AWS SAM command line interface (AWS SAM CLI) that you use to build, test, and deploy your serverless applications.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(6).jpg\"><span>Because AWS SAM is an extension of AWS CloudFormation, you get the reliable deployment capabilities of AWS CloudFormation. You can define resources by using AWS CloudFormation in your AWS SAM template. Also, you can use the full suite of resources, intrinsic functions, and other template features that are available in AWS CloudFormation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use AWS SAM with a suite of AWS tools for building serverless applications. The AWS SAM CLI lets you locally build, test, and debug serverless applications that are defined by AWS SAM templates. The CLI provides a Lambda-like execution environment locally. It helps you catch issues upfront by providing parity with the actual Lambda execution environment. To step through and debug your code to understand what the code is doing, you can use AWS SAM with AWS toolkits like the AWS Toolkit for JetBrains, AWS Toolkit for PyCharm, AWS Toolkit for IntelliJ, and AWS Toolkit for Visual Studio Code. This tightens the feedback loop by making it possible for you to find and troubleshoot issues that you might run into in the cloud.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Therefore, the most suitable service to use in this scenario is</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;AWS Serverless Application Model (AWS SAM)</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS CloudFormation</strong></b><span>&nbsp;is incorrect. Although this service can certainly be used to deploy Lambda, API Gateway, DynamoDB, and other AWS resources of your serverless application, it doesn’t have the capability to locally build, test, and debug your application like what AWS SAM has. In addition, AWS SAM is a more suitable service to use if you want to deploy and manage your serverless applications in AWS just as mentioned above.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Systems Manager</strong></b><span>&nbsp;is incorrect because this service is primarily used for managing resources in your AWS environment, not for building, testing, and debugging serverless applications.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Elastic Beanstalk</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because this service is not suitable for deploying serverless applications. In addition,&nbsp;it doesn’t have the capability to locally build, test, and debug your serverless applications as effectively as what AWS SAM can do.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546242,
        "value": "AWS Serverless Application Model (AWS SAM)",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546243,
        "value": "AWS CloudFormation",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546244,
        "value": "AWS Systems Manager",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546245,
        "value": "AWS Elastic Beanstalk",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 5,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546242,
        "questionId": 385717,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385717,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is instructed to set up a new serverless architecture composed of AWS Lambda, API Gateway, and DynamoDB in a single stack. The new architecture should allow the developer to locally build, test, and debug serverless applications.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following should the developer use to satisfy the above requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887934,
    "question": "AWS CLI",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For commands that possibly return a long list of items, the AWS CLI provides parameters allowing you to limit the number of items included in the output when the AWS CLI queries a service’s API.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By default, the AWS CLI retrieves all accessible items with a page size of 1,000. If you need help running list commands on a large number of resources, the default page size of 1000 may be too large. This can cause calls to AWS services to exceed the maximum allowed time, resulting in a “timed out” error.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(7).jpg\"><span>One of the pagination options you can use is the&nbsp;--page-size&nbsp;option. This option tells the AWS CLI to request a smaller number of items from each call to the AWS service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;aws s3api list-objects&nbsp;--bucket&nbsp;tdbucket&nbsp;--page-size&nbsp;100</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The CLI still retrieves the entire list, but it makes a greater number of service API calls in the background and retrieves fewer items with each request. This increases the probability that individual calls will succeed in without the use of a timeout.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Apply the pagination parameters in the AWS CLI command.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the AWS CLI timeout value</strong></b><span>&nbsp;is incorrect. Increasing CLI parameters like&nbsp;--cli-connect-timeout&nbsp;or&nbsp;--cli-read-timeout&nbsp;would only prolong the process and increase susceptibility to timeouts due to network latency. On the other hand, pagination would handle large data sets by retrieving objects in manageable chunks, aligning with S3’s response limits and preventing timeouts.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enabling Amazon S3 Transfer Acceleration</strong></b><span>&nbsp;is incorrect because&nbsp;this is only a bucket-level feature that enables faster data transfers to and from Amazon S3. Although this will improve the retrieval times of your objects, this feature will still not paginate the result, which may still cause time-out errors.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enabling CORS</strong></b><span>&nbsp;is incorrect because the Cross-origin resource sharing (CORS) is simply thats allow client web applications that are loaded in one domain to communicate with resources in a different domain. This is not useful in paginating the results from an AWS CLI call.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-pagination.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-pagination.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/s3api/list-objects.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/reference/s3api/list-objects.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546246,
        "value": "Enable CORS",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546247,
        "value": "Apply the pagination parameters in the AWS CLI command",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546248,
        "value": "Enable Amazon S3 Transfer Acceleration",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546249,
        "value": "Increase the AWS CLI timeout value",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 6,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546247,
        "questionId": 385718,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385718,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is creating a script using AWS CLI to retrieve a list of objects in an S3 bucket.&nbsp;However, the script is timing out if the bucket has tens of thousands of objects.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which solution would most likely rectify the issue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887935,
    "question": "DynamoDB table",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon DynamoDB</strong></b><span>&nbsp;provides fast access to items in a table by specifying primary key values. However, many applications might benefit from having one or more secondary (or alternate) keys available, to allow efficient access to data with attributes other than the primary key. To address this, you can create one or more secondary indexes on a table, and issue&nbsp;Query&nbsp;or&nbsp;Scan&nbsp;requests against these indexes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A&nbsp;</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">secondary index</strong></b></i><span>&nbsp;is a data structure that contains a subset of attributes from a table, along with an alternate key to support&nbsp;Query&nbsp;operations. You can retrieve data from the index using a&nbsp;Query, in much the same way as you use&nbsp;Query&nbsp;with a table. A table can have multiple secondary indexes, which gives your applications access to many different query patterns.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>DynamoDB supports two types of secondary indexes:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Global secondary index</strong></b></a><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;—&nbsp;</strong></b><span>an index with a partition key and a sort key that can be different from those on the base table. A global secondary index is considered “global” because queries on the index can span all of the data in the base table, across all partitions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LSI.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Local secondary index</strong></b></a><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;—&nbsp;</strong></b><span>an index that has the same partition key as the base table, but a different sort key. A local secondary index is “local” in the sense that every partition of a local secondary index is scoped to a base table partition that has the same partition key value.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To speed up queries on non-key attributes, you can create a global secondary index. A global secondary index contains a selection of attributes from the base table, but they are organized by a primary key that is different from that of the table. The index key does not need to have any of the key attributes from the table; it doesn’t even need to have the same key schema as a table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, you could create a global secondary index named&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">GameTitleIndex</em></i><span>, with a partition key of&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">GameTitle</em></i><span>&nbsp;and a sort key of&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">TopScore</em></i><span>. Since the base table’s primary key attributes are always projected into an index, the UserId attribute is also present. The following diagram shows what&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">GameTitleIndex</em></i><span>&nbsp;index would look like:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(8).jpg\"><span>Hence, the correct answer in this scenario is to:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a global secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a local secondary index. Assign the TopScore attribute as the partition key and the GameTitle attribute as the sort key</strong></b><span>&nbsp;is incorrect. You can’t add a local secondary index to an existing table. Moreover, even if it’s possible, making a query that returns the top scores for each game is impossible with the TopScore attribute as the partition key. When you issue a query, you must also specify a partition key. In this case, if you run a query with a partition key value of 500, the results might return different games with a score of 500 from various users. It does not tell if it’s the highest score in that game.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a local secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key&nbsp;</strong></b><span>is incorrect because you can’t add this index to an already existing table. Additionally, a local secondary&nbsp;index has the same partition key as the base table, but has a different sort key. It is “local” in the sense that every partition of a local secondary index is scoped to a base table partition that has the same partition key value.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the&nbsp;Scan&nbsp;operation and filter the results based on a GameTitle value&nbsp;</strong></b><span>is incorrect. Technically, this also works but it is less efficient and slower compared to querying on secondary indexes. The&nbsp;Scan&nbsp;operation reads every item in a table. As the table grows, the slower the&nbsp;Scan&nbsp;operation would become.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546250,
        "value": "Create a local secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546251,
        "value": "Use the Scan operation and filter the results based on a GameTitle value.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546252,
        "value": "Create a local secondary index. Assign the TopScore attribute as the partition key and the GameTitle attribute as the sort key.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546253,
        "value": "Create a global secondary index. Assign the GameTitle attribute as the partition key and the TopScore attribute as the sort key.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 7,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546253,
        "questionId": 385719,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385719,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A mobile game is using a DynamoDB table named&nbsp;GameScore&nbsp;that keeps track of users and scores. Each item in the table&nbsp;is identified by a partition key (UserId) and a sort key (GameTitle). The diagram below shows how the items in the table are organized:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/q8.jpg\"><span>A developer wants to write a leaderboard application to display the top scores for each game.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>How can the developer meet the requirement in the MOST efficient manner?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887936,
    "question": "Elastic Beanstalk",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS resources created for a worker environment tier include an Auto Scaling group, one or more Amazon EC2 instances, and an IAM role. For the worker environment tier, Elastic Beanstalk also creates and provisions an Amazon SQS queue if you don’t already have one. When you launch a worker environment tier, Elastic Beanstalk installs the necessary support files for your programming language of choice and a daemon on each EC2 instance in the Auto Scaling group.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The daemon is responsible for pulling requests from an Amazon SQS queue and then sending the data to the web application running in the worker environment tier that will process those messages. If you have multiple instances in your worker environment tier, each instance has its own daemon, but they all read from the same Amazon SQS queue.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(9).jpg\"><span>You can define periodic tasks in a file named&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">cron.yaml</strong></b><span>&nbsp;in your source bundle to add jobs to your worker environment’s queue automatically at a regular intervals. For example, you can configure and upload a cron.yaml file, which creates two periodic tasks: one that runs every 12 hours and a second that runs at 11 pm UTC every day.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, using the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">cron.yaml&nbsp;</strong></b><span>is the correct configuration file to be used in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Dockerrun.aws.json&nbsp;</strong></b><span>is incorrect because&nbsp;this configuration file is primarily used in multi-container Docker environments that are hosted in Elastic Beanstalk. This can be used alone or combined with source code and content in a source bundle to create an environment on a Docker platform.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">env.yaml&nbsp;</strong></b><span>is incorrect because this is primarily used&nbsp;to configure the environment name, solution stack, and environment links to use when creating your environment in Elastic Beanstalk.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">appspec.yml&nbsp;</strong></b><span>is incorrect because this is used to manage each application deployment as a series of lifecycle event hooks in CodeDeploy and not in Elastic Beanstalk.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#worker-periodictasks\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#worker-periodictasks</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-sourcebundle.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/applications-sourcebundle.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546254,
        "value": "cron.yaml",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546255,
        "value": "Dockerrun.aws.json",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546256,
        "value": "appspec.yml",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546257,
        "value": "env.yaml",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 8,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546254,
        "questionId": 385720,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385720,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is instructed to configure a worker daemon to queue messages based on a specific schedule using a worker environment hosted in Elastic Beanstalk. Periodic tasks should be defined to automatically add jobs to your worker environment’s queue at regular intervals.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which configuration file should the developer add to the source bundle to meet the above requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887937,
    "question": " ElastiCache cluster",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Lazy Loading is a caching strategy that loads data into the cache only when necessary. Here is how it works:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(10).jpg\"><span>– If the data exists in the cache and is current, ElastiCache returns the data to your application. This event is also called “</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Cache Hit</strong></b><span>“.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– If there is a “</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Cache Miss</strong></b><span>“, or in other words, the data does not exist in the cache, or the data in the cache has expired, then your application requests the data from your data store, which returns the data to your application. Your application then writes the data received from the store to the cache so it can be more quickly retrieved the next time it is requested.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the scenario, to implement lazy loading, you must&nbsp;first check if the item is already in the cache using the “cache.get(item_id)” method. If the item is not in the cache (i.e. “item_value is None”), the code then queries the database for the item and stores it in the cache using the “cache.set(item_id, item_value)” method so that it can be retrieved faster next time. This way, the application is not querying the database every time the item is needed and instead uses the cached version of the item if it’s available.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is the option that says:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">get_item(item_id):</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; item_value = cache.get(item_id)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; if item_value is None:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item_value = database.query(\"SELECT * FROM Items WHERE id = ?\", item_id)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">cache.add(item_id, item_value)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; return item_value</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">get_item(item_id):</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; item_value = database.query(\"SELECT * FROM Items WHERE id = ?\", item_id)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; if item_value is None:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item_value = cache.set(item_id, item_value)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">cache.add(item_id, item_value)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; return item_value</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>is an incorrect implementation of lazy loading because it first queries the database and checks if the item is in the cache.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">get_item(item_id):</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; item_value = cache.get(item_id)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; if item_value is not None:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item_value = database.query(\"SELECT * FROM Items WHERE id = ?\", item_id)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">cache.add(item_id, item_value)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return item_value</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; else:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return item_value</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>does not implement lazy loading because the code is not utilizing the cache first and is querying the database every time the item is needed, this will make the application slow and inefficient.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">get_item(item_id, item_value):</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; item_value = database.query(\"UPDATE Items WHERE id = ?\", item_id, item_value)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">cache.add(item_id, item_value)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp; return 'ok'</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>is incorrect because this is an implementation of a write-through caching strategy&nbsp;where data is written to both the cache and the primary storage (such as a database).</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/caching/best-practices/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/caching/best-practices/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546258,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>get_item(item_id, item_value):\n\n    item_value = database.query(\"UPDATE Items WHERE id = ?\", item_id, item_value)\n\n    cache.add(item_id, item_value)\n\n    return 'ok'\n</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1546259,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>get_item(item_id):\n\n    item_value = cache.get(item_id)\n\n    if item_value is not None:\n\n        item_value = database.query(\"SELECT * FROM Items WHERE id = ?\", item_id)\n\n        cache.add(item_id, item_value)\n\n        return item_value\n\n    else:\n\n        return item_value\n</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1546260,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>get_item(item_id):\n\n    item_value = cache.get(item_id)\n\n    if item_value is None:\n\n        item_value = database.query(\"SELECT * FROM Items WHERE id = ?\", item_id)\n\n        cache.add(item_id, item_value)\n\n    return item_value\n</code></pre></p>",
        "isCorrect": true,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1546261,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>get_item(item_id):\n\n    item_value = database.query(\"SELECT * FROM Items WHERE id = ?\", item_id)\n\n    if item_value is None:\n\n        item_value = cache.set(item_id, item_value)\n\n        cache.add(item_id, item_value)\n\n    return item_value\n</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      }
    ],
    "idx": 9,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546260,
        "questionId": 385721,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385721,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A web application is using an ElastiCache cluster that is suffering from cache churn. A developer needs to reconfigure the application so that data are retrieved from the database only in the event that there is a cache miss.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which pseudocode illustrates the caching strategy that the developer needs to implement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887938,
    "question": "Elastic Beanstalk",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If your application performs operations or workflows that take a long time to complete, you can offload those tasks to a dedicated&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">worker environment</em></i><span>. Decoupling your web application front end from a process that performs blocking operations is a common way to ensure that your application stays responsive under load.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A long-running task is anything that substantially increases the time it takes to complete a request, such as processing images or videos, sending emails, or generating a ZIP archive. These operations can take only a second or two to complete, but a delay of a few seconds is a lot for a web request that would otherwise complete in less than 500 ms.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(11).jpg\"><span>One option is to spawn a worker process locally, return success, and process the task asynchronously. This works if your instance can keep up with all of the tasks sent to it. Under high load, however, an instance can become overwhelmed with background tasks and become unresponsive to higher-priority requests. If individual users can generate multiple tasks, the increase in load might not correspond to an increase in users, making it hard to scale out your web server tier effectively.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To avoid running long-running tasks locally, you can use the AWS SDK for your programming language to send them to an Amazon Simple Queue Service (Amazon SQS) queue and run the process that performs them on a separate set of instances. You then design these worker instances to take items from the queue only when they have the capacity to run them, preventing them from becoming overwhelmed.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Elastic Beanstalk worker environments simplify this process by managing the Amazon SQS queue and running a&nbsp;</span><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#worker-daemon\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>daemon process</span></a><span>&nbsp;on each instance that reads from the queue for you. When the daemon pulls an item from the queue, it sends an HTTP POST request locally to&nbsp;http://localhost/&nbsp;on port 80 with the contents of the queue message in the body. All that your application needs to do is perform the long-running task in response to the POST. You can&nbsp;</span><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#using-features-managing-env-tiers-worker-settings\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>configure the daemon</span></a><span>&nbsp;to post to a different path, use a MIME type other than application/JSON, connect to an existing queue, or customize connections (maximum concurrent requests), timeouts, and retries.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the best solution to meet the requirements of this scenario is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">use an Elastic Beanstalk worker environment to process the tasks asynchronously.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Spawning a worker process locally in the EC2 instances then processing the tasks asynchronously&nbsp;</strong></b><span>is incorrect. Although this is a valid solution, it is not scalable and hence, it’s not the best one. Under high load, an instance can become overwhelmed with background tasks and become unresponsive to higher priority requests. This makes it hard to scale out your web server tier effectively.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using a multicontainer docker environment in Elastic Beanstalk to process the long-running tasks asynchronously</strong></b><span>&nbsp;is incorrect because this is primarily used to&nbsp;support multiple containers per Amazon EC2 instance with multicontainer Docker platform. This is not applicable when processing long-running tasks and it is not scalable since it’s not using an SQS queue.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using an Amazon ECS Cluster with a Fargate launch type to process the tasks asynchronously&nbsp;</strong></b><span>is incorrect because Fargate just allows you to run your containerized applications without the need to provision and manage the backend infrastructure.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_docker_ecs.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_docker_ecs.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546262,
        "value": "Spawn a worker process locally in the EC2 instances and process the tasks asynchronously.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546263,
        "value": "Use a multicontainer docker environment in Elastic Beanstalk to process the long-running tasks asynchronously.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546264,
        "value": "Use an Amazon ECS Cluster with a Fargate launch type to process the tasks asynchronously.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546265,
        "value": "Use an Elastic Beanstalk worker environment to process the tasks asynchronously.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 10,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546263,
        "questionId": 385722,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385722,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An application performs various workflows and processes long-running tasks that take a long time to complete. Users are complaining that the application is unresponsive since the workflow substantially increases the time it takes to complete a user request. The development team is looking for a managed solution that can handle background tasks efficiently, scale automatically, and integrate seamlessly with the existing application deployed on Elastic Beanstalk.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the BEST way to improve the performance of the application?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887939,
    "question": "X-Ray console ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Elastic Beanstalk</strong></b><span>&nbsp;console or a configuration file to run the AWS X-Ray daemon on the instances in your environment. X-Ray is an AWS service that gathers data about the requests that your application serves, and uses it to construct a service map that you can use to identify issues with your application and opportunities for optimization.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(12).jpg\"><span>To relay trace data from your application to AWS X-Ray, you can run the X-Ray daemon on your Elastic Beanstalk environment’s Amazon EC2 instances.&nbsp;Elastic Beanstalk platforms provide a configuration option that you can set to run the daemon automatically. You can enable the daemon in a configuration file in your source code or by choosing an option in the Elastic Beanstalk console. When you enable the configuration option, the daemon is installed on the instance and runs as a service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is to:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">enable the X-Ray daemon by including the&nbsp;xray-daemon.config&nbsp;configuration file in the&nbsp;.ebextensions&nbsp;directory of your source code</strong></b><span>, just as shown above.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using a user data script to run the daemon automatically&nbsp;</strong></b><span>is incorrect because this is only applicable if you want to enable X-Ray to your EC2 instances.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Creating a Docker image that runs the X-Ray daemon&nbsp;</strong></b><span>is incorrect because this is what you need to do if you want to enable X-Ray on ECS Cluster and not on Elastic Beanstalk.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Enabling active tracing in the Elastic Beanstalk by including the&nbsp;healthcheckurl.config&nbsp;configuration file in the&nbsp;.ebextensions&nbsp;directory of your source code</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because this configuration file only sets the application&nbsp;health check&nbsp;URL and not X-Ray Tracing.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon-beanstalk.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon-beanstalk.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-configuration-debugging.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-configuration-debugging.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546266,
        "value": "Enable the X-Ray daemon by including the xray-daemon.config configuration file in the .ebextensions directory of your source code.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546267,
        "value": "Use a user data script to run the daemon automatically.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546268,
        "value": "Enable active tracing in the Elastic Beanstalk by including the healthcheckurl.config configuration file in the .ebextensions directory of your source code.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546269,
        "value": "Create a Docker image that runs the X-Ray daemon.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 11,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546267,
        "questionId": 385723,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385723,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A new IT policy requires you to trace all calls that your&nbsp;Node.js application sends to external HTTP web APIs as well as SQL database queries. You have to instrument your application, which is hosted in Elastic Beanstalk, in order to properly trace the calls via the X-Ray console .</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What should you do to comply with the given requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887940,
    "question": "Lambda function ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS Lambda uses the VPC information you provide to set up ENIs that allow your Lambda function to access VPC resources. Each ENI is assigned a private IP address from the IP address range within the subnets you specify but is not assigned any public IP addresses.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(13).jpg\"><span>Therefore, if your Lambda function requires Internet access (for example, to access AWS services that don’t have VPC endpoints ), you can configure a NAT instance inside your VPC, or you can use the Amazon VPC NAT gateway. You cannot use an Internet gateway attached to your VPC since that requires the ENI to have public IP addresses.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If your Lambda function needs Internet access, just as described in this scenario, do not attach it to a public subnet or to a private subnet without Internet access. Instead, attach it only to private subnets with Internet access through a NAT instance or&nbsp;add a NAT gateway to your VPC. You should also&nbsp;ensure that the associated security group of the Lambda function allows outbound connections.&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;Submit a limit increase request to AWS to raise the concurrent executions limit of your Lambda function&nbsp;is incorrect because&nbsp;the root cause of the problem is that the function cannot connect to public GraphQL APIs over the Internet. The scenario doesn’t mention anything about a concurrency problem.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;Configuring your function to forward payloads that were not processed to a dead-letter queue (DLQ) using Amazon SQS&nbsp;is incorrect because it will only improve the error handling of your Lambda function. The issue here is the Internet connectivity of your function and not its error handling hence, this option will not solve the problem.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;Setting up elastic network interfaces (ENIs) to enable your Lambda function to connect securely to other resources within your private VPC&nbsp;is incorrect because this is already done automatically by AWS Lambda. It uses the VPC information you provide to automatically set up ENIs that allow your Lambda function to access VPC resources. You don’t need to do this step in order for your Lambda function to be integrated with your VPC.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/vpc.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><b><strong class=\"Editor__editor-text-bold___25KrR\">https://docs.aws.amazon.com/lambda/latest/dg/vpc.html</strong></b></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/internet-access-lambda-function/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><b><strong class=\"Editor__editor-text-bold___25KrR\">https://aws.amazon.com/premiumsupport/knowledge-center/internet-access-lambda-function/</strong></b></a></p>",
    "choices": [
      {
        "id": 1546270,
        "value": "Set up elastic network interfaces (ENIs) to enable your Lambda function to connect securely to other resources within your private VPC.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546271,
        "value": "Submit a limit increase request to AWS to raise the concurrent executions limit of your Lambda function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546272,
        "value": "Add a NAT gateway to your VPC.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546273,
        "value": "Configure your function to forward payloads that were not processed to a dead-letter queue (DLQ) using Amazon SQS.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546274,
        "value": "Ensure that the associated security group of the Lambda function allows outbound connections.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 12,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546272,
        "questionId": 385724,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": false,
        "choiceId": 1546270,
        "questionId": 385724,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385724,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is refactoring a Lambda function that currently processes data using a public GraphQL API. There’s a new requirement to store query results in a database hosted in a VPC. The function has been configured with additional VPC-specific information, and the database connection has been successfully established. However, the engineer has discovered that the function can no longer connect to the internet after testing.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following should the developer do to fix this issue? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887941,
    "question": "AWS CloudFormation",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The&nbsp;aws cloudformation package&nbsp;command packages the local artifacts (local paths) that your AWS CloudFormation template references. The command uploads local artifacts, such as source code for an AWS Lambda function or a Swagger file for an AWS API Gateway REST API, to an S3 bucket. The command returns a copy of your template, replacing references to local artifacts with the S3 location where the command uploaded the artifacts.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Use this command to quickly upload local artifacts that might be required by your template. After you package your template’s artifacts, run the&nbsp;aws cloudformation deploy&nbsp;command to deploy the returned template.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Since we have local artifacts (source code for the AWS Lambda functions), we should use the package command.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>(image with aws cloudformation package sample&nbsp; command in CLI)</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>After running the package command, the modified template can now be deployed by using the deploy command.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the&nbsp;aws cloudformation package&nbsp;command to upload the local artifacts of the Lambda function to an S3 bucket and produce a version of the template with references to the S3 URI of the file.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Upload the&nbsp;app.js&nbsp;file to an S3 bucket. Update the&nbsp;CodeUri&nbsp;property in the template to point to the S3 URI of the file&nbsp;</strong></b><span>is incorrect. Simply uploading the&nbsp;app.js&nbsp;file to an S3 bucket without packaging it into a ZIP format is not adequate for deployment. AWS Lambda expects the deployment package to be in a ZIP format for the Node.js runtime.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the&nbsp;Fn::Base64&nbsp;intrinsic function inline with the&nbsp;CodeUri&nbsp;property to encode the content of the app.js file</strong></b><span>&nbsp;is incorrect.&nbsp;Embedding the base64 encoded content of the&nbsp;app.js&nbsp;file within the template would result in deployment errors.&nbsp;Note that the&nbsp;CodeUri&nbsp;property specifically expects either a local path to the Lambda function code or an S3 URI pointing to the zipped code.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Package the Lambda function in a ZIP file. Specify the local path of the packaged file in the&nbsp;CodeUri&nbsp;property&nbsp;</strong></b><span>is incorrect.&nbsp;The&nbsp;CodeUri&nbsp;property expects either a local path to the directory containing the Lambda function source code or an S3 URI to the ZIP file. Specifying a local path to a ZIP file&nbsp;is wrong, as AWS CloudFormation wouldn’t be able to directly deploy the function with the ZIP file.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/cloudformation/deploy/index.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/reference/cloudformation/deploy/index.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546275,
        "value": "Use the Fn::Base64 intrinsic function inline with the CodeUri property to encode the content of the app.js file.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546276,
        "value": "Use the aws cloudformation package command to upload the local artifacts of the Lambda function to an S3 bucket and produce a version of the template with references to the S3 URI of the file.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546277,
        "value": "Package the Lambda function in a ZIP file. Specify the local path of the packaged file in the CodeUri property.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546278,
        "value": "Upload the app.js file to an S3 bucket. Update the CodeUri property in the template to point to the S3 URI of the file.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 13,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546278,
        "questionId": 385725,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385725,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A development team has started using AWS CloudFormation for deploying Lambda functions. Their project structure places the source code for the Lambda function locally within a directory named “tutorialsABC”. The lambda handler for the function is in a file called “app.js”.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Below is a snippet of their template.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/ex/q14_1.jpg\"><span>What is the next step in order for the template to be deployed using the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">aws cloudformation deploy</em></i><span>&nbsp;CLI?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887942,
    "question": "AWS SAM",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A serverless application can include one or more&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">nested applications</strong></b><span>. You can deploy a nested application as a stand-alone artifact or as a component of a larger application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>As serverless architectures grow, common patterns emerge in which the same components are defined in multiple application templates. You can now separate out common patterns as dedicated applications, and then nest them as part of new or existing application templates. With nested applications, you can stay more focused on the business logic that’s unique to your application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To define a nested application in your serverless application, use the&nbsp;</span><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template.html#serverless-sam-template-application\" class=\"Editor__editor-link___3vl2C\"><span>AWS::Serverless::Application</span></a><span>&nbsp;resource type.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS::Serverless::Function</strong></b><span>&nbsp;is incorrect because&nbsp;this resource type describes configuration information for creating a Lambda function. You can describe any event source that you want to attach to the Lambda function—such as Amazon S3, Amazon DynamoDB Streams, and Amazon Kinesis Data Streams.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS::Serverless::LayerVersion</strong></b><span>&nbsp;is incorrect because this resource type creates a Lambda layer version (LayerVersion) that contains library or runtime code that’s needed by a Lambda function. When a serverless layer version is transformed, AWS SAM also transforms the logical ID of the resource so that old layer versions aren’t automatically deleted by AWS CloudFormation when the resource is updated.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS::Serverless::Api</strong></b><span>&nbsp;is incorrect because this resource type describes an API Gateway resource. It’s useful for advanced use cases where you want full control and flexibility when you configure your APIs. For most scenarios, it is recommended that you create APIs by specifying this resource type as an event source of your&nbsp;AWS::Serverless::Function&nbsp;resource.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template.html#serverless-sam-template-application\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template.html#serverless-sam-template-application</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-nested-applications.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-nested-applications.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546279,
        "value": "AWS::Serverless::Application",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546280,
        "value": "AWS::Serverless::Api",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546281,
        "value": "AWS::Serverless::LayerVersion",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546282,
        "value": "AWS::Serverless::Function",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 14,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546279,
        "questionId": 385726,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385726,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer uses AWS SAM templates to deploy a serverless application. He needs to embed the application from the AWS Serverless Application Repository or from an S3 bucket as a nested application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following resource type is the most SUITABLE one that the developer should use?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887943,
    "question": " DynamoDB configuration",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">DynamoDB Streams</strong></b><span>&nbsp;provides a time-ordered sequence of item level changes in any DynamoDB table. The changes are de-duplicated and stored for 24 hours. Applications can access this log and view the data items as they appeared before and after they were modified, in near real time.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(16).jpg\"><span>Amazon DynamoDB is also integrated with AWS Lambda so that you can create&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">triggers</em></i><span>—pieces of code that automatically respond to events in DynamoDB Streams. With triggers, you can build applications that react to data modifications in DynamoDB tables.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When an item in the table is modified,&nbsp;StreamViewType&nbsp;determines what information are written to the stream for this table. Valid values for&nbsp;StreamViewType&nbsp;are&nbsp;KEYS_ONLY,&nbsp;NEW_IMAGE,&nbsp;OLD_IMAGE,&nbsp;and&nbsp;NEW_AND_OLD_IMAGES.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">OLD_IMAGE</strong></b><span>&nbsp;type, the entire item which has the previous value as it appeared before it was modified is written to the stream. Hence, this is the correct answer in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">KEYS_ONLY</strong></b><span>&nbsp;is incorrect because it will only write the key attributes of the modified item to the stream. This choice is wrong since the question states that values should be copied as well.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">NEW_IMAGE</strong></b><span>&nbsp;is incorrect because it will configure the stream to write the entire item with its new value as it appears after it was modified. This choice is wrong since the stream should capture the item’s pre-modified values.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">NEW_AND_OLD_IMAGES</strong></b><span>&nbsp;is incorrect because although it writes the new values of the item in the stream, it also includes the old one as well. Since this type will send both the new and the old item images of the item to the stream, this option is wrong. Remember that&nbsp;it should&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">only</strong></b><span>&nbsp;send a copy of the item’s previous value to the S3 bucket, and not the new value in the DynamoDB table. The most suitable one to use here is the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">OLD_IMAGE&nbsp;</strong></b><span>type.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/Streams.Lambda.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/Streams.Lambda.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_StreamSpecification.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_StreamSpecification.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546283,
        "value": "OLD_IMAGE",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546284,
        "value": "NEW_AND_OLD_IMAGES",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546285,
        "value": "NEW_IMAGE",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546286,
        "value": "KEYS_ONLY",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 15,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546285,
        "questionId": 385727,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385727,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is working on an application which stores data to an Amazon DynamoDB table with the DynamoDB Streams feature enabled. He set up an event source mapping with DynamoDB Streams and AWS Lambda function to monitor any table changes then store the original data of the overwritten item in S3. When an item is updated, it should only send a copy of the item’s previous value to an S3 bucket and maintain the new value in the DynamoDB table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">StreamViewType</em></i><span>&nbsp;is the MOST suitable one to use in the DynamoDB configuration to fulfill this scenario?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887944,
    "question": "AWS CLI ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To create a Lambda function, you need a deployment package and an execution role. The deployment package contains your function code. The execution role grants the function permission to use AWS services, such as Amazon CloudWatch Logs for log streaming and AWS X-Ray for request tracing. You can use the&nbsp;CreateFunction API via the AWS CLI or the AWS SDK of your choice.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function’s code and configuration. A published version is a snapshot of your function code and configuration that can’t be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The&nbsp;InvalidParameterValueException&nbsp;will be returned if one of the parameters in the request is invalid. For example, if&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">you provided an IAM role in the&nbsp;CreateFunction&nbsp;API which AWS Lambda is unable to assume</strong></b><span>. Hence, this option is the most likely cause of the issue in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If&nbsp;</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">y</strong></b></i><b><strong class=\"Editor__editor-text-bold___25KrR\">ou have exceeded your maximum total code size per account</strong></b><span>, the&nbsp;CodeStorageExceededException&nbsp;will be returned, which is why this option is incorrect.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">the resource already exists</strong></b><span>,&nbsp;the&nbsp;ResourceConflictException&nbsp;will be returned and not&nbsp;InvalidParameterValueException. Therefore, this option is also incorrect.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">the&nbsp;AWS Lambda service encountered an internal error</strong></b><span>,&nbsp;the&nbsp;ServiceException&nbsp;will be returned hence, this option is incorrect.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546287,
        "value": "The AWS Lambda service encountered an internal error.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546288,
        "value": "You provided an IAM role in the CreateFunction API which AWS Lambda is unable to assume.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546289,
        "value": "The resource already exists.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546290,
        "value": "You have exceeded your maximum total code size per account.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 16,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546289,
        "questionId": 385728,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385728,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You developed a shell script which uses AWS CLI to create a new Lambda function. However, you received an&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">InvalidParameterValueException</em></i><span>&nbsp;after running the script.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What is the MOST likely cause of this issue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887945,
    "question": "SQS queue",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon SQS long polling is a way to retrieve messages from your Amazon SQS queues. While the regular short polling returns immediately, even if the message queue being polled is empty, long polling doesn’t return a response until a message arrives in the message queue or the long poll times out.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Long polling helps reduce the cost of using Amazon SQS by eliminating the number of empty responses (</span><i><em class=\"Editor__editor-text-italic___C9n8O\">when there are no messages available for a ReceiveMessage request</em></i><span>) and false empty responses (</span><i><em class=\"Editor__editor-text-italic___C9n8O\">when messages are available but aren’t included in a response</em></i><span>). This type of polling is suitable if the new messages that are being added to the SQS queue arrive less frequently.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;You can configure long polling to your SQS queue by simply setting the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">“Receive Message Wait Time”</em></i><span>&nbsp;field to a value greater than&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">0</strong></b><span>. Hence, the correct answer for this scenario is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">configure the SQS queue to use Long Polling.</strong></b><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(18).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure each message in the SQS queue to have a custom visibility timeout of 10 seconds</strong></b><span>&nbsp;is incorrect because&nbsp;a visibility timeout is primarily used to prevent other consumers from processing the message again for a period of time. This is normally used if your application takes a long time to process and delete a message from the SQS queue.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure the SQS queue to use Short Polling</strong></b><span>&nbsp;is incorrect because&nbsp;it is inefficient to poll the queue every second if the average time that it takes for the producers to send a new message to the queue is 40 seconds. It is better to do Long Polling, which will query the queue every 15 or 20 seconds, considering that new messages are not being added every second.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Configure an SQS Delay Queue with a value of 10 seconds</strong></b><span>&nbsp;is incorrect because this is primarily configured if you want to postpone the delivery of new messages to the SQS queue for a number of seconds. Having this SQS configuration which sets the new messages to remain invisible to the consumers for a duration of the delay period is not helpful in the given scenario. It is still better to use Long Polling instead of setting up a delay queue.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/sqs/faqs/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/sqs/faqs/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546291,
        "value": "Configure each message in the SQS queue to have a custom visibility timeout of 10 seconds.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546292,
        "value": "Configure the SQS queue to use Long Polling.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546293,
        "value": "Configure the SQS queue to use Short Polling.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546294,
        "value": "Configure an SQS Delay Queue with a value of 10 seconds.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 17,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546292,
        "questionId": 385729,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385729,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A Software Engineer is developing an application that will be hosted on an EC2 instance and read messages from a standard SQS queue. The average time that it takes for the producers to send a new message to the queue is 10 seconds.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST efficient way for the application to query the new messages from the queue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887946,
    "question": "Amazon S3",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Concurrent executions refers to the number of executions of your function code that are happening at any given time. You can estimate the concurrent execution count, but the concurrent execution count will differ depending on whether or not your Lambda function is processing events from a poll-based event source.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(19).jpg\"><span>If you create a Lambda function to process events from event sources that aren’t poll-based (for example, Lambda can process every event from other sources, like Amazon S3 or API Gateway), each published event is a unit of work, in parallel, up to your account limits. Therefore, the number of invocations these event sources make influences the concurrency.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use this formula to estimate the capacity used by your function:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">concurrent executions = (invocations per second) x (average execution duration in seconds)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For example, consider a Lambda function that processes Amazon S3 events. Suppose that the Lambda function takes on average three seconds and Amazon S3 publishes 10 events per second. Then, you will have 30 concurrent executions of your Lambda function. See the calculation shown below to visualize the process:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>=&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">(10 events per second) x (3 seconds average execution duration)</strong></b><br><span> = &nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">30 concurrent executions</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, it is expected that the Lambda function takes&nbsp;an average of 100 seconds for every execution with 50 requests per second. Using the formula above, the function will have 5,000 concurrent executions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp; &nbsp; &nbsp; =&nbsp;(50 events per second) x (100 seconds average execution duration)</strong></b><br><b><strong class=\"Editor__editor-text-bold___25KrR\"> = &nbsp;5,000 concurrent executions</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS Lambda dynamically scales function execution in response to increased traffic, up to your&nbsp;</span><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>concurrency limit</span></a><span>. Under sustained load, your function’s concurrency bursts to an initial level between 500 and 3000 concurrent executions that varies per region. After the initial burst, the function’s capacity increases by an additional 500 concurrent executions each minute until either the load is accommodated, or the total concurrency of all functions in the region hits the limit.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By default, AWS Lambda limits the total concurrent executions across all functions within a given region to 1000. This limit can be raised by&nbsp;requesting for AWS to increase the limit of the concurrent executions of your account.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Since the expected concurrent executions of the Lambda function will exceed the default concurrency limit, the best thing to do here is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">request for AWS to increase the limit of your concurrent executions.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Choosing to do&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">no additional action since Lambda will automatically scale based on the incoming requests</strong></b><span>&nbsp;is incorrect because the dynamic scaling of AWS Lambda has its limits. Because the value of the expected concurrency executions has exceeded the default limit, it is best to contact AWS to increase the concurrent executions of your account&nbsp;to prevent any throttling issues when the function has been deployed and becomes operational.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Implementing an exponential backoff in your application&nbsp;</strong></b><span>is incorrect because this doesn’t address the concurrency issue of your Lambda function. This will just configure your application to have progressively longer waits between API call retries for consecutive error responses.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Increasing the concurrency limit of the function</strong></b><span>&nbsp;is incorrect because, by default, you can only set the limit as high as 900 per function, which is quite insufficient to handle the expected 5,000 concurrency executions. To properly provide the required capacity needed by the function, you have to request for AWS to increase the concurrency limit of your account.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html#function-configuration\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html#function-configuration</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546295,
        "value": "No additional action needed since Lambda will automatically scale based on the incoming requests.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546296,
        "value": "Implement exponential backoff in your application.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546297,
        "value": "Increase the concurrency limit of the function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546298,
        "value": "Request for AWS to increase the limit of your concurrent executions.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 18,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546296,
        "questionId": 385730,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385730,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You are developing a Lambda function which processes event notifications&nbsp;from Amazon S3. It is expected that the function will have:</span></p><ul class=\"Editor__editor-list-ul___3e1ik\"><li value=\"1\" class=\"Editor__editor-listitem___EW2Qh\"><span>&nbsp;50      requests per second</span></li><li value=\"2\" class=\"Editor__editor-listitem___EW2Qh\"><span>100      seconds to complete each request</span></li></ul><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What should you do to prevent any issues when the function has been deployed and becomes operational?</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887947,
    "question": "Lambda function",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS X-Ray is an AWS service that allows you to detect, analyze, and optimize performance issues with your AWS Lambda applications. X-Ray collects metadata from the Lambda service and any upstream or downstream services that make up your application. X-Ray uses this metadata to generate a detailed service graph that illustrates performance bottlenecks, latency spikes, and other issues that impact the performance of your Lambda application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(20).jpg\"><span>AWS Lambda uses environment variables to facilitate communication with the X-Ray daemon and configure the X-Ray SDK.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">_X_AMZN_TRACE_ID:</strong></b><span>&nbsp;Contains the tracing header, which includes the sampling decision, trace ID, and parent segment ID.&nbsp;If Lambda receives a tracing header when your function is invoked, that header will be used to populate the _X_AMZN_TRACE_ID environment variable. If a tracing header was not received, Lambda will generate one for you.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_XRAY_CONTEXT_MISSING:</strong></b><span>&nbsp;The X-Ray SDK uses this variable to determine its behavior in the event that your function tries to record X-Ray data, but a tracing header is not available. Lambda sets this value to&nbsp;LOG_ERROR&nbsp;by default.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_XRAY_DAEMON_ADDRESS:</strong></b><span>&nbsp;This environment variable exposes the X-Ray daemon’s address in the following format:&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">IP_ADDRESS</em></i><b><strong class=\"Editor__editor-text-bold___25KrR\">:</strong></b><i><em class=\"Editor__editor-text-italic___C9n8O\">PORT</em></i><span>. You can use the X-Ray daemon’s address to send trace data to the X-Ray daemon directly without using the X-Ray SDK.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Therefore, the correct answers for this scenario are the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">_X_AMZN_TRACE_ID&nbsp;and&nbsp;AWS_XRAY_CONTEXT_MISSING</strong></b><span>&nbsp;environment variables.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_XRAY_TRACING_NAME</strong></b><span>&nbsp;is incorrect because this is primarily used in X-Ray SDK where you can set a service name that the SDK uses for segments.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_XRAY_DEBUG_MODE</strong></b><span>&nbsp;is incorrect because this is used to configure the SDK to output logs to the console without using a logging library.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AUTO_INSTRUMENT</strong></b><span>&nbsp;is incorrect because this is primarily used in X-Ray SDK for Django Framework only.&nbsp;This allows the recording of subsegments for built-in database and template rendering operations.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References</strong></b><span>:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html#viewing-lambda-xray-results\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html#viewing-lambda-xray-results</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-configuration.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-configuration.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-python-configuration.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-python-configuration.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546299,
        "value": "AWS_XRAY_DEBUG_MODE",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546300,
        "value": "AWS_XRAY_TRACING_NAME",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546301,
        "value": "AUTO_INSTRUMENT",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546302,
        "value": "AWS_XRAY_CONTEXT_MISSING",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546303,
        "value": "_X_AMZN_TRACE_ID",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 19,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546303,
        "questionId": 385731,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1546302,
        "questionId": 385731,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385731,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A recently deployed Lambda function has an intermittent issue in processing customer data. You enabled the active tracing option in order to detect, analyze, and optimize performance issues of your function using the X-Ray service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following environment variables are used by AWS Lambda to facilitate communication with X-Ray? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887948,
    "question": "DynamoDB table",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To read data from a table, you use operations such as&nbsp;GetItem,&nbsp;Query, or&nbsp;Scan. DynamoDB returns all of the item attributes by default. To get just some, rather than all of the attributes, use a projection expression.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">projection expression</em></i><span>&nbsp;is a string that identifies the attributes you want. To retrieve a single attribute, specify its name. For multiple attributes, the names must be comma-separated.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The following AWS CLI example shows how to use a projection expression with a&nbsp;GetItemoperation. This projection expression retrieves a top-level scalar attribute (Description), the first element in a list (RelatedItems[0]), and a list nested within a map (ProductReviews.FiveStar).</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;</em></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><i><em class=\"Editor__editor-text-italic___C9n8O\">aws dynamodb get-item \\</em></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;&nbsp;&nbsp; --table-name ProductCatalog \\</em></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;&nbsp;&nbsp; --key '{\"Id\":{\"N\":\"1\"}}' \\</em></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;&nbsp;&nbsp; </em></i><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">--projection-expression \"Description, RelatedItems[0], ProductReviews.FiveStar\"</strong></b></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use any attribute name in a projection expression, provided that the first character is&nbsp;a-z&nbsp;or&nbsp;A-Z&nbsp;and the second character (if present) is&nbsp;a-z,&nbsp;A-Z, or&nbsp;0-9. If an attribute name does not meet this requirement, you will need to define an expression attribute name as a placeholder.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Therefore,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">using&nbsp;projection expression&nbsp;</strong></b><span>is the correct answer in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using condition expressions</strong></b><span>&nbsp;is incorrect because&nbsp;this is primarily used to determine which items should be modified for data manipulation operations such as PutItem, UpdateItem, and DeleteItem calls.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using expression attribute names</strong></b><span>&nbsp;is incorrect because&nbsp;this is a placeholder that you use in a projection expression as an alternative to an actual attribute name. An expression attribute name must begin with a #, and be followed by one or more alphanumeric characters.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using filter expressions</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because it simply&nbsp;determines which&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">items&nbsp;</strong></b><span>(and not the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">attributes</strong></b><span>) within the Query results should be returned to you. All of the other results are discarded. Take note that the scenario says that you have to fetch specific attributes and not specific items.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ProjectionExpressions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ProjectionExpressions.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546304,
        "value": "Use filter expressions",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546305,
        "value": "Use projection expression",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546306,
        "value": "Use expression attribute names",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546307,
        "value": "Use condition expressions",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 20,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546307,
        "questionId": 385732,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385732,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A DynamoDB table has several top-level attributes such as&nbsp;id,&nbsp;course_id,&nbsp;course_title,&nbsp;price,&nbsp;rating&nbsp;and many others. The database queries of your application returns all of the item attributes by default but you only want to fetch specific attributes such as the&nbsp;course_id&nbsp;and&nbsp;price&nbsp;per request.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>As the developer, how can you refactor your application to accomplish this requirement?</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887949,
    "question": "API Gateway",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can integrate an API method in your API Gateway with a custom HTTP endpoint of your application in two ways:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– HTTP proxy integration</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– HTTP custom integration</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In your API Gateway console, you can define the type of HTTP integration of your resource by toggling the “</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Proxy resource</strong></b><span>” switch.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(22).jpg\"><span>With proxy integration, the setup is simple. You only need to set the HTTP method and the HTTP endpoint URI, according to the backend requirements, if you are not concerned with content encoding or caching.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With custom integration, setup is more involved. In addition to the proxy integration setup steps, you need to specify how the incoming request data is mapped to the integration request and how the resulting integration response data is mapped to the method response.&nbsp;API Gateway supports the following endpoint ports: 80, 443 and 1024-65535.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Programmatically, you choose an integration type by setting the&nbsp;</span><a href=\"https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/#type\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>type</span></a><span>&nbsp;property on the&nbsp;</span><a href=\"https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>Integration</span></a><span>&nbsp;resource. For the Lambda proxy integration, the value is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_PROXY</strong></b><span>. For the Lambda custom integration and all other AWS integrations, it is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS</strong></b><span>. For the HTTP proxy integration and HTTP integration, the value is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP_PROXY</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP</strong></b><span>, respectively. For the mock integration, the&nbsp;type&nbsp;value is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">MOCK</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Since the integration type that is being described in the scenario fits the definition of an&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">HTTP custom integration</em></i><span>, the correct answer in this scenario is to use the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP&nbsp;</strong></b><span>integration type.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS&nbsp;</strong></b><span>is incorrect because this type is primarily used for Lambda custom integration.&nbsp;Since the scenario does not specify that the microservices are Lambda functions, the HTTP integration type is the most flexible and suitable for such a scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS_PROXY</strong></b><span>&nbsp;is incorrect because this type is primarily used for&nbsp;Lambda proxy integration. The scenario didn’t mention that it uses a serverless application or Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">HTTP_PROXY</strong></b><span>&nbsp;is incorrect because this type is only used for HTTP proxy integration where you don’t need to do data mapping for your request and response data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/setup-http-integrations.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/setup-http-integrations.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-integration-types.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546308,
        "value": "HTTP",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546309,
        "value": "AWS_PROXY",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546310,
        "value": "HTTP_PROXY",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546311,
        "value": "AWS",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 21,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546309,
        "questionId": 385733,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385733,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company has a microservices application that must be integrated with API Gateway. The developer must configure custom data mapping between the API Gateway and the microservices.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In addition, the developer must specify how the incoming request data is mapped to the integration request and how the resulting integration response data is mapped to the method response.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following integration types is the MOST suitable one to use in API Gateway to meet this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887950,
    "question": "DynamoDB",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">DynamoDB Streams</strong></b><span>&nbsp;enables solutions such as these, and many others. DynamoDB Streams captures a time-ordered sequence of item-level modifications in any DynamoDB table, and stores this information in a log for up to 24 hours. Applications can access this log and view the data items as they appeared before and after they were modified, in near real-time.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">DynamoDB stream</em></i><span>&nbsp;is an ordered flow of information about changes to items in an Amazon DynamoDB table. When you enable a stream on a table, DynamoDB captures information about every modification to data items in the table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Whenever an application creates, updates, or deletes items in the table, DynamoDB Streams writes a stream record with the primary key attribute(s) of the items that were modified. A&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">stream record&nbsp;</em></i><span>contains information about a data modification to a single item in a DynamoDB table. You can configure the stream so that the stream records capture additional information, such as the “before” and “after” images of modified items.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(23).jpg\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Set up DynamoDB Accelerator</strong></b><span>&nbsp;is incorrect because the DynamoDB Accelerator (DAX) feature simply takes the performance of the DynamoDB table to the next level with response times in microseconds for millions of requests per second for read-heavy workloads. You have to use DynamoDB Streams instead.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables</strong></b><span>&nbsp;is incorrect because&nbsp;this feature just helps protect your DynamoDB tables from accidental write or delete operations.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table</strong></b><span>&nbsp;is incorrect. An Amazon EventBridge (Amazon CloudWatch Events) rule is not capable of detecting table-level events from Amazon DynamoDB.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.CrossRegionRepl.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.CrossRegionRepl.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546312,
        "value": "Set up DynamoDB Accelerator",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546313,
        "value": "Enable DynamoDB Point-in-Time Recovery to automatically sync the two tables.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546314,
        "value": "Enable DynamoDB Streams and configure a Lambda function to process and save new changes to the other table.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546315,
        "value": "Create an Amazon EventBridge (Amazon CloudWatch Events) rule that tracks table-level events in DynamoDB. Set a Lambda function as a rule target to process and save new changes to the other table.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 22,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546315,
        "questionId": 385734,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385734,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A serverless application composed of Lambda, API Gateway, and DynamoDB has been running without issues for quite some time. As part of the IT compliance of the company, a developer was instructed to ensure that all of the new changes made to the items in DynamoDB are recorded and stored in another DynamoDB table in another region.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, which of the following is the MOST ideal way to comply with the requirements?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887951,
    "question": "AWS SAM",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you use AWS SAM to create your serverless application, it comes built-in with CodeDeploy to help ensure safe Lambda deployments. There are various deployment preference types that you can choose from.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For example:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you choose&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Canary10Percent10Minutes&nbsp;</strong></b><span>then&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;percent of your customer traffic is immediately shifted to your new version. After&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;minutes, all traffic is shifted to the new version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>However, if your pre-hook/post-hook tests fail, or if a CloudWatch alarm is triggered, CodeDeploy rolls back your deployment. The following table outlines other traffic-shifting options that are available:</span></p><ul class=\"Editor__editor-list-ul___3e1ik\"><li value=\"1\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Canary</strong></b><span>:&nbsp;</span><u><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-underline___y38TS\">Traffic      is shifted in two increments</strong></b></u><span>. You can choose from predefined      canary options. The options specify the percentage of traffic that’s      shifted to your updated Lambda function version in the first increment,      and the interval, in minutes, before the remaining traffic is shifted in      the second increment.</span></li><li value=\"2\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Linear</strong></b><span>:&nbsp;</span><u><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-underline___y38TS\">Traffic      is shifted in equal increments with an equal number of minutes between      each increment.</strong></b></u><span>&nbsp;You can choose from predefined linear options      that specify the percentage of traffic that’s shifted in each increment      and the number of minutes between each increment.</span></li><li value=\"3\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">All-at-once</strong></b><span>:      All traffic is shifted from the original Lambda function to the updated      Lambda function version at once.</span></li></ul><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.LambdaCanary10Percent5Minutes</strong></b><span>&nbsp;option is correct because&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;percent of your customer traffic is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">immediately</strong></b><span>&nbsp;shifted to your new version. After&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">5</strong></b><span>&nbsp;minutes, all traffic is shifted to the new version. This means that the entire deployment time will only take&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">5</strong></b><span>&nbsp;minutes</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.HalfAtATime</strong></b><span>is incorrect because this is only applicable for&nbsp;EC2/On-premises compute platform and not for Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.LambdaLinear10PercentEvery1Minute</strong></b><span>&nbsp;is incorrect because it will add 10 percent of the traffic linearly to the new version every minute. Hence, all traffic will be shifted to the new version only after&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">10</strong></b><span>&nbsp;minutes</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeployDefault.LambdaLinear10PercentEvery2Minutes</strong></b><span>&nbsp;is incorrect because&nbsp;it will add 10 percent of the traffic linearly to the new version every 2 minutes. Hence, all traffic will be shifted to the new version only after&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">20</strong></b><span>&nbsp;minutes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-deploying.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-deploying.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546316,
        "value": " CodeDeployDefault.LambdaLinear10PercentEvery2Minutes",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546317,
        "value": "CodeDeployDefault.HalfAtATime",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546318,
        "value": "CodeDeployDefault.LambdaLinear10PercentEvery1Minute",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546319,
        "value": "CodeDeployDefault.LambdaCanary10Percent5Minutes",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 23,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546319,
        "questionId": 385735,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385735,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer has recently completed a new version of a serverless application that is ready to be deployed using AWS SAM. There is a requirement that the traffic should shift from the previous Lambda function to the new version in the shortest time possible, but you still don’t want to shift traffic all-at-once immediately.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which deployment configuration is the MOST suitable one to use in this scenario?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887952,
    "question": "Amazon S3 bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>S3 Object Lambda allows you to add your own code to S3 GET requests to modify and process data as it’s being returned to an application. This feature is designed for use cases where data needs to be transformed on-the-fly without the need to store a transformed copy of the data. It’s useful in scenarios like filtering rows, redacting confidential data, dynamically resizing images and other similar situations where data transformation or processing is required during data retrieval.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(25).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the scenario, when the internal service fetches a file from the S3 bucket, S3 Object Lambda will run a Lambda function to redact the PII from the data as it is being retrieved before it is returned to the application. This eliminates the need to create and store a separate, redacted copy of each resume, thereby saving on storage costs. Plus, since the redaction happens during data retrieval, there’s no need to create a proxy for the internal service. This makes the solution efficient and cost-effective.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use Amazon S3 Object Lambda to redact PII before it is returned to the application.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure an Amazon S3 Access Point and set up an Amazon CloudFront distribution with a Lambda function to redact the PII as data is fetched from the S3 bucket</strong></b><span>&nbsp;is incorrect.&nbsp;Lambda&nbsp;functions operate at the CDN edge locations, making them ideal for use cases that need low-latency responses to end users. However, in the scenario, the requirement is to redact PII before processing by an internal service, not necessarily to serve end users quickly. Moreover, Lambda&nbsp;is generally more expensive to run than a regular Lambda function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Implement a solution with AWS Glue to transform the data and redact PII before storing it in the S3 bucket</strong></b><span>&nbsp;is incorrect.&nbsp;AWS Glue is an ETL service designed for complex transformations and analytics. With this approach, you’d create redacted copies of resumes, leading to increased storage costs. Also, using AWS Glue to merely redact PII might be overkill and less cost-effective compared to simpler solutions like S3 Object Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use a Lambda function to create a redacted copy of each file in a separate S3 bucket. Then, set up an Amazon S3 Access Point to serve these files</strong></b><span>&nbsp;is incorrect.&nbsp;In this approach, storing redacted copies of data in S3 would increase storage costs. However, with S3 Object Lambda, on-the-fly redaction of PII becomes possible, eliminating the need for storing separate redacted copies of the data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/s3/features/object-lambda/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/s3/features/object-lambda/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/aws/introducing-amazon-s3-object-lambda-use-your-code-to-process-data-as-it-is-being-retrieved-from-s3/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/aws/introducing-amazon-s3-object-lambda-use-your-code-to-process-data-as-it-is-being-retrieved-from-s3/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546320,
        "value": "Use a Lambda function to create a redacted copy of each file in a separate S3 bucket. Then, set up an Amazon S3 Access Point to serve these files.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546321,
        "value": "Configure an Amazon S3 Access Point and set up an Amazon CloudFront distribution with a Lambda@Edge function to redact the PII as data is fetched from the S3 bucket.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546322,
        "value": "Implement a solution with AWS Glue to transform the data and redact PII before storing it in an S3 bucket.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546323,
        "value": "Use Amazon S3 Object Lambda to redact PII before it is returned to the application.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 24,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546322,
        "questionId": 385736,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385736,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A recruitment agency has a large collection of resumes stored in an Amazon S3 bucket. The agency wants to perform an analysis on these files, but for privacy compliance reasons, they need to ensure that certain personally identifiable information (PII) is redacted before being processed by their internal service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which solution can meet the requirements in the most cost-effective way?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887953,
    "question": "Lambda functions",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A gateway response is identified by a response type defined by API Gateway. The response consists of an HTTP status code, a set of additional headers that are specified by parameter mappings, and a payload that is generated by a non-VTL (Apache Velocity Template Language) mapping template.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(26).jpg\"><span>You can set up a gateway response for a supported response type at the API level. Whenever API Gateway returns a response of the type, the header mappings and payload mapping templates defined in the gateway response are applied to return the mapped results to the API caller.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The following are the Gateway response types which are associated with the HTTP 504 error in API Gateway:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">INTEGRATION_FAILURE</strong></b><span>&nbsp;– The gateway response for an integration failed error. If the response type is unspecified, this response defaults to the DEFAULT_5XX type.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">INTEGRATION_TIMEOUT</strong></b><span>&nbsp;– The gateway response for an integration timed out error. If the response type is unspecified, this response defaults to the DEFAULT_5XX type.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For the integration timeout, the range is from 50 milliseconds to 29 seconds for all integration types, including Lambda, Lambda proxy, HTTP, HTTP proxy, and AWS integrations.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, there is an issue where the users are getting HTTP 504 errors in the serverless application. This means the Lambda function is working fine at times but there are instances when it throws an error. Based on this analysis, the most likely cause of the issue is the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">INTEGRATION_TIMEOUT</strong></b><span>&nbsp;error since you will only get an&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">INTEGRATION_FAILURE</strong></b><span>&nbsp;error if your AWS Lambda integration does not work at all in the first place.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the root cause of this issue is that the</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;API Gateway request has timed out because the underlying Lambda function has been running for more than 29 seconds</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Since the incoming requests are increasing, the API Gateway automatically enabled throttling which caused the HTTP 504 errors</strong></b><span>&nbsp;is incorrect because&nbsp;a large number of incoming requests will most likely produce an HTTP 502 or 429 error but not a 504 error.&nbsp;If executing the function would cause you to exceed a concurrency limit at either the account level (</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">ConcurrentInvocationLimitExceeded</strong></b></i><span>) or function level (</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">ReservedFunctionConcurrentInvocationLimitExceeded</strong></b></i><span>),&nbsp;Lambda may return a&nbsp;</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">TooManyRequestsException</strong></b></i><span>&nbsp;as a response.&nbsp;For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response and returns an HTTP 504 error.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">An authorization failure occurred between API Gateway and the Lambda function</strong></b><span>&nbsp;is incorrect because&nbsp;an authentication issue usually produces HTTP 403 errors and not 504s.&nbsp;The gateway response for authorization failures for missing authentication token error, invalid AWS signature error, or Amazon Cognito authentication problems is HTTP 403, which is why this option is unlikely to be the cause of this issue.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">The usage plan quota has been exceeded for the Lambda function</strong></b><span>&nbsp;is incorrect. Although this is a possible root cause for this scenario, this option has the least chance to produce HTTP 504 errors. The scenario says that the issue happens from&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">time to time</em></i><span>&nbsp;and not&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">all the time</em></i><span>&nbsp;which suggests that this happens intermittently. If the usage plan indeed exceeded the quota, then the 504 error should always show up and not just from</span><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;time to time</em></i><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/limits.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/limits.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/about-aws/whats-new/2017/11/customize-integration-timeouts-in-amazon-api-gateway/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/about-aws/whats-new/2017/11/customize-integration-timeouts-in-amazon-api-gateway/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546324,
        "value": "API Gateway request has timed out because the underlying Lambda function has been running for more than 29 seconds.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546325,
        "value": "Since the incoming requests are increasing, the API Gateway automatically enabled throttling which caused the HTTP 504 errors.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546326,
        "value": "The usage plan quota has been exceeded for the Lambda function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546327,
        "value": "An authorization failure occurred between API Gateway and the Lambda function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 25,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546324,
        "questionId": 385737,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385737,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A serverless application consisting of Lambda functions integrated with API Gateway, and DynamoDB processes ad hoc requests that its users send. Due to the recent spike in incoming traffic, some of your customers are complaining that they are getting HTTP 504 errors from time to time.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST likely cause of this issue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887954,
    "question": "API Gateway",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon API Gateway</strong></b><span>&nbsp;is a service that simplifies the creation, publishing, maintenance, monitoring, and securing of APIs at any scale. API Gateway enables you to define and manage the interface between front-end clients and backend services. It handles all tasks associated with processing hundreds of thousands of concurrent API calls, including traffic management, authorization, access control, monitoring, and API version management. One of its key features is the ability to create different stages for an API, allowing developers to maintain multiple versions of the same API, such as development, testing, and production.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(27l).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Stage Variables in API Gateway are name-value pairs that can be used to configure different settings for each stage of an API. These variables allow developers to reference different backend resources and settings dynamically without changing the API deployment. For instance, stage variables can be used to specify different Lambda function ARNs, database endpoints, or other environment-specific configurations. This capability is handy for managing multiple environments (like ALPHA, BETA, RC, and PROD) within the same API Gateway, ensuring that each environment can be independently configured and managed using a single consolidated API Gateway.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Set up Stage Variables for each release.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The options that say:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;–</strong></b><span>&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Modify the Integration Response of the API Gateway to add different endpoints for each release.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;&nbsp;&nbsp;–&nbsp;Modify the Integration Request of the API Gateway to manage different endpoints for each release.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>are both&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">incorrect</strong></b><span>&nbsp;because these two are primarily used to map the response or the request data to and from your backend. There is no way to use the Integration Request or Response&nbsp;as a variable that can be a part of the URL string of an HTTP integration for a method in your REST API. Moreover, these two can’t be part of a custom API URL:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&lt;</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">alpha|beta|rc|prod</strong></b></i><b><strong class=\"Editor__editor-text-bold___25KrR\">&gt;.example.com</strong></b><span>, which was mentioned in the scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use Layers to the underlying Lambda functions of the API Gateway</strong></b><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><span>is incorrect because this is only applicable&nbsp;if you want to configure your Lambda function to pull in additional code and content in the form of layers. Remember that a layer is just a ZIP archive that contains libraries, a&nbsp;</span><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-custom.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>custom runtime</span></a><span>, or other dependencies.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/stage-variables.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/stage-variables.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546328,
        "value": "Modify the Integration Response of the API Gateway to add different endpoints for each release.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546329,
        "value": "Use Layers to the underlying Lambda functions of the API Gateway.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546330,
        "value": "Modify the Integration Request of the API Gateway to manage different endpoints for each release.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546331,
        "value": "Set up Stage Variables for each release.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 26,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546330,
        "questionId": 385738,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385738,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You have several API Gateway APIs with Lambda Integration for each release life cycle of your application. There is a requirement to consolidate multiple releases into a single API Gateway for the ALPHA, BETA, RC (Release Candidate), and PROD releases. For example, their clients can connect to their ALPHA release by using the&nbsp;alpha.example.com&nbsp;endpoint and beta release through the&nbsp;beta.example.com&nbsp;endpoint.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>As the AWS developer, how can you satisfy this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887955,
    "question": "AWS Elastic Beanstalk ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In general,&nbsp;Scan&nbsp;operations are less efficient than other operations in DynamoDB. A&nbsp;Scan&nbsp;operation always scans the entire table or secondary index. It then filters out values to provide the result you want, essentially adding the extra step of removing data from the result set.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(28).jpg\"><span>If possible, you should avoid using a&nbsp;Scan&nbsp;operation on a large table or index with a filter that removes many results. Also, as a table or index grows, the&nbsp;Scan&nbsp;operation slows. The&nbsp;Scan&nbsp;operation examines every item for the requested values and can use up the provisioned throughput for a large table or index in a single operation. For faster response times, design your tables and indexes so that your applications can use&nbsp;Query&nbsp;instead of&nbsp;Scan. For tables, you can also consider using the&nbsp;GetItem&nbsp;and&nbsp;BatchGetItem&nbsp;APIs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Alternatively, you can refactor your application to use&nbsp;Scan&nbsp;operations in a way that minimizes the impact on your request rate.&nbsp; Instead of using a large&nbsp;Scan&nbsp;operation, you can use the following techniques to minimize the impact of a scan on a table’s provisioned throughput.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Reduce page size</strong></b><span>&nbsp;–&nbsp;Because a Scan operation reads an entire page (by default, 1 MB), you can reduce the impact of the scan operation by setting a smaller page size. The&nbsp;Scan&nbsp;operation provides a&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">Limit</em></i><span>&nbsp;parameter that you can use to set the page size for your request. Each&nbsp;Query&nbsp;or&nbsp;Scan&nbsp;request that has a smaller page size uses fewer read operations and creates a “pause” between each request. For example, suppose that each item is 4 KB and you set the page size to 40 items. A&nbsp;Query&nbsp;request would then consume only 20 eventually consistent read operations or 40 strongly consistent read operations. A larger number of smaller&nbsp;Query&nbsp;or&nbsp;Scan&nbsp;operations would allow your other critical requests to succeed without throttling.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Isolate scan operations</strong></b><span>&nbsp;–&nbsp;DynamoDB is designed for easy scalability. As a result, an application can create tables for distinct purposes, possibly even duplicating content across several tables. You want to perform scans on a table that is not taking “mission-critical” traffic. Some applications handle this load by rotating traffic hourly between two tables—one for critical traffic, and one for bookkeeping. Other applications can do this by performing every write on two tables: a “mission-critical” table, and a “shadow” table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">–&nbsp;Use Query operations instead</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">–&nbsp;Reduce page size</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Using DynamoDB Accelerator (DAX)&nbsp;</strong></b><span>is incorrect. Although this will improve the scalability and read performance of the application,&nbsp;it simply adds a significant cost in maintaining your application. Using Query operations and reducing the page size of your query are the more cost-effective solutions in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Set the&nbsp;ScanIndexForward&nbsp;parameter to control the order of query results&nbsp;</strong></b><span>is incorrect.&nbsp;While useful for ordering results, it does not improve the efficiency or performance of the underlying operation. Changing the order of scan results does not address the fundamental issue of scanning the entire table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Increasing the Write Compute Unit (WCU) of the table&nbsp;</strong></b><span>is incorrect because the reporting application is primarily used for reading data and not for writing. In addition, increasing the WCU will increase the cost.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-query-scan.html#bp-query-scan-spikes\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-query-scan.html#bp-query-scan-spikes</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/best-practices.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/best-practices.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546332,
        "value": "Use DynamoDB Accelerator (DAX)",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546333,
        "value": "Set the ScanIndexForward parameter to control the order of query results.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546334,
        "value": "Increase the Write Compute Unit (WCU) of the table",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546335,
        "value": "Use Query operations instead",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546336,
        "value": "Reduce page size",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 27,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546335,
        "questionId": 385739,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": false,
        "choiceId": 1546333,
        "questionId": 385739,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385739,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A reporting application is hosted in AWS Elastic Beanstalk and uses Amazon DynamoDB as its database. If a user requests data, the application scans the entire table and returns the requested data. The table is expected to grow due to the surge of new users and the increase in requests for reports in the coming weeks.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following should be done as a preparation to improve the application’s performance with minimal cost? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887956,
    "question": "Lambda function",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By default, an alias points to a single Lambda function version. When the alias is updated to point to a different function version, incoming request traffic in turn instantly points to the updated version. This exposes that alias to any potential instabilities introduced by the new version. To minimize this impact, you can implement the&nbsp;routing-config&nbsp;parameter of the Lambda alias that allows you to point to two different versions of the Lambda function and dictate what percentage of incoming traffic is sent to each version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(29).jpg\"><span>For example, you can specify that only 2 percent of incoming traffic is routed to the new version while you analyze its readiness for a production environment, while the remaining 98 percent is routed to the original version. As the new version matures, you can gradually update the ratio as necessary until you have determined that the new version is stable. You can then update the alias to route all traffic to the new version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can point an alias to a maximum of two Lambda function versions. In addition:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Both versions must have the same IAM execution role.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Both versions must have the same&nbsp;</span><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/dlq.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>AWS Lambda Function Dead Letter Queues</span></a><span>&nbsp;configuration, or no DLQ configuration.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– When pointing an alias to more than one version, the alias cannot point to&nbsp;$LATEST.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">using Traffic Shifting for Lambda Aliases&nbsp;</strong></b><span>is the correct answer.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using Route 53 weighted routing to two Lambda functions</strong></b><span>&nbsp;is incorrect. Although you may configure 2 different endpoints for your Lambda versions and use Route 53 Weighted Routing, this is still not a manageable and convenient way of handling the failover of your serverless function. The best way is to use Lambda Aliases for the different versions of your function and do traffic shifting on these two versions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using ELB to route traffic to both Lambda functions</strong></b><span>&nbsp;is incorrect because this is not the recommended way to gradually deploy the new version of your Lambda function. It is still best to use Lambda Aliases instead of an Application Load Balancer.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using stage variables in your Lambda function</strong></b><span>&nbsp;is incorrect because stage variables are primarily used in API Gateway and not in Lambda. Although this solution may work, you are still required to create an API Gateway and create a stage variable that will point to the new and old versions of the Lambda function. This entails extra configuration, compared with just doing traffic shifting in Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/aliases-intro.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/aliases-intro.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546337,
        "value": " Use Traffic Shifting with Lambda Aliases.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546338,
        "value": "Use Route 53 weighted routing to two Lambda functions.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546339,
        "value": "Use stage variables in your Lambda function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546340,
        "value": "Use ELB to route traffic to both Lambda functions.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 28,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546340,
        "questionId": 385740,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385740,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You want to update a Lambda function on your production environment and ensure that when you publish the updated version, you still have a quick way to roll back to the older version in case you encountered a problem. To prevent any sudden user interruptions, you want to gradually increase the traffic going to the new version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following implementation is the BEST option to use?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887957,
    "question": "S3 bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Multipart upload allows you to upload a single object as a set of parts. Each part is a contiguous portion of the object’s data. You can upload these object parts independently and in any order. If transmission of any part fails, you can retransmit that part without affecting other parts. After all parts of your object are uploaded, Amazon S3 assembles these parts and creates the object. In general, when your object size reaches 100 MB, you should consider using multipart uploads instead of uploading the object in a single operation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(30).jpg\"><span>Using multipart upload provides the following advantages:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp; &nbsp; –&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Improved throughput</strong></b><span>&nbsp;– You can upload parts in parallel to improve throughput.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Quick recovery from any network issues</strong></b><span>&nbsp;– Smaller part size minimizes the impact of restarting a failed upload due to a network error.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Pause and resume object uploads</strong></b><span>&nbsp;– You can upload object parts over time. Once you initiate a multipart upload, there is no expiry; you must explicitly complete or abort the multipart upload.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Begin an upload before you know the final object size</strong></b><span>&nbsp;– You can upload an object as you are creating it.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">using the Multipart Upload API</strong></b><span>&nbsp;is the correct answer in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The options:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the BatchWriteItem API</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the Putltem API</strong></b><span>&nbsp;are incorrect because these are DynamoDB APIs and not S3.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enable Transfer Acceleration in the bucket&nbsp;</strong></b><span>is incorrect because although Transfer Acceleration will significantly reduce the upload time to S3, the bucket in the scenario won’t be able to turn on this feature. Take note that the name of the bucket used for Transfer Acceleration must be DNS-compliant and must not contain periods (“.”).</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Reference:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546341,
        "value": "Use the Putltem API.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546342,
        "value": "Use the Multipart upload API.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546343,
        "value": "Enable Transfer Acceleration in the bucket.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546344,
        "value": "Use the BatchWriteItem API.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 29,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546342,
        "questionId": 385741,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385741,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A web application is uploading large files, which are over 4 GB in size, in an S3 bucket called </span><b><strong class=\"Editor__editor-text-bold___25KrR\">data.abc.com</strong></b><span> every 30 minutes. You want to minimize the time required to upload each file. Which of the following should you do to minimize upload time?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887958,
    "question": "Database",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>NoSQL databases are a great fit for many modern applications such as mobile, web, and gaming that require flexible, scalable, high-performance, and highly functional databases to provide great user experiences.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Flexibility:</strong></b><span>&nbsp;NoSQL databases generally provide flexible schemas that enable faster and more iterative development. The flexible data model makes NoSQL databases ideal for semi-structured and unstructured data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Scalability:</strong></b><span>&nbsp;NoSQL databases are generally designed to scale out by using distributed clusters of hardware instead of scaling up by adding expensive and robust servers. Some cloud providers handle these operations behind-the-scenes as a fully managed service.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">High-performance:&nbsp;</strong></b><span>NoSQL databases are optimized for specific data models (such as document, key-value, and graph) and access patterns that enable higher performance than trying to accomplish similar functionality with relational databases.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Highly functional:</strong></b><span>&nbsp;NoSQL databases provide highly functional APIs and data types that are purpose-built for each of their respective data models.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(31).jpg\"><span>A relational database is known for having a rigid schema, with a lot of constraints and limits as to which (and what type of) data can be inserted or not. It is primarily used for scenarios where you have to support complex queries which fetch data across a number of tables. It is best for scenarios where you have complex table relationships but for use cases where you need to have a flexible schema, this is not a suitable database to use.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For NoSQL, it is not as rigid as a relational database because you can easily add or remove rows or elements in your table/collection entry. It also has a more flexible schema because&nbsp;it can store complex hierarchical data within a single item which, unlike a relational database, does not entail changing multiple related tables. Hence, the best answer to be used here is a NoSQL&nbsp;database, like DynamoDB. When your business requires a low-latency response to high-traffic queries, taking advantage of a NoSQL system generally makes technical and economic sense.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon DynamoDB helps solve the problems that limit the relational system scalability by avoiding them.&nbsp;In DynamoDB, you design your schema specifically to make the most common and important queries as fast and as inexpensive as possible. Your data structures are tailored to the specific requirements of your business use cases.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Therefore, the correct answer is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon DynamoDB&nbsp;</strong></b><span>for this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon RDS</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Aurora</strong></b><span>&nbsp;are both&nbsp;incorrect because both of them are a type of relational database that doesn’t&nbsp;provide flexible schemas, unlike DynamoDB. Although it can scale globally, it would entail a lot of configuration and setup to do so.&nbsp;Moreover, a relational database has a rigid schema which is not suitable for frequent schema changes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Redshift</strong></b><span>&nbsp;is incorrect because this is not a NoSQL database and is primarily used for OLAP systems.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/nosql/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/nosql/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-general-nosql-design.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-general-nosql-design.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546345,
        "value": "Amazon DynamoDB",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546346,
        "value": "Amazon RDS",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546347,
        "value": "Amazon Redshift",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546348,
        "value": "Amazon Aurora",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 30,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546345,
        "questionId": 385742,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385742,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is planning to deploy a high-performance online trading application which requires a database that can scale globally and can handle frequent schema changes. The database should also support flexible schemas that enable faster and more iterative development.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which is the MOST suitable database service that you should use to achieve this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887959,
    "question": "AWS SAM",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS Lambda functions have an associated execution role that provides permissions to interact with other AWS services. However, when you run AWS Lambda functions locally using the SAM CLI, you’re simulating the execution environment of the Lambda function but not replicating the AWS execution context, including the IAM execution role. This means that the function won’t automatically assume any IAM execution role and instead will rely on the credentials stored in&nbsp;~/.aws/credentials&nbsp;file.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When testing locally with AWS SAM, you can specify a named profile from your AWS CLI configuration using the&nbsp;--profile&nbsp;parameter with the&nbsp;sam local invoke&nbsp;command. This will instruct the SAM CLI to use the credentials from the specified profile when invoking the Lambda function. You can run the&nbsp;aws configure&nbsp; with the&nbsp;--profile&nbsp;option to set the credentials for a named profile.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;In the scenario, the developer must first set up the sandbox AWS account’s credentials using&nbsp;aws configure --profile sandbox.&nbsp;This creates a named profile ‘sandbox’ (note that you can use any name for the profile). For local testing with the SAM CLI, the developer can then specify this profile using the command&nbsp;sam local invoke --profile sandbox. This ensures that the locally executed Lambda function utilizes the correct credentials to access resources in the sandbox AWS account.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/ex/hint(32_).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers are:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">–&nbsp;Use the&nbsp;aws configure&nbsp;command with the&nbsp;--profile&nbsp;parameter to add a named profile with the sandbox AWS account’s credentials.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">–&nbsp;Run the function using&nbsp;sam local invoke&nbsp;with the&nbsp;--profile&nbsp;parameter.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an AWS SAM CLI configuration file at the root of the SAM project folder. Add the&nbsp;AWS_ACCESS_KEY_ID&nbsp;and&nbsp;AWS_SECRET_ACCESS_KEY&nbsp;environment variables to it&nbsp;</strong></b><span>is incorrect.&nbsp;The SAM CLI relies on the AWS credentials stored in the&nbsp;/.aws/credentials&nbsp;file, which can be set through the&nbsp;aws configure&nbsp;command.&nbsp;While it’s technically possible to place application credentials in a configuration file, SAM CLI doesn’t support sourcing AWS credentials from it for authentication.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Add the AWS credentials of the sandbox AWS account to the&nbsp;Globals&nbsp;section of the&nbsp;template.yml&nbsp;file and reference them in the&nbsp;AWS::Serverless::Function&nbsp;properties section of the Lambda function</strong></b><span>&nbsp;is incorrect. The&nbsp;Globals&nbsp;section in a SAM&nbsp;template.yaml&nbsp;is primarily used for setting properties that apply to all AWS resources of a certain type. It’s not a storage location for AWS credentials. Moreover, the&nbsp;AWS::Serverless::Function&nbsp;resource property does not have fields for AWS credentials. Even if you were to add the credentials as environment variables,&nbsp;it still wouldn’t grant the locally running function the permissions associated with those credentials.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Run the function using&nbsp;sam local invoke&nbsp;with the&nbsp;--parameter-overrides&nbsp;parameter&nbsp;</strong></b><span>is incorrect.&nbsp;The&nbsp;--parameter-overrides&nbsp;option is typically used to change template parameters during local testing.&nbsp;For instance, if you had a parameter in your SAM template for setting an environment variable, the&nbsp;--parameter-overrides&nbsp;option would allow you to test with different values for those parameters. Still, it does not interact with nor modify AWS credentials.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-local-invoke.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-local-invoke.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/aws/aws-serverless-application-model-sam-command-line-interface-build-test-and-debug-serverless-apps-locally/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/aws/aws-serverless-application-model-sam-command-line-interface-build-test-and-debug-serverless-apps-locally/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546349,
        "value": "Use the aws configure command with the --profile parameter to add a named profile with the sandbox AWS account’s credentials",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546350,
        "value": "Run the function using sam local invoke with the --profile parameter.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546351,
        "value": "Run the function using sam local invoke with the --parameter-overrides parameter.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546352,
        "value": "Create an AWS SAM CLI configuration file at the root of the SAM project folder. Add the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables to it.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546353,
        "value": "Add the AWS credentials of the sandbox AWS account to the Globals section of the template.yml file and reference them in the AWS::Serverless::Function properties section of the Lambda function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 31,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546349,
        "questionId": 385743,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1546350,
        "questionId": 385743,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385743,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is working with an AWS Serverless Application Model (AWS SAM) application composed of several AWS Lambda functions. The developer runs the application locally on his laptop using&nbsp;sam local&nbsp;commands. While testing, one of the functions returns&nbsp;Access denied&nbsp;errors. Upon investigation, the developer discovered that the Lambda function is using the AWS SDK to make API calls within a sandbox AWS account.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which combination of steps must the developer do to resolve the issue? (Select TWO)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887960,
    "question": "Amazon ECS Cluster ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon DynamoDB is integrated with AWS Lambda so that you can create&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">triggers</em></i><span>—pieces of code that automatically respond to events in DynamoDB Streams. With triggers, you can build applications that react to data modifications in DynamoDB tables.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you enable DynamoDB Streams on a table, you can associate the stream ARN with a Lambda function that you write. Immediately after an item in the table is modified, a new record appears in the table’s stream. AWS Lambda polls the stream and invokes your Lambda function synchronously when it detects new stream records.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(33).jpg\"><span>You can create a Lambda function which can perform a specific action that you specify, such as sending a notification or initiating a workflow. For instance, you can set up a Lambda function to simply copy each stream record to persistent storage, such as EFS or S3, to create a permanent audit trail of write activity in your table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Suppose you have a mobile gaming app that writes to a&nbsp;XYZCourses&nbsp;table. Whenever the&nbsp;TopCourse&nbsp;attribute of the&nbsp;XYZScores&nbsp;table is updated, a corresponding stream record is written to the table’s stream. This event could then trigger a Lambda function that posts a congratulatory message on a social media network. (The function would simply ignore any stream records that are not updates to&nbsp;XYZCourses&nbsp;or that do not modify the&nbsp;TopCourse&nbsp;attribute.)</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">enable DynamoDB Streams to detect the new entries and automatically trigger the Lambda function</strong></b><span>. In this way, the requirement can be met with minimal configuration change as DynamoDB streams can be used as an event source to automatically trigger Lambda functions whenever there is a new entry.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Set up an Amazon EventBridge (Amazon CloudWatch Events) rule to automatically trigger the Lambda function whenever a new entry is created in the DynamoDB table&nbsp;</strong></b><span>is incorrect. An Amazon EventBridge (Amazon CloudWatch Events) rule is not capable of detecting table-level events from Amazon DynamoDB.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Run the Lambda function using SNS each time the ECS Cluster successfully processes financial data</strong></b><span>&nbsp;is incorrect because you don’t need to create an SNS topic just to invoke Lambda functions. You can simply enable DynamoDB streams to meet the requirement with less configuration.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Detect new entries in the DynamoDB table using AWS Copilot then automatically invoke the Lambda function for processing</strong></b><span>&nbsp;is incorrect because AWS Copilot is just a command-line tool that allows developers to quickly and easily build, release, and operate containerized applications on AWS. It does not have the capability to detect new entries in a DynamoDB table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546354,
        "value": "Run the Lambda function using SNS each time the ECS Cluster successfully processes financial data.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546355,
        "value": "Set up an Amazon EventBridge (Amazon CloudWatch Events) rule to automatically trigger the Lambda function whenever a new entry is created in the DynamoDB table.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546356,
        "value": "Enable DynamoDB Streams to detect the new entries and automatically trigger the Lambda function.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546357,
        "value": "Detect the new entries in the DynamoDB table using AWS Copilot, then automatically invoke the Lambda function for processing.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 32,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546356,
        "questionId": 385744,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385744,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An application hosted in an Amazon ECS Cluster processes a large data stream and stores the result in a DynamoDB table. There is an urgent requirement to detect new entries in the table and automatically trigger a Lambda function to run some verification tests on the processed data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following options can satisfy the requirement with minimal configuration?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887961,
    "question": "ECS Cluster",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A client of your API can invalidate an existing cache entry and reload it from the integration endpoint for individual requests. The client must send a request that contains the&nbsp;Cache-Control: max-age=0&nbsp;header. The client receives the response directly from the integration endpoint instead of the cache, provided that the client is authorized to do so. This replaces the existing cache entry with the new response, which is fetched from the integration endpoint.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(34).jpg\"><span>Ticking the&nbsp;Require authorization&nbsp;checkbox ensures that not every client can invalidate the API cache. If most or all of the clients invalidate the API cache, this could significantly increase the latency of your API.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, to only allow authorized clients to invalidate an API Gateway cache entry when submitting API requests, you can just&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">tick the&nbsp;Require Authorization&nbsp;checkbox in the Cache Settings of your API via the console and instruct the client to send a request which contains the&nbsp;Cache-Control: max-age=0&nbsp;header.&nbsp;</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Instructing the client to send a request which contains the&nbsp;Cache-Control: max-age=1&nbsp;header</strong></b><span>&nbsp;is incorrect because the value of the max-age should be 0 and not 1.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Providing your clients an authorization token from STS to query data directly from DynamoDB</strong></b><span>&nbsp;is incorrect because this will not enable your clients to invalidate the cache in API Gateway. Considering that your clients are using APIs to interact with DynamoDB, you should not provide them access to directly submit queries to your table but only through API Gateway.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Modifying the cache settings to retrieve the latest data from DynamoDB if the request header’s authorization signature matches your API’s trusted clients list&nbsp;</strong></b><span>is incorrect because this configuration can’t be done. There is no feature in API Gateway Cache Settings which would allow you to make a list of authorized signatures that are allowed to invalidate cache entries.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/api-gateway/faqs/#Throttling_and_Caching\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/api-gateway/faqs/#Throttling_and_Caching</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546358,
        "value": "Provide your clients an authorization token from STS to query data directly from DynamoDB.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546359,
        "value": "The client must send a request which contains the Cache-Control: max-age=0 header.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546360,
        "value": "Tick the Require Authorization checkbox in the Cache Settings of your API via the console.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546361,
        "value": "Modify the cache settings to retrieve the latest data from DynamoDB if the request header's authorization signature matches your API's trusted clients list.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546362,
        "value": "The client must send a request which contains the Cache-Control: max-age=1 header.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 33,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546361,
        "questionId": 385745,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1546360,
        "questionId": 385745,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385745,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A web application is running in an ECS Cluster and updates data in DynamoDB several times a day. The clients retrieve data directly from the DynamoDB through APIs exposed by Amazon API Gateway. Although API caching is enabled, there are specific clients that want to retrieve the latest data from DynamoDB for every API request sent.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What should be done to only allow authorized clients to invalidate an API Gateway cache entry when submitting API requests? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887962,
    "question": "Amazon API gateway ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A client of your API can invalidate an existing cache entry and reload it from the integration endpoint for individual requests. The client must send a request that contains the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Cache-Control: max-age=0</strong></b><span>&nbsp;header.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(35).jpg\"><span>The client receives the response directly from the integration endpoint instead of the cache, provided that the client is authorized to do so. This replaces the existing cache entry with the new response, which is fetched from the integration endpoint.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Modifying the TTL value for the cached data to a lower value</strong></b><span>&nbsp;is incorrect because there is still no guarantee that the client will submit a request after the cache has expired. Also, you will not be fully utilizing the purpose of API caching since new data will be fetched from the endpoint more often. The best solution for this scenario is to use the Cache-Control header instead.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Allowing the client to access the endpoint directly</strong></b><span>&nbsp;is incorrect because the purpose of placing API Gateway in-front of your endpoints is to not expose your endpoints to the public and risk security issues. It also provides you the additional benefits of not burdening your endpoints with a massive number of requests and allowing developer-friendly data exchanges through APIs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Having the client send a request with the&nbsp;Cached: false&nbsp;header</strong></b><span>&nbsp;is incorrect because this is a custom header. The correct way is to configure&nbsp;the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Cache-Control: max-age=0</strong></b><span>&nbsp;header instead.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Reference:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#override-api-gateway-stage-cache-for-method-cache\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#override-api-gateway-stage-cache-for-method-cache</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546363,
        "value": "Have the client send a request with the Cached: false header.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546364,
        "value": "Modify cache TTL value to a shorter period.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546365,
        "value": "Have the client send a request with the Cache-Control: max-age=0 header.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546366,
        "value": "Override API caching by allowing the client to send requests to the endpoint directly.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 34,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546365,
        "questionId": 385746,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385746,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Your serverless AWS Lambda functions are integrated with Amazon API gateway using Lambda proxy integration. The API caching feature is enabled in the API Gateway with a TTL value of 300 seconds. A client would like to fetch the latest data from your endpoints every time a request is sent and invalidate the existing cache.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What should the client do in order to get the latest data?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887963,
    "question": "Key/value cache ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Redis and Memcached&nbsp;are popular, open-source, in-memory data stores. Although they are both easy to use and offer high performance, there are important differences to consider when choosing an engine. Memcached is designed for simplicity while Redis offers a rich set of features that make it effective for a wide range of use cases.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, Redis can provide a much more durable and powerful cache layer to the prototype distributed system, however, you should take note of one keyword in the requirement:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">multithreaded</strong></b><span>. In terms of commands execution, Redis is mostly a single-threaded server. It is not designed to benefit from multiple CPU cores unlike Memcached, however, you can launch several Redis instances to scale out on several cores if needed.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Memcached is a more suitable choice since the scenario specifies that the system will run large nodes with multiple cores or threads which Memcached can adequately provide.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">You can choose Memcached over Redis if you have the following requirements:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– You need the simplest model possible.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– You need to run large nodes with multiple cores or threads.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– You need the ability to scale out and in, adding and removing nodes as demand on your system increases and decreases.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– You need to cache objects, such as a database.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(36).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>This is why the most suitable answer to this scenario is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon ElastiCache for Memcached.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon ElastiCache for Redis</strong></b><span>&nbsp;is incorrect because it does not totally support a multithreaded architecture, unlike Memcached. Although Redis has more features compared with Memcached, the scenario requires that the cache layer is&nbsp;multithreaded. This is why Memcached is a more suitable cache engine to choose from instead of Redis.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon CloudFront</strong></b><span>&nbsp;is incorrect because it is primarily used as a Content Delivery Network (CDN) service which delivers your entire website, including dynamic, static, streaming, and interactive content using a global network of edge locations.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS IoT Greengrass</strong></b><span>&nbsp;is incorrect because this service is primarily used to enable connected devices to run AWS Lambda functions, execute predictions based on machine learning models, keep device data in sync, and communicate with other devices securely even without an Internet connection. Hence, this is not a suitable option for this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:&nbsp;</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/elasticache/redis-vs-memcached\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/elasticache/redis-vs-memcached</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/caching/aws-caching/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/caching/aws-caching/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546367,
        "value": "AWS Greengrass",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546368,
        "value": "Amazon CloudFront",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546369,
        "value": "Amazon ElastiCache for Redis",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546370,
        "value": "Amazon ElastiCache for Memcached",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 35,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546370,
        "questionId": 385747,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385747,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is building a web application which requires a multithreaded event-based key/value cache store that will cache result sets from database calls. You need to run large nodes with multiple cores for your cache layer and it should scale up or down as the demand on your system increases and decreases.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST suitable service that you should use?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887964,
    "question": "RDS",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Systems Manager Parameter Store</strong></b><span>&nbsp;provides secure, hierarchical storage for configuration data management and secrets management. You can store data such as passwords, database strings, and license codes as parameter values. You can store values as plain text or encrypted data. You can then reference values by using the unique name that you specified when you created the parameter.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(37).jpg\"><span>Parameter Store offers the following benefits and features:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Use a secure, scalable, hosted secrets management service (No servers to manage).</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Improve your security posture by separating your data from your code.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Store configuration data and secure strings in hierarchies and track versions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Control and audit access at granular levels.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Configure change notifications and trigger automated actions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Tag parameters individually, and then secure access from different levels, including operational, parameter, Amazon EC2 tag, or path levels.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Reference AWS Secrets Manager secrets by using Parameter Store parameters.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">creating a Secure String Parameter using the AWS Systems Manager Parameter Store</strong></b><span>&nbsp;is the correct solution for this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use AWS Lambda environment variables encrypted with KMS which will be shared by the Lambda functions</strong></b><span>&nbsp;is incorrect. Even though the credentials will be encrypted, these environment variables will only be used by an individual Lambda function, and cannot be shared.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an IAM Execution Role that has access to RDS and attach it to the Lambda functions</strong></b><span>&nbsp;is incorrect because this solution will not encrypt the database credentials for RDS.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Use AWS Lambda environment variables encrypted with CloudHSM</strong></b><span>&nbsp;is incorrect because Lambda primarily uses KMS for encryption and not CloudHSM.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546371,
        "value": "Create a Secure String Parameter using the AWS Systems Manager Parameter Store.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546372,
        "value": "Use AWS Lambda environment variables encrypted with KMS which will be shared by the Lambda functions.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546373,
        "value": "Create an IAM Execution Role that has access to RDS and attach it to the Lambda functions.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546374,
        "value": "Use AWS Lambda environment variables encrypted with CloudHSM.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 36,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546371,
        "questionId": 385748,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385748,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A serverless application is composed of several Lambda functions which reads data from RDS. These functions must share the same connection string that should be encrypted to improve data security.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST secure way to meet the above requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887965,
    "question": "Amazon API Gateway proxy integration",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon API Gateway Lambda proxy integration is a simple, powerful, and nimble mechanism to build an API with a setup of a single API method. The Lambda proxy integration allows the client to call a single Lambda function in the backend. The function accesses many resources or features of other AWS services, including calling other Lambda functions</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(38).jpg\"><span>In Lambda proxy integration, when a client submits an API request, API Gateway passes the raw request as-is to the integrated Lambda function, except that the order of the request parameters is not preserved. This&nbsp;</span><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>request data</span></a><span>&nbsp;includes the request headers, query string parameters, URL path variables, payload, and API configuration data. The configuration data can include current deployment stage name, stage variables, user identity, or authorization context (if any). The backend Lambda function parses the incoming request data to determine the response that it returns.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For API Gateway to pass the Lambda output as the API response to the client, the Lambda function must return the result in the following JSON format:</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>{</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>\"isBase64Encoded\": true|false,</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>\"statusCode\": httpStatusCode,</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>\"headers\": { \"headerName\": \"headerValue\", ... },</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;&nbsp;&nbsp; \"body\": \"...\"</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>}</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Since the Lambda function returns the result in XML format, it will cause the 502 errors in the API Gateway. Hence, the correct answer is that&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">there is an incompatible output returned from a Lambda proxy integration backend.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">The API name of the Amazon API Gateway proxy</strong></b><span>&nbsp;is invalid is incorrect because there is nothing wrong with its&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">MyAPI</em></i><span>&nbsp;name.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">There has been an occasional out-of-order invocation due to heavy loads</strong></b><span>&nbsp;is incorrect. Although this is a valid cause of a 502 error, the issue is most likely caused by the Lambda function’s XML response instead of JSON.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">The endpoint request timed-out</strong></b><span>&nbsp;is incorrect because this will likely result in 504 errors and not 502’s.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/malformed-502-api-gateway/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/premiumsupport/knowledge-center/malformed-502-api-gateway/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-output-format\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-output-format</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/api-reference/handling-errors/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/api-reference/handling-errors/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546375,
        "value": "There is an incompatible output returned from a Lambda proxy integration backend.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546376,
        "value": "The API name of the Amazon API Gateway proxy is invalid.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546377,
        "value": "The endpoint request timed-out.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546378,
        "value": "There has been an occasional out-of-order invocation due to heavy loads.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 37,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546375,
        "questionId": 385749,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385749,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon API Gateway proxy integration named&nbsp;MyAPI&nbsp;to work with a Lambda function. However, when the API is being called, the developer receives a&nbsp;502 Bad Gateway&nbsp;error. She tried invoking the underlying function, but it properly returned the result in XML format.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What is the MOST likely root cause of this issue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887966,
    "question": "AWS service",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Kinesis Data Streams</strong></b><span>&nbsp;is a fully managed, scalable service designed to handle large amounts of real-time data streaming. It enables the collection, processing, and analysis of real-time data at a massive scale, allowing applications to react to new information almost immediately. Data streams can be ingested from various sources, such as IoT devices, application logs, or payment transactions, making it ideal for use cases like fraud detection, real-time analytics, and monitoring. Kinesis Data Streams allows users to process data with multiple consumers simultaneously, supporting the parallel analysis by various fraud detection models and enabling real-time decision-making. Its low-latency capabilities ensure that the data is quickly available for processing, making it a great fit for applications that require instant responses, such as fraud prevention in payment systems.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;With its ability to scale dynamically based on the volume of incoming data, Kinesis Data Streams ensures cost optimization by allowing users to adjust their resources according to demand. The service automatically handles partitioning and replication of data, ensuring high availability and fault tolerance. Additionally, it integrates seamlessly with other AWS services like AWS Lambda for real-time processing, Amazon Redshift for data storage and analytics, and Amazon S3 for long-term data storage.</span><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(39).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Kinesis Data Streams.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Data Firehose&nbsp;</strong></b><span>is incorrect because it is&nbsp;primarily used for loading streaming data into other AWS services (e.g., Amazon S3, Amazon Redshift, Amazon Elasticsearch) for storage or analysis. While it can stream data, it does not provide the real-time processing and concurrent model support that Kinesis Data Streams offers. Data Firehose is optimized for delivering data to storage destinations. It lacks fine-grained control over stream processing, which is necessary for fraud detection, where real-time analysis and immediate action are crucial.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Managed Streaming for Apache Kafka (Amazon MSK)</strong></b><span>&nbsp;is incorrect.&nbsp;While Apache Kafka is a powerful distributed streaming platform, it typically requires more operational overhead compared to Kinesis Data Streams. It’s more complex to set up, manage, and scale. For a real-time fraud detection system, simplicity and low-latency processing are essential, and Kinesis Data Streams provides a more streamlined solution with easier integration into the AWS environment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Amazon Kinesis Agent</strong></b><span>&nbsp;is incorrect because it is a lightweight software that helps send log and event data from on-premises servers to Amazon Kinesis Data Streams or Data Firehose. However, it’s not a service for data streaming itself. It is only used for pushing data to a stream or Firehose from local sources but does not provide the real-time stream processing capabilities that Kinesis Data Streams does.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/streams/latest/dev/introduction.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/streams/latest/dev/introduction.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/kinesis/data-streams/faqs/?nc=sn&amp;loc=6\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/kinesis/data-streams/faqs/?nc=sn&amp;loc=6</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546379,
        "value": "Amazon Kinesis Agent",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546380,
        "value": "Amazon Data Firehose",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546381,
        "value": "Amazon Managed Streaming for Apache Kafka (Amazon MSK)",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546382,
        "value": "Amazon Kinesis Data Streams",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 38,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546382,
        "questionId": 385750,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385750,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A financial services company is developing a real-time fraud detection system for its payment processing application. Payment transaction events are sent via an API, and the system must analyze each transaction in real-time to identify and flag potentially fraudulent activities. The solution should support concurrent processing by multiple fraud detection models and monitoring systems while ensuring scalability, low-latency performance, and cost optimization.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which AWS service is best suited to meet these requirements?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887967,
    "question": "Lambda function ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When AWS Lambda executes your Lambda function, it provisions and manages the resources needed to run your Lambda function. When you create a Lambda function, you specify configuration information, such as the amount of memory and maximum execution time that you want to allow for your Lambda function. When a Lambda function is invoked, AWS Lambda launches an execution context based on the configuration settings you provide. The execution context is a temporary runtime environment that initializes any external dependencies of your Lambda function code, such as database connections or HTTP endpoints. This affords subsequent invocations better performance because there is no need to “cold-start” or initialize those external dependencies, as explained below.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>It takes time to set up an execution context and do the necessary “bootstrapping”, which adds some latency each time the Lambda function is invoked. You typically see this latency when a Lambda function is invoked for the first time or after it has been updated because AWS Lambda tries to reuse the execution context for subsequent invocations of the Lambda function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(40).jpg\"><span>After a Lambda function is executed, AWS Lambda maintains the execution context for some time in anticipation of another Lambda function invocation. In effect, the service freezes the execution context after a Lambda function completes and thaws the context for reuse if AWS Lambda chooses to reuse the context when the Lambda function is invoked again.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Each execution context provides&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">512 MB – 10,240 MB</strong></b><span>&nbsp;of additional disk space in the&nbsp;/tmp&nbsp;directory. The directory content remains when the execution context is frozen, providing a transient cache that can be used for multiple invocations. You can add extra code to check if the cache has the data that you stored.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer in this scenario is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Store&nbsp;the file in the&nbsp;/tmp&nbsp;directory of the execution context and reuse it on succeeding invocations.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the memory allocation of the function&nbsp;</strong></b><span>is incorrect. The actual processing time may be reduced by allocating more memory, but there would still be a lot of time wasted in downloading the 250 MB file every time the function is invoked.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the timeout of the function</strong></b><span>&nbsp;is incorrect because this doesn’t solve the root cause of the problem. You may configure your function with a maximum timeout of 15 minutes. However, the fact still remains that the function repeatedly downloads the file at every invocation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the ephemeral storage size of the function&nbsp;</strong></b><span>is incorrect. This won’t have any effect at all on solving the issue. The change must be made at the code level. Instead of storing the file directly on memory, storing it in the&nbsp;/tmp&nbsp;directory provides a more cost-effective and scalable solution, as the function can read and write the file from disk as needed. The&nbsp;/tmp&nbsp;directory also persists between invocations of the function, allowing it to access the file more quickly between invocations.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html#function-configuration\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html#function-configuration</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546383,
        "value": "Increase the memory allocation of the function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546384,
        "value": "Store the file in the /tmp directory of the execution context and reuse it on succeeding invocations.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546385,
        "value": "Increase the timeout of the function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546386,
        "value": "Increase the ephemeral storage size of the function",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 39,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546386,
        "questionId": 385751,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385751,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A Lambda function downloads the same 250 MB file between invocations and stores it in memory for processing. This leads to frequent timeouts and negatively impacts the performance of the serverless application.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which change should be made to resolve the issue most effectively?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887968,
    "question": "CloudWatch metric ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When you create an alarm, you specify three settings to enable CloudWatch to evaluate when to change the alarm state:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;– Period</strong></b><span>&nbsp;is the length of time to evaluate the metric or expression to create each individual data point for an alarm. It is expressed in seconds. If you choose one minute as the period, there is one datapoint every minute.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;– Evaluation Period</strong></b><span>&nbsp;is the number of the most recent periods, or data points, to evaluate when determining alarm state.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;– Datapoints to Alarm</strong></b><span>&nbsp;is the number of data points within the evaluation period that must be breaching to cause the alarm to go to the&nbsp;ALARM&nbsp;state. The breaching data points do not have to be consecutive, they just must all be within the last number of data points equal to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Evaluation Period</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the following figure, the alarm threshold is set to three units. The alarm is configured to go to the&nbsp;ALARM&nbsp;state and both&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Evaluation Period</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Datapoints to Alarm</strong></b><span>&nbsp;are 3. That is, when all three datapoints in the most recent three consecutive periods are above the threshold, the alarm goes to the&nbsp;ALARM&nbsp;state. In the figure, this happens in the third through fifth time periods. At period six, the value dips below the threshold, so one of the periods being evaluated is not breaching, and the alarm state changes to&nbsp;OK. During the ninth time period, the threshold is breached again, but for only one period. Consequently, the alarm state remains&nbsp;OK.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;Hence, the option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Set both the&nbsp;Evaluation Period&nbsp;and&nbsp;Datapoints to Alarm&nbsp;to 3</strong></b><span>&nbsp;is the correct answer.</span><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(41).jpg\"></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use high-resolution metrics</strong></b><span>&nbsp;is incorrect because the scenario says that it only needs to monitor the HTTP server errors every minute, and not its sub-minute activity.&nbsp;If you set an alarm on a high-resolution metric, you can specify a high-resolution alarm with a period of 10 seconds or 30 seconds. Hence, this option is irrelevant in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Set both the&nbsp;Period&nbsp;and&nbsp;Datapoints to Alarm&nbsp;to 3</strong></b><span>&nbsp;is incorrect because you should set the&nbsp;</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">Evaluation Period</strong></b></i><span>&nbsp;and not the&nbsp;</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">Period</strong></b></i><span>&nbsp;setting.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use metric math in CloudWatch to properly compute the threshold</strong></b><span>&nbsp;is incorrect because the Metric Math feature is only applicable for scenarios where you need to query multiple CloudWatch metrics or if you want to use math expressions to create new time series based on selected metrics.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ConsoleAlarms.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ConsoleAlarms.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546387,
        "value": "Use metric math in CloudWatch to properly compute the threshold.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546388,
        "value": "Set both the Period and Datapoints to Alarm to 3.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546389,
        "value": "Use high-resolution metrics.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546390,
        "value": "Set both the Evaluation Period and Datapoints to Alarm to 3.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 40,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546389,
        "questionId": 385752,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385752,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A website hosted in AWS has a custom CloudWatch metric to track all HTTP server errors in the site every minute, which occurs intermittently. An existing CloudWatch Alarm has already been configured for this metric but you would like to re-configure this to properly monitor the application. The alarm should only be triggered when all three data points in the most recent three consecutive periods are above the threshold.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following options is the MOST appropriate way to monitor the website based on the given threshold?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887969,
    "question": "VPC",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If a “Too Many Connections” error happens to a client connecting to a MySQL database, it means all available connections are in use by other clients. Opening a connection consumes resources on the database server. Since&nbsp;Lambda functions can scale to tens of thousands of concurrent connections, your database needs more resources to open and maintain connections instead of executing queries. The maximum number of connections a database can support is largely determined by the amount of memory allocated to it. Upgrading to a database instance with higher memory is a straightforward way of solving the problem. Another approach would be to maintain a connection pool that clients can reuse. This is where RDS Proxy comes in.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(42).jpg\"><span>RDS Proxy helps you manage a large number of connections from Lambda to an RDS database by establishing a warm connection pool to the database.&nbsp;Your Lambda functions interact with RDS Proxy instead of your database instance. It handles the connection pooling necessary for scaling many simultaneous connections created by concurrent Lambda functions. This allows your Lambda applications to reuse existing connections, rather than creating new connections for every function invocation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Thus, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Provision an RDS Proxy between the Lambda function and RDS database instance.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the concurrency limit of the Lambda function</strong></b><span>&nbsp;is incorrect. The concurrency limit refers to the maximum requests AWS Lambda can handle simultaneously. Increasing the limit will allow for more requests to open a database connection, which could potentially worsen the problem.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the value of the&nbsp;max_connections&nbsp;parameter of the Aurora MySQL DB Instance</strong></b><span>&nbsp;is incorrect. Although this may be a valid solution, it is not the most efficient since it simply increases the maximum number of connections that can be made to the database instance. Moreover, increasing the maximum number of connections alone, without considering the database size,&nbsp;may lead to other issues, such as slow response times, timeouts, and even crashes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Increase the allocated memory of your function&nbsp;</strong></b><span>is incorrect. Increasing the Lambda function’s memory can improve its performance, but it may not necessarily solve the underlying issue of the ‘too many connections’ error. This error is typically caused by a limit on the maximum number of connections the database can handle, so solutions that address the database’s connection management, such as creating a connection pool using RDS Proxy, are more likely to be effective.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/rds/proxy/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/rds/proxy/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/compute/using-amazon-rds-proxy-with-aws-lambda/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/compute/using-amazon-rds-proxy-with-aws-lambda/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546391,
        "value": "Increase the value of the max_connections parameter of the Aurora MySQL DB Instance.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546392,
        "value": "Increase the concurrency limit of the Lambda function",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546393,
        "value": "Provision an RDS Proxy between the Lambda function and the RDS database instance",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546394,
        "value": "Increase the allocated memory of your function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 41,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546391,
        "questionId": 385753,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385753,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer has an application that uses a Lambda function to process data from an Aurora MySQL DB Instance in a Virtual Private Cloud (VPC). The database throws a&nbsp;MySQL: ERROR 1040: Too many connections&nbsp;error whenever there is a surge in incoming traffic.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which is the most suitable solution for resolving the issue?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887970,
    "question": "AWS SDK",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you have resources that are running&nbsp;inside AWS that need programmatic access to various AWS services, then the best practice is always to use IAM roles. However, applications running outside of an AWS environment will need access keys for programmatic access to AWS resources. For example, monitoring tools running on-premises and third-party automation tools will need access keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Access keys are long-term credentials for an IAM user or the AWS account root user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API (directly or using the AWS SDK).</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(43).jpg\"><span>In order to use the AWS SDK for your application, you have to create your credentials file first at&nbsp;~/.aws/credentials&nbsp;for Linux servers or at&nbsp;C:\\Users\\USER_NAME\\.aws\\credentials&nbsp;for Windows users and then save your access keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Go to the AWS Console and create a new IAM user with programmatic access. In the application server, create the credentials file at&nbsp;~/.aws/credentials&nbsp;with the access keys of the IAM user.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an IAM role with the appropriate permissions to access the required AWS services and assign the role to the on-premises Linux server. Whenever the application needs to access any AWS services, request for temporary security credentials from STS using the AssumeRole API</strong></b><span>&nbsp;is incorrect because the scenario says that the application is running in a Linux server on-premises and not on an EC2 instance. You cannot directly assign an IAM Role to a server on your on-premises data center. Although it may be possible to use a combination of STS and IAM Role, the use of access keys for AWS SDK is still preferred, especially if the application server is on-premises.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an IAM role with the appropriate permissions to access the required AWS services. Assign the role to the on-premises Linux server</strong></b><span>&nbsp;is also incorrect because, just as mentioned above, the use of an IAM Role is not a suitable solution for this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Go to the AWS Console and create a new IAM User with the appropriate permissions. In the application server, create the credentials file at ~/.aws/credentials with the username and the hashed password of the IAM User</strong></b><span>&nbsp;is incorrect. An IAM user’s username and password can only be used&nbsp;to interact with AWS via its Management Console. These credentials are intended for human use and are not suitable for use in automated systems, such as applications and scripts that make programmatic calls to AWS services.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/developers/getting-started/nodejs/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/developers/getting-started/nodejs/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/security/guidelines-for-protecting-your-aws-account-while-using-programmatic-access/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/security/guidelines-for-protecting-your-aws-account-while-using-programmatic-access/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546395,
        "value": "Go to the AWS Console and create a new IAM User with the appropriate permissions. In the application server, create the credentials file at ~/.aws/credentials with the username and the hashed password of the IAM User.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546396,
        "value": "Create an IAM role with the appropriate permissions to access the required AWS services and assign the role to the on-premises Linux server. Whenever the application needs to access any AWS services, request for temporary security credentials from STS using the AssumeRole API.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546397,
        "value": "Go to the AWS Console and create a new IAM user with programmatic access. In the application server, create the credentials file at ~/.aws/credentials with the access keys of the IAM user.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546398,
        "value": "Create an IAM role with the appropriate permissions to access the required AWS services. Assign the role to the on-premises Linux server.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 42,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546395,
        "questionId": 385754,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385754,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A programmer is developing a Node.js application that will be run on a Linux server in their on-premises data center. The application will access various AWS services such as S3, DynamoDB, and ElastiCache using the AWS SDK.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST suitable way to provide access for the developer to accomplish the specified task?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887971,
    "question": "API Gateway.",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you create a Lambda function to process events from event sources that aren’t poll-based (for example, Lambda can process every event from other sources, like Amazon S3 or API Gateway), each published event is a unit of work, in parallel, up to your account limits. Therefore, the number of invocations these event sources make influences the concurrency.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use this formula to estimate the capacity used by your function:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">concurrent executions = (invocations per second) x (average execution duration in seconds)</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For example, consider a Lambda function that processes Amazon S3 events. Suppose that the Lambda function takes on average three seconds and Amazon S3 publishes 10 events per second. Then, you will have 30 concurrent executions of your Lambda function. See the calculation shown below to visualize the process:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp; &nbsp; &nbsp; =&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">(10 events per second) x (3 seconds average execution duration)</strong></b><br><span> = &nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">30 concurrent executions</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In this scenario, it is expected that the Lambda function takes&nbsp;a maximum of 50 seconds for every execution with 10 requests per second. Using the formula above, the function will have 500 concurrent executions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp; &nbsp; &nbsp; =&nbsp;(10 events per second) x (50 seconds average execution duration)</strong></b><br><b><strong class=\"Editor__editor-text-bold___25KrR\"> = &nbsp;500 concurrent executions</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS Lambda dynamically scales function execution in response to increased traffic, up to your&nbsp;</span><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>concurrency limit</span></a><span>. Under sustained load, your function’s concurrency bursts to an initial level between 500 and 3000 concurrent executions that varies per region. After the initial burst, the function’s capacity increases by an additional 500 concurrent executions each minute until either the load is accommodated, or the total concurrency of all functions in the region hits the limit.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By default, AWS Lambda limits the total concurrent executions across all functions within a given region to 1000. This limit can be raised by&nbsp;requesting for AWS to increase the limit of the concurrent executions of your account.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Since the expected concurrent executions of the Lambda function is well within the default concurrency limit, the best thing to do here is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">do nothing since Lambda will automatically scale to handle the load.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Submitting a&nbsp;Service Limit Increase&nbsp;request to AWS to raise your concurrent executions limit&nbsp;</strong></b><span>is incorrect because this is totally unnecessary given that the concurrent executions that will be used by your function are within the limits.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using Dead Letter Queues (DLQ) to reprocess failed requests&nbsp;</strong></b><span>is incorrect because DLQs are primarily used to direct unprocessed events to an Amazon SQS queue or an Amazon SNS topic to analyze the failure.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Implementing traffic shifting in Lambda using Aliases&nbsp;</strong></b><span>is incorrect because this just allows you to point to two different versions of the Lambda function and dictate what percentage of incoming traffic is sent to each version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html#function-configuration\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html#function-configuration</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546399,
        "value": "Do nothing since Lambda will automatically scale to handle the load.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546400,
        "value": "Submit a Service Limit Increase request to AWS to raise your concurrent executions limit.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546401,
        "value": "Use Dead Letter Queues (DLQ) to reprocess failed requests.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546402,
        "value": "Implement traffic shifting in Lambda using Aliases.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 43,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546399,
        "questionId": 385755,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385755,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is working on a Lambda function which has an event source mapping to process requests from API Gateway. The function will consistently have 10 requests per second and it will take a maximum of 50 seconds to complete each request.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What should the developer do to prevent the function from throttling?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887972,
    "question": "Amazon API Gateway",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In Amazon API Gateway, API keys by themselves do not grant access to execute an API. They need to be associated with a usage plan, and that usage plan then determines which API stages and methods the API key can access.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(45).jpg\"><span>If the API key is not associated with a usage plan, it will not have permission to access any of the resources, which will result in a “403 Forbidden” error.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the given scenario, existing users can access the service, but new premium subscribers cannot. This indicates that while the API keys were created for new users, they might not have been associated with the appropriate usage plan. Hence, after generating an API key, it must be added to a usage plan by calling the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">CreateUsagePlanKey&nbsp;</strong></b><span>method</span><b><strong class=\"Editor__editor-text-bold___25KrR\">.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Associate the API keys for the premium users with the intended usage plan using the&nbsp;CreateUsagePlanKey&nbsp;operation.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the&nbsp;ImportApiKeys&nbsp;operation to import the premium users’ keys, then apply the&nbsp;UpdateUsagePlan&nbsp;operation to set the new tier access&nbsp;</strong></b><span>is incorrect.&nbsp;The&nbsp;importApiKeys&nbsp;API is primarily used for bulk importing API keys, not for associating them with a usage plan. Although the&nbsp;updateUsagePlan&nbsp;API modifies properties of a usage plan; it doesn’t handle direct association of API keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the&nbsp;UpdateAuthorizer&nbsp;operation to modify the authorization settings. Promote the changes to the production stage by calling the&nbsp;CreateDeployment&nbsp;operation</strong></b><span>&nbsp;is incorrect.&nbsp;The&nbsp;updateAuthorizer&nbsp;operation is only used to modify the settings of an existing custom authorizer, which handles custom authorization logic for APIs. In the scenario, the issue is not related to custom authorization but rather to the association of API keys with a usage plan.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Instruct users to send their API key in a custom header. In the integration request, adjust the mapping template to extract and evaluate this header to distinguish between free-tier and premium subscribers&nbsp;</strong></b><span>is incorrect.&nbsp;Changing the way users provide their API key adds unnecessary complexity and won’t solve the issue at hand. The problem isn’t with how the API key is being sent but with the API key not having appropriate permissions because it’s not associated with a usage plan.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/api/API_UpdateUsagePlan.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/api/API_UpdateUsagePlan.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/api/API_CreateApiKey.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/api/API_CreateApiKey.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546403,
        "value": "Associate the API keys for the premium users with the intended usage plan using the CreateUsagePlanKey operation.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546404,
        "value": "Use the ImportApiKeys operation to import the premium users’ keys, then apply the UpdateUsagePlan operation to set the new tier access.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546405,
        "value": "Instruct users to send their API key in a custom header. In the integration request, adjust the mapping template to extract and evaluate this header to distinguish between free-tier and premium subscribers.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546406,
        "value": "Use the UpdateAuthorizer operation to modify the authorization settings. Promote the changes to the production stage by calling the CreateDeployment operation.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 44,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546404,
        "questionId": 385756,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385756,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company offers a Generative Artificial Intelligence (AI) service exposed through a REST API managed by Amazon API Gateway. They recently rolled out a subscription tier where users receive API keys to access premium features. The company uses the&nbsp;CreateApiKey&nbsp;API for generating these keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>During testing, developers noticed that while existing users can access the service without issues, new premium subscribers get a&nbsp;403 Forbidden&nbsp;error when using their API keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What must be done to give new users access to the service?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887973,
    "question": "Lambda function",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CodeDeploy</strong></b><span>&nbsp;is a deployment service that automates application deployments to Amazon EC2 instances, on-premises instances, serverless Lambda functions, or Amazon ECS services.&nbsp;CodeDeploy can deploy application content that runs on a server and is stored in Amazon S3 buckets, GitHub repositories, or Bitbucket repositories. CodeDeploy can also deploy a serverless Lambda function. You do not need to make changes to your existing code before you can use CodeDeploy.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>CodeDeploy supports the following deployment configurations:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">-In-place (for EC2/On-premises)&nbsp;</strong></b><span>–&nbsp;the application on each instance in the deployment group is stopped, the latest application revision is installed, and the new version of the application is started and validated.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">-Canary (for Lambda/ECS) –</strong></b><span>&nbsp;traffic is shifted in two increments. You can choose from predefined canary options that specify the percentage of traffic shifted to your updated Lambda function or ECS task set in the first increment and the interval, in minutes, before the remaining traffic is shifted in the second increment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">-Linear&nbsp;(for Lambda/ECS) –</strong></b><span>&nbsp;traffic is shifted in equal increments with an equal number of minutes between each increment. You can choose from predefined linear options that specify the percentage of traffic shifted in each increment and the number of minutes between each increment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">-All-at-once&nbsp;(for Lambda/ECS) –</strong></b><span>&nbsp;all traffic is shifted from the original Lambda function or ECS task set to the updated function or task set all at once.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(46).jpg\"><span>In a&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Canary</strong></b><span>&nbsp;deployment configuration, the traffic is shifted in&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">two</strong></b><span>&nbsp;increments. You can choose from predefined canary options that specify the percentage of traffic shifted to your updated Lambda function version in the first increment and the interval, in minutes, before the remaining traffic is shifted in the second increment. Hence, this is the correct answer which will satisfy the requirement for the given scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Linear</strong></b><span>&nbsp;is incorrect because this will cause the traffic to be shifted in equal increments with an equal number of minutes between each increment. You can choose from predefined linear options that specify the percentage of traffic shifted in each increment and the number of minutes between each increment.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">All-at-once&nbsp;</strong></b><span>is incorrect because with this deployment configuration, the traffic is shifted from the original Lambda function to the updated Lambda function version all at once.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Rolling with additional batch</strong></b><span>&nbsp;is incorrect because this is only applicable in Elastic Beanstalk and not for Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546407,
        "value": "Rolling with additional batch",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546408,
        "value": "Linear",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546409,
        "value": "Canary",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546410,
        "value": "All at once",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 45,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546409,
        "questionId": 385757,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385757,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A Lambda function has been integrated with DynamoDB Streams as its event source. There has been a new version of the function that needs to be deployed using CodeDeploy where the traffic must be shifted in two increments. It should shift 10 percent of the incoming traffic to the new version in the first increment and then the remaining 90 percent should be deployed five minutes later.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following deployment configurations is the MOST suitable to satisfy this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887974,
    "question": "IAM role",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By using AWS_IAM as the method authorization type, it ensures that the API can only be accessed by IAM identities such as IAM users or IAM roles. Attaching a resource policy to the API that grants permission to the specified IAM role to invoke the&nbsp;execute-api:Invoke&nbsp;action allows the specified IAM role to make authorized requests to the API while denying access to any other unauthorized users or roles.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": [\n          \"arn:aws:iam::account-id:role/Analyst\"\n        ]\n      },\n      \"Action\": \"execute-api:Invoke\",\n      \"Resource\": [\n        \"execute-api:/stage/GET/reports\"\n      ]\n    }\n  ]\n}</code></pre></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>This combination of method authorization and resource policy provides an additional layer of security for the API.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer in this scenario is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Set&nbsp;AWS_IAM&nbsp;as the method authorization type for the API. Attach a resource policy to the API that grants permission to the specified IAM role to invoke the&nbsp;execute-api:Invoke&nbsp;action.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an API Key for the API. Attach a resource policy to the API that grants permission to the specified IAM role to invoke the&nbsp;GetAPIKeys&nbsp;action&nbsp;</strong></b><span>is incorrect API Keys are just a way of identifying the calling parties that you trust, but they are not intended to be used to grant permissions to an IAM role.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a Lambda function authorizer for the API. In the Lambda function, write a logic that verifies the requester’s identity by extracting the information from the&nbsp;context&nbsp;object</strong></b><span>&nbsp;is incorrect. While this may be possible, Lambda function authorizer is more suitable for&nbsp;custom authorization scheme that uses a bearer token authentication strategy such as OAuth or SAML. Additionally,&nbsp;this approach requires you to write, test, and maintain custom authentication and authorization code, which can be complex and time-consuming.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a Cognito User Pool authorizer. Add the IAM role to the user pool. Authenticate the requester’s identity using Cognito. Ask the analysts to pass the token returned by Cognito in their request headers&nbsp;</strong></b><span>is incorrect. Adding a Cognito User Pool authorizer is unnecessary since the API will be accessed through an IAM role.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies-examples.html#apigateway-resource-policies-cross-account-example\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies-examples.html#apigateway-resource-policies-cross-account-example</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-authorization-flow.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-authorization-flow.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546411,
        "value": "Set AWS_IAM as the method authorization type for the API. Attach a resource policy to the API that grants permission to the specified IAM role to invoke the execute-api:Invoke action.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546412,
        "value": "Create an API Key for the API. Attach a resource policy to the API that grants permission to the specified IAM role to invoke the GetAPIKeys action.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546413,
        "value": "Create a Lambda function authorizer for the API. In the Lambda function, write a logic that verifies the requester’s identity by extracting the information from the context object.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546414,
        "value": "Create a Cognito User Pool authorizer. Add the IAM role to the user pool. Authenticate the requester’s identity using Cognito. Ask the analysts to pass the token returned by Cognito in their request headers.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 46,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546414,
        "questionId": 385758,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385758,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is creating an analytics REST API service that is powered by API Gateway. Analysts from a separate AWS account must interact with the service through an IAM role. The IAM role already has a policy that grants permission to invoke the API.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>What else should the developer do to meet the requirement without too much overhead?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887975,
    "question": "ECS",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can configure CloudFront to add specific HTTP headers to the requests that CloudFront receives from viewers and forwards to your origin or&nbsp;</span><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/edge-functions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>edge function</span></a><span>. The values of these HTTP headers are based on the characteristics of the viewer or the viewer request. The headers provide information about the viewer’s device type, IP address, geographic location, request protocol (HTTP or HTTPS), HTTP version, TLS connection details, and&nbsp;JA3 fingerprint.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With these headers, your origin or your edge function can receive information about the viewer without the need for you to write your own code to determine this information. If your origin returns different responses based on the information in these headers, you can include them in the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">cache key</em></i><span>&nbsp;so that CloudFront caches the responses separately. For example, your origin might respond with content in a specific language based on the country that the viewer is in or with content tailored to a specific device type. Your origin might also write these headers to log files, which you can use to determine information about where your viewers are, which device types they’re on, and more.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the given scenario, when a user initiates a request to the website, a CloudFront function can be triggered to inspect the&nbsp;CloudFront-Viewer-Country&nbsp;header, which pinpoints the originating country of a user.&nbsp;CloudFront functions are lightweight Javascript code that you can use to manipulate web requests at the CloudFront edge locations. By using a CloudFront function triggered on “Viewer request” events, you can assess and act upon incoming requests even before they reach the origin or CloudFront retrieves a cached response.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Here’s a representation using a CloudFront function code snippet (</span><b><strong class=\"Editor__editor-text-bold___25KrR\">TODO: update with other domain names</strong></b><span>):</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(48).jpg\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Implement a CloudFront function that returns the appropriate URL based on the&nbsp;CloudFront-Viewer-Country. Configure the distribution to trigger the function on&nbsp;Viewer request&nbsp;events.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Forward the&nbsp;CloudFront-Viewer-Address&nbsp;header to the web server running on the ECS cluster. Implement a custom logic that matches the header’s value against a GeoIP database to determine user location. Based on the resolved location, redirect users to the appropriate region-specific URL&nbsp;</strong></b><span>is incorrect. While this approach is technically valid, it’s more&nbsp;complex since you have to handle the IP-to-location translation on the backend and maintain an up-to-date GeoIP database.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure the Route 53 record to use the geolocation routing policy</strong></b><span>&nbsp;is incorrect.&nbsp;Route 53 geolocation routing is primarily used for directing traffic to specific resources based on user location for performance or regulatory reasons, not for content personalization based on geolocation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use AWS Web Application Firewall (WAF’s) geo-matching rule to identify the user country and attach it to the ALB. Configure ALB listener rules with path conditions to route traffic based on the identified country&nbsp;</strong></b><span>is incorrect.&nbsp;AWS WAF’s geo-matching rule identifies a user’s country based on their IP. However, it’s primarily designed to allow or block access, not for redirection. Even if used in conjunction with ALB, the ALB’s listener rules can’t inherently make routing decisions based on a viewer’s geolocation</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/adding-cloudfront-headers.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/adding-cloudfront-headers.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546415,
        "value": "Configure the Route 53 record to use the geolocation routing policy.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546416,
        "value": "Forward the CloudFront-Viewer-Address header to the web server running on the ECS cluster. Implement a custom logic that matches the header’s value against a GeoIP database to determine user location. Based on the resolved location, redirect users to the appropriate region-specific URL.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546417,
        "value": "Use AWS Web Application Firewall (WAF's) geo-matching rule to identify the user country and attach it to the ALB. Configure ALB listener rules with path conditions to route traffic based on the identified country.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546418,
        "value": "Implement a CloudFront function that returns the appropriate URL based on the CloudFront-Viewer-Country. Configure the distribution to trigger the function on Viewer request events.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 47,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546418,
        "questionId": 385759,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385759,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company operates an e-commerce website on Amazon Elastic Container Service (ECS) behind an Application Load Balancer (ALB). They’ve set their ALB as an origin for an Amazon CloudFront distribution. Users interact with the website via a custom domain linked to the CloudFront distribution, all maintained within a public hosted zone in Amazon Route 53.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The company wants to display region-specific pricing tables to its users. For example, when a user from the UK visits the site, they should be redirected to&nbsp;https://example.com/uk/, while users from the Philippines should view prices on&nbsp;https://example.com/ph/</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>How can a developer incorporate this feature in the least amount of development overhead?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887976,
    "question": "AWS Step Functions",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In AWS Step Functions, the&nbsp;waitForTaskToken&nbsp;option allows a task to be paused until an external system signals its completion. When a task is configured with this option, Step Functions generates a unique token, which can be retrieved from the context object of the state machine.&nbsp;This token, for instance, can be stored in a data store for reference.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><i><em class=\"Editor__editor-text-italic___C9n8O\">The diagram below depicts how&nbsp;waitForTaskToken&nbsp;is used for an SQS task state.</em></i></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(49).jpg\"><span>An external system, such as a webhook handler can then reference the token and call the&nbsp;SendTaskSuccess&nbsp;or&nbsp;SendTaskFailure&nbsp;method to signal Step Functions to resume the workflow. When the&nbsp;workflow is in a paused state,&nbsp;you’re not billed for the time the workflow is paused, making it a cost-effective method for awaiting external processes or events.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers are:</span></p><ul class=\"Editor__editor-list-ul___3e1ik\"><li value=\"1\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure      the Lambda function task state to use      the&nbsp;waitForTaskToken&nbsp;option. Retrieve the task token from the      context object of the state machine and include it as part of the Lambda      function’s payload body.</strong></b></li><li value=\"2\" class=\"Editor__editor-listitem___EW2Qh\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure      the webhook handler to call the&nbsp;SendTaskSuccess&nbsp;method after a      successful notification.</strong></b></li></ul><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Set the invocation method of the Lambda function task state to asynchronous. Create an AWS SQS queue and configure the webhook handler to send the payment service’s response to the queue. Use a combination of Wait State and Choice State to poll the queue&nbsp;</strong></b><span>is incorrect. While this solution may work, every iteration involving the Wait State and Choice State incurs a cost as a state transition. If the third-party service takes an unpredictable amount of time, the state machine could go through multiple cycles of waiting and checking the SQS queue, resulting in a higher cost.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use a Wait State to pause the execution of the workflow. Configure the webhook handler to invoke the Lambda function synchronously</strong></b><span>&nbsp;is incorrect.&nbsp;A fixed Wait State is less cost-effective in scenarios where the waiting duration is unpredictable. If the third-party service finishes earlier than the wait duration, you’re paying for unused time. If it takes longer, the workflow might proceed before the task is complete.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure the webhook handler to call the&nbsp;SendTaskHeartbeat&nbsp;method after a successful notification&nbsp;</strong></b><span>is incorrect because this method is simply used for keeping tasks alive and preventing them from timing out. It also does not signal completion.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/compute/building-cost-effective-aws-step-functions-workflows/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/compute/building-cost-effective-aws-step-functions-workflows/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/callback-task-sample-sqs.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/step-functions/latest/dg/callback-task-sample-sqs.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546419,
        "value": "Use a Wait State to pause the execution of the workflow. Configure the webhook handler to invoke the Lambda function synchronously.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546420,
        "value": "Configure the Lambda function task state to use the waitForTaskToken option. Retrieve the task token from the context object of the state machine and include it as part of the Lambda function’s payload body.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546421,
        "value": "Set the invocation method of the Lambda function task state to asynchronous. Create an AWS SQS queue and configure the webhook handler to send the payment service’s response to the queue. Use a combination of Wait State and Choice State to poll the queue.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546422,
        "value": "Configure the webhook handler to call the SendTaskHeartbeat method after a successful notification.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546423,
        "value": "Configure the webhook handler to call the SendTaskSuccess method after a successful notification.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 48,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546423,
        "questionId": 385760,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1546420,
        "questionId": 385760,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385760,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is managing a serverless application orchestrated by AWS Step Functions. One of the Lambda functions sends an API call to a third-party payment service, which takes some time to complete. The Step Functions workflow needs to pause while the service validates the payment. It should only resume after the service sends a notification to a webhook endpoint.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which combination of actions will fulfill the requirements in the most cost-effective manner? (Select Two)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887977,
    "question": "CloudFront",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For web distributions, you can configure CloudFront to require that viewers use HTTPS to request your objects, so connections are encrypted when CloudFront communicates with viewers. You can also configure CloudFront to use HTTPS to get objects from your origin, so connections are encrypted when CloudFront communicates with your origin.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you configure CloudFront to require HTTPS both to communicate with viewers and to communicate with your origin, here’s what happens when CloudFront receives a request for an object. The process works basically the same way whether your origin is an Amazon S3 bucket or a custom origin such as an HTTP/S server:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>1. A viewer submits an HTTPS request to CloudFront. There’s some SSL/TLS negotiation here between the viewer and CloudFront. In the end, the viewer submits the request in an encrypted format.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>2. If the object is in the CloudFront edge cache, CloudFront encrypts the response and returns it to the viewer, and the viewer decrypts it.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>3. If the object is not in the CloudFront cache, CloudFront performs SSL/TLS negotiation with your origin and, when the negotiation is complete, forwards the request to your origin in an encrypted format.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>4. Your origin decrypts the request, encrypts the requested object, and returns the object to CloudFront.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>5. CloudFront decrypts the response, re-encrypts it, and forwards the object to the viewer. CloudFront also saves the object in the edge cache so that the object is available the next time it’s requested.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>6. The viewer decrypts the response.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can configure one or more cache behaviors in your CloudFront distribution to require HTTPS for communication between viewers and CloudFront. You also can configure one or more cache behaviors to allow both HTTP and HTTPS, so that CloudFront requires HTTPS for some objects but not for others.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To implement this setup, you have to change the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Origin Protocol Policy</strong></b><span>&nbsp;setting for the applicable origins in your distribution. If you’re using the domain name that CloudFront assigned to your distribution, such as dtut0rial5d0j0.cloudfront.net, you change the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Viewer Protocol Policy</strong></b><span>&nbsp;setting for one or more cache behaviors to require HTTPS communication. With this configuration, CloudFront provides the SSL/TLS certificate.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answers are:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure the Origin Protocol Policy to use HTTPS only</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure the Viewer Protocol Policy to use HTTPS only&nbsp;</strong></b><span>are correct answers in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Configure your ALB to only allow traffic on port 443 using an SSL certificate from AWS Config&nbsp;</strong></b><span>is incorrect because you can’t store a certificate in AWS Config.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Set up an Origin Access Control (OAC) setting&nbsp;</strong></b><span>is incorrect because this CloudFront feature only allows you to secure S3 origins by granting access to S3 buckets for designated CloudFront distributions. This method is applicable only to S3 origins and cannot be used to establish end-to-end SSL connections for other origins.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Associate a Web ACL using AWS Web Application Firewall (WAF) with your CloudFront Distribution&nbsp;</strong></b><span>is incorrect because AWS WAF is primarily used&nbsp;to protect your web applications from common web exploits that could affect application availability, compromise security, or consume excessive resources. This will not allow you to establish an SSL connection between your origin and your clients.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html#using-https-cloudfront-to-origin-certificate\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html#using-https-cloudfront-to-origin-certificate</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546424,
        "value": "Configure your ALB to only allow traffic on port 443 using an SSL certificate from AWS Config.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546425,
        "value": "Configure the Origin Protocol Policy to use HTTPS only",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546426,
        "value": "Configure the Viewer Protocol Policy to use HTTPS only",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546427,
        "value": "Set up an Origin Access Control (OAC) setting",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546428,
        "value": "Associate a Web ACL using AWS Web Application Firewall (WAF) with your CloudFront Distribution.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 49,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546424,
        "questionId": 385761,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1546426,
        "questionId": 385761,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385761,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is managing a distributed system that consists of an Application Load Balancer, an SQS queue, and an Auto Scaling group of EC2 instances. The system has been integrated with CloudFront to better serve clients worldwide. To enhance the security of the in-flight data, the developer was instructed to establish an end-to-end SSL connection between the origin and the end-users.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which TWO options will allow the developer to meet this requirement using CloudFront? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887978,
    "question": "S3 bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An S3 bucket policy is a JSON document that defines access controls for an Amazon S3 bucket. It allows you to grant or deny access to different AWS identities (such as IAM users and roles or federated users) for different S3 bucket actions (such as GetObject, PutObject, and ListBucket) on specific S3 objects or prefixes within a bucket. It can be used to control who can access your S3 data and how they can access it.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(51).jpg\"><span>An S3 bucket policy statement is composed of several elements, and the following are required to create a valid policy:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Effect</strong></b><span>: The effect can be&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Allow</strong></b><span>&nbsp;or&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Deny</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Action</strong></b><span>: The specific API action for which you are granting or denying permission.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Principal</strong></b><span>:&nbsp;The user, account, service, or other entity that is allowed or denied access to the bucket or objects within the bucket.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>–&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Resource</strong></b><span>: The resource that’s affected by the action.&nbsp;You specify a resource using an Amazon Resource Name (ARN).</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the scenario,&nbsp;you can create separate statements for the Developer and QA roles. This allows for granular control over access to the bucket and its contents. Each statement can have its own set of conditions, allowing for different permissions to be granted to different identities or groups under different circumstances. Additionally, separating statements can make it easier to read, understand and manage the policy as it becomes more complex.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;the correct answer is:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"AWS\": [\n          \"arn:aws:iam::123456789123:role/Developer\"\n      ]\n    },\n    \"Action\": [\n    \"s3:GetObject\"\n    ],\n    \"Resource\": \"arn:aws:s3:::txyz/*\"\n    },\n    {\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"AWS\": [\n          \"arn:aws:iam::123456789123:role/QA\"\n      ]\n    },\n    \"Action\": [\n    \"s3:GetObject\"\n    ],\n    \"Resource\": \"arn:aws:s3:::txyz/qa/*\"\n    }\n  ]\n}\n</code></pre></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The policy below is not compliant with the principle of least privilege, as it uses a wildcard in the Action element. The scenario mentioned that the Developer IAM role must be given permission to read all objects in the bucket. Therefore, you have to explicitly mention the specific API to allow that operation, which is GetObject.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"AWS\": [\n          \"arn:aws:iam::123456789123:role/Developer\"\n      ]\n    },\n    \"Action\": [\n    \"s3:*\"\n    ],\n    \"Resource\": \"arn:aws:s3:::txyz/*\"\n    },\n    {\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"AWS\": [\n          \"arn:aws:iam::123456789123:role/QA\"\n      ]\n    },\n    \"Action\": [\n    \"s3:GetObject\"\n    ],\n    \"Resource\": \"arn:aws:s3:::txyz/qa/*\"\n    }\n  ]\n}\n</code></pre></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The policy below does not follow the principle of least privilege since it grants excessive permissions to the Developer IAM role. Note that the Developer IAM role only needs read access.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"undefined\"><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"AWS\": [\n          \"arn:aws:iam::123456789123:role/Developer\"\n      ]\n    },\n    \"Action\": [\n    \"s3:GetObject\",\n    \"s3:PutObject\"\n    ],\n    \"Resource\": \"arn:aws:s3:::txyz/*\"\n    },\n    {\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"AWS\": [\n          \"arn:aws:iam::123456789123:role/QA\"\n      ]\n    },\n    \"Action\": [\n    \"s3:GetObject\"\n    ],\n    \"Resource\": \"arn:aws:s3:::txyz/qa/*\"\n    }\n  ]\n}</code></pre></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The IAM Policy shown below is not right as it grants the QA role access to read all objects within the S3 bucket, which is typically beyond its necessary permissions:</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"undefined\"><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"AWS\": [\n          \"arn:aws:iam::123456789123:role/Developer\",\n          \"arn:aws:iam::123456789123:role/QA\"\n      ]\n    },\n    \"Action\": [\n    \"s3:GetObject\"\n    ],\n    \"Resource\": [\n       \"arn:aws:s3:::txyz/*\",\n       \"arn:aws:s3:::txyz/qa/*\"\n    ]\n    }\n  ]\n}\n</code></pre></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><br></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-iam-policies.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-iam-policies.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546429,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>\t{\n  “Version”: “2012-10-17”,\n  “Statement”: [\n    {\n    “Effect”: “Allow”,\n    “Principal”: {\n      “AWS”: [\n          “arn:aws:iam::123456789123:role/Developer”\n      ]\n    },\n    “Action”: [\n    “s3:GetObject”\n    ],\n    “Resource”: “arn:aws:s3:::txyz/*”\n    },\n    {\n    “Effect”: “Allow”,\n    “Principal”: {\n      “AWS”: [\n          “arn:aws:iam::123456789123:role/QA”\n      ]\n    },\n    “Action”: [\n    “s3:GetObject”\n    ],\n    “Resource”: “arn:aws:s3:::txyzo/qa/*”\n    }\n  ]\n}\n</code></pre></p>",
        "isCorrect": true,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1546430,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>\t{\n  “Version”: “2012-10-17”,\n  “Statement”: [\n    {\n    “Effect”: “Allow”,\n    “Principal”: {\n      “AWS”: [\n          “arn:aws:iam::123456789123:role/Developer”,\n          “arn:aws:iam::123456789123:role/QA”\n      ]\n    },\n    “Action”: [\n    “s3:GetObject”\n    ],\n    “Resource”: [\n       “arn:aws:s3:::txyz/*”,\n       “arn:aws:s3:::txyz/qa/*”\n    ]\n    }\n  ]\n}\n</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1546431,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>\t{\n  “Version”: “2012-10-17”,\n  “Statement”: [\n    {\n    “Effect”: “Allow”,\n    “Principal”: {\n      “AWS”: [\n          “arn:aws:iam::123456789123:role/Developer”\n      ]\n    },\n    “Action”: [\n    “s3:*”\n    ],\n    “Resource”: “arn:aws:s3:::txyz/*”\n    },\n    {\n    “Effect”: “Allow”,\n    “Principal”: {\n      “AWS”: [\n          “arn:aws:iam::123456789123:role/QA”\n      ]\n    },\n    “Action”: [\n    “s3:GetObject”\n    ],\n    “Resource”: “arn:aws:s3:::txyz/qa/*”\n    }\n  ]\n}\n</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      },
      {
        "id": 1546432,
        "value": "<p class=\"Editor__editor-paragraph___HPmFS\"><pre data-highlight-language=\"java\"><code>•\t{\n  “Version”: “2012-10-17”,\n  “Statement”: [\n    {\n    “Effect”: “Allow”,\n    “Principal”: {\n      “AWS”: [\n          “arn:aws:iam::123456789123:role/Developer”\n      ]\n    },\n    “Action”: [\n    “s3:GetObject”,\n    “s3:PutObject”\n    ],\n    “Resource”: “arn:aws:s3::txyz/*”\n    },\n    {\n    “Effect”: “Allow”,\n    “Principal”: {\n      “AWS”: [\n          “arn:aws:iam::123456789123:role/QA”\n      ]\n    },\n    “Action”: [\n    “s3:GetObject”\n    ],\n    “Resource”: “arn:aws:s3:::txyz/qa/*”\n    }\n  ]\n}\n</code></pre></p>",
        "isCorrect": false,
        "isAdvancedEditor": true,
        "language": "java",
        "responses": []
      }
    ],
    "idx": 50,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546429,
        "questionId": 385762,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385762,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company has created a private S3 bucket named&nbsp;txyz. The Developer IAM role must be granted read access to all objects within this bucket. However, the QA IAM role should be restricted to accessing only the objects stored under the&nbsp;qa&nbsp;folder.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which S3 bucket policy will effectively implement the principle of least privilege access while satisfying the given requirements?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887979,
    "question": "KMS",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The&nbsp;GenerateDataKeyWithoutPlaintext&nbsp;API generates a unique data key. This operation returns a data key that is encrypted under a KMS Key that you specify.&nbsp;GenerateDataKeyWithoutPlaintext&nbsp;is identical to&nbsp;GenerateDataKey&nbsp;except that it returns only the encrypted copy of the data key.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Like&nbsp;GenerateDataKey,&nbsp;GenerateDataKeyWithoutPlaintext&nbsp;returns a unique data key for each request. The bytes in the key are not related to the caller or KMS key that is used to encrypt the data key.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(52).jpg\"><span>This operation is useful for systems that need to encrypt data at some point, but not immediately. When you need to encrypt the data, you call the&nbsp;</span><a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_Decrypt.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>Decrypt</span></a><span>&nbsp;operation on the encrypted copy of the key.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>It’s also useful in distributed systems with different levels of trust. For example, you might store encrypted data in containers. One component of your system creates new containers and stores an encrypted data key with each container. Then, a different component puts the data into the containers. That component first decrypts the data key, uses the plaintext data key to encrypt data, puts the encrypted data into the container, and then destroys the plaintext data key. In this system, the component that creates the containers never sees the plaintext data key.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">GenerateDataKeyWithoutPlaintext</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">GenerateDataKey</strong></b><span>&nbsp;is incorrect because this&nbsp;operation also returns a plaintext copy of the data key along with the copy of the encrypted data key under a KMS key that you specified. Take note that the scenario explicitly mentioned that the API must return&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">only</strong></b><span>&nbsp;the encrypted copy of the data key which will be used later for encryption. Although this API can be used in this scenario, it is not recommended since&nbsp;the actual encryption process of the data happens at a later time and not in real-time.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Encrypt</strong></b><span>&nbsp;is incorrect because this just encrypts plaintext into ciphertext by using a KMS key. This is primarily used to move encrypted data from one AWS region to another.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">GenerateRandom</strong></b><span>&nbsp;is incorrect because&nbsp;this just returns a random byte string that is cryptographically secure. This is not relevant in this scenario, as you have to use the&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">GenerateDataKeyWithoutPlaintext&nbsp;</em></i><span>API to properly implement the requirement.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyWithoutPlaintext.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyWithoutPlaintext.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546433,
        "value": "Encrypt",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546434,
        "value": "GenerateDataKeyWithoutPlaintext",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546435,
        "value": "GenerateDataKey",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546436,
        "value": "GenerateRandom",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 51,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546435,
        "questionId": 385763,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385763,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You are building a distributed system using KMS where you need to encrypt data at a later time. An API must be called that returns only the encrypted copy of the data key which you will use for encryption. After an hour, you will decrypt the data key by calling the Decrypt API then using the returned plaintext data key to finally encrypt the data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which is the MOST suitable KMS API that the system should use to securely implement the requirements described above?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887980,
    "question": "CloudFront web distribution",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Lambda&nbsp;is a feature of Amazon CloudFront that lets you run code closer to users of your application, which improves performance and reduces latency. With Lambda, you don’t have to provision or manage infrastructure in multiple locations around the world. You pay only for the compute time you consume – there is no charge when your code is not running.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>With Lambda, you can enrich your web applications by making them globally distributed and improving their performance — all with zero server administration. Lambda&nbsp;runs your code in response to events generated by the Amazon CloudFront content delivery network (CDN). Just upload your code to AWS Lambda, which takes care of everything required to run and scale your code with high availability at an AWS location closest to your end user.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(53).jpg\"><span>You can use Lambda&nbsp;to help authenticate and authorize users for the premium pay-wall content on your website, filtering out unauthorized requests before they reach your origin infrastructure. For example, you can trigger a Lambda function to authorize each viewer request by calling authentication and user management service such as Amazon Cognito.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use&nbsp;Lambda&nbsp;and Amazon Cognito to authenticate and authorize premium customers to download the firmware update.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use the AWS Serverless Application Model (AWS SAM) and Amazon Cognito to authenticate the premium customers</strong></b><span>&nbsp;is incorrect because AWS SAM is just&nbsp;an open-source framework that you can use to build serverless applications on AWS. In this scenario, you have to integrate your CloudFront web distribution with Lambda, and you can do this without using AWS SAM.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Restrict access to the S3 bucket only to premium customers by using an Origin Access Control (OAC)&nbsp;</strong></b><span>is incorrect because OAC is primarily used to prevent your users from viewing your S3 files by simply using the direct S3 URL.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use Signed URLs and Signed Cookies in CloudFront to distribute the firmware update file</strong></b><span>&nbsp;is incorrect. Although this solution provides a way to authenticate the premium users for the private content, the process of authentication has a significant latency in comparison to the Lambda&nbsp;solution. In this option, you have to refactor your application (which is deployed to a specific AWS region) to either create and distribute signed URLs to authenticated users or to send&nbsp;Set-Cookie&nbsp;headers that set signed cookies on the viewers for authenticated users.&nbsp;This will cause the latency, which could have been improved if the authentication logic resides on CloudFront edge locations using Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-at-the-edge.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-at-the-edge.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/lambda/edge/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/lambda/edge/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546437,
        "value": "Use Signed URLs and Signed Cookies in CloudFront to distribute the firmware update file.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546438,
        "value": "Use Lambda@Edge and Amazon Cognito to authenticate and authorize premium customers to download the firmware update.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546439,
        "value": "Restrict access to the S3 bucket only to premium customers using an Origin Access Control (OAC).",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546440,
        "value": "Use the AWS Serverless Application Model (AWS SAM) and Amazon Cognito to authenticate the premium customers.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 52,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546437,
        "questionId": 385764,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385764,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A company selling smart security cameras uses an S3 bucket behind a CloudFront web distribution to store its static content, which it shares with customers worldwide. The company has recently released a new firmware update intended only for its premium customers, and unauthorized access should be denied with a user authentication process that has minimal latency.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>How can a developer refactor the current setup to achieve this requirement with the MOST efficient solution?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887981,
    "question": "S3 bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Server-side encryption</strong></b><span>&nbsp;protects data at rest. If you use&nbsp;Server-Side Encryption with Amazon S3-Managed Encryption Keys (SSE-S3), Amazon S3 will encrypt each object with a unique key and as an additional safeguard, it encrypts the key itself with a master key that it rotates regularly. Amazon S3 server-side encryption uses one of the strongest block ciphers available, 256-bit Advanced Encryption Standard (AES-256), to encrypt your data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(54d).jpg\"><span>However, if you chose to use server-side encryption with customer-provided encryption keys (SSE-C), you must provide encryption key information using the following request headers:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">x-amz-server-side</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"font-family: Arial, sans-serif;\">​</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\">-encryption</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"font-family: Arial, sans-serif;\">​</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\">-customer-algorithm</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">x-amz-server-side</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"font-family: Arial, sans-serif;\">​</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\">-encryption</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"font-family: Arial, sans-serif;\">​</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\">-customer-key</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">x-amz-server-side</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"font-family: Arial, sans-serif;\">​</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\">-encryption</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\" style=\"font-family: Arial, sans-serif;\">​</strong></b><b><strong class=\"Editor__editor-text-bold___25KrR\">-customer-key-MD5</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, using the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">x-amz-server-side-encryption</strong></b><span>&nbsp;header is correct as this is the one being used for Amazon S3-Managed Encryption Keys (SSE-S3). All other options are incorrect since they are used for SSE-C.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546441,
        "value": "x-amz-server-side-encryption",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546442,
        "value": "x-amz-server-side-encryption-customer-key",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546443,
        "value": "x-amz-server-side-encryption-customer-algorithm",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546444,
        "value": "x-amz-server-side-encryption-customer-key-MD5",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 53,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546441,
        "questionId": 385765,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385765,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer needs to encrypt all objects being uploaded by their application to the S3 bucket to comply with the company’s security policy. The bucket will use server-side encryption with Amazon S3-Managed encryption keys (SSE-S3) to encrypt the data using 256-bit Advanced Encryption Standard (AES-256) block cipher.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following request headers should the developer use?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887982,
    "question": "EC2 instances ",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can configure one or more cache behaviors in your CloudFront distribution to require HTTPS for communication between viewers and CloudFront. You also can configure one or more cache behaviors to allow both HTTP and HTTPS so that CloudFront requires HTTPS for some objects but not for others.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If you’re using the domain name that CloudFront assigned to your distribution, such as dtut0ria1sd0jo.cloudfront.net, you can change the Viewer Protocol Policy setting for one or more cache behaviors to require HTTPS communication by setting it as either&nbsp;Redirect HTTP to HTTPS, or&nbsp;HTTPS Only.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(55).jpg\"><span>If your origin is an Elastic Load Balancing load balancer, you can use a certificate provided by AWS Certificate Manager (ACM). You can also use a certificate that is signed by a trusted third-party certificate authority and imported into ACM. Note that you can’t use a self-signed certificate for HTTPS communication between CloudFront and your origin.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">setting the&nbsp;Viewer Protocol Policy&nbsp;to use&nbsp;Redirect HTTP to HTTPS</strong></b><span>&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">and&nbsp;setting the&nbsp;Viewer Protocol Policy&nbsp;to use&nbsp;HTTPS Only</strong></b><span>&nbsp;are the correct answers in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using a self-signed SSL/TLS certificate in the ALB which is stored in a private S3 bucket</strong></b><span>&nbsp;is incorrect because you don’t need to add an SSL certificate if you only require HTTPS for communication between the viewers and CloudFront. You should only do this if you require HTTPS between your origin and CloudFront. In addition, you can’t use a self-signed certificate in this scenario even though it is stored in a private S3 bucket. You need to use either a certificate from ACM or a third-party certificate.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configuring the ALB to use its default SSL/TLS certificate</strong></b><span>&nbsp;is incorrect because there is no default SSL certificate in ELB, unlike what we have in CloudFront.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using&nbsp;a self-signed certificate in the ALB</strong></b><span>&nbsp;is incorrect because adding an SSL certificate in the ELB is not required. Moreover, you can’t use a self-signed certificate in this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html#using-https-cloudfront-to-origin-certificate\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html#using-https-cloudfront-to-origin-certificate</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546445,
        "value": "Set the Viewer Protocol Policy to use Redirect HTTP to HTTPS.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546446,
        "value": "Configure the ALB to use its default SSL/TLS certificate.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546447,
        "value": "Use a self-signed certificate in the ALB.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546448,
        "value": "Set the Viewer Protocol Policy to use HTTPS Only.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546449,
        "value": "Use a self-signed SSL/TLS certificate in the ALB which is stored in a private S3 bucket.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 54,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546448,
        "questionId": 385766,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": false,
        "choiceId": 1546446,
        "questionId": 385766,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385766,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A website is hosted in an Auto Scaling group of EC2 instances behind an Application Load Balancer. It also uses CloudFront with a default domain name to distribute its static assets and dynamic contents. However, the website has a poor search ranking as it doesn’t use a secure HTTPS/SSL on its site.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which are the possible solutions that the developer can implement in order to set up HTTPS communication between the viewers and CloudFront? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887983,
    "question": "Auto Scaling group",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Server-side encryption</strong></b><span>&nbsp;is about protecting data at rest. AWS Key Management Service (</span><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS KMS</strong></b><span>) is a service that combines secure, highly available hardware and software to provide a key management system scaled for the cloud. AWS KMS uses KMS keys to encrypt your Amazon S3 objects. You use AWS KMS via the&nbsp;AWS Management Console&nbsp;or&nbsp;AWS KMS APIs&nbsp;to centrally create encryption keys, define the policies that control how keys can be used, and audit key usage to prove they are being used correctly. You can use these keys to protect your data in Amazon S3 buckets.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The first time you add an SSE-KMS–encrypted object to a bucket in a region, a default KMS key is created for you automatically. This key is used for SSE-KMS encryption unless you select a KMS key that you created separately using AWS Key Management Service. Creating your own KMS key gives you more flexibility, including the ability to create, rotate, disable, and define access controls, and to audit the encryption keys used to protect your data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(56).jpg\"><span>Amazon S3 supports bucket policies that you can use if you require server-side encryption for all objects that are stored in your bucket. For example, you can set a bucket policy that denies permission to upload an object (s3:PutObject) to everyone if the request does not include the&nbsp;x-amz-server-side-encryption&nbsp;header requesting server-side encryption with SSE-KMS.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When you upload an object, you can specify the KMS key using the&nbsp;x-amz-server-side-encryption-aws-kms-key-id&nbsp;header which you can use to require a specific KMS key for object encryption. If the header is not present in the request, Amazon S3 assumes the default KMS key. Regardless, the KMS key ID that Amazon S3 uses for object encryption must match the KMS key ID in the policy, otherwise Amazon S3 denies the request.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Therefore, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Add a bucket policy which denies any&nbsp;s3:PutObject&nbsp;action unless the request includes the&nbsp;x-amz-server-side-encryption-aws-kms-key-id&nbsp;header.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Add a bucket policy which denies any&nbsp;s3:PutObject&nbsp;action unless the request includes the&nbsp;x-amz-server-side-encryption&nbsp;header</strong></b><span>&nbsp;is incorrect.&nbsp;While this policy ensures that objects are encrypted, it does not enforce the use of AWS KMS keys. The&nbsp;x-amz-server-side-encryption&nbsp;header can typically specify different encryption methods, including SSE-S3 (Amazon S3 managed keys) or SSE-KMS (AWS KMS keys). Since the requirement is to use AWS KMS keys specifically, this option is not sufficient.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Add a bucket policy which denies any&nbsp;s3:PostObject&nbsp;action unless the request includes the&nbsp;x-amz-server-side-encryption&nbsp;header</strong></b><span>&nbsp;is incorrect because the correct action for uploading objects is&nbsp;s3:PutObject,&nbsp;not the&nbsp;s3:PostObject&nbsp;action. Additionally,&nbsp;it does not specifically enforce the use of AWS KMS keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Adding a bucket policy which denies any&nbsp;s3:PostObject&nbsp;action unless the request includes the&nbsp;x-amz-server-side-encryption-aws-kms-key-id&nbsp;header</strong></b><span>&nbsp;is incorrect&nbsp;because it uses the&nbsp;s3:PostObject&nbsp;action instead of the correct&nbsp;s3:PutObject&nbsp;action. Even though it primarily uses the&nbsp; AWS KMS keys, the incorrect action makes this policy ineffective for ensuring encryption during object uploads.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/specifying-kms-encryption.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonS3/latest/userguide/specifying-kms-encryption.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546450,
        "value": "Add a bucket policy which denies any s3:PostObject action unless the request includes the x-amz-server-side-encryption header.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546451,
        "value": "Add a bucket policy which denies any s3:PutObject action unless the request includes the x-amz-server-side-encryption-aws-kms-key-id header.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546452,
        "value": "Add a bucket policy which denies any s3:PostObject action unless the request includes the x-amz-server-side-encryption-aws-kms-key-id header.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546453,
        "value": "Add a bucket policy which denies any s3:PutObject action unless the request includes the x-amz-server-side-encryption header.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 55,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546451,
        "questionId": 385767,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385767,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An application hosted in an Auto Scaling group of On-Demand EC2 instances is used to process data polled from an SQS queue, and the generated output is stored in an S3 bucket. To enhance security, you were tasked to ensure that all objects in the S3 bucket are encrypted at rest using server-side encryption with AWS KMS keys.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is required to properly implement this requirement?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887984,
    "question": "Elastic Beanstalk",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Time To Live (TTL)</strong></b><span>&nbsp;for DynamoDB allows you to define when items in a table expire so that they can be automatically deleted from the database.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>TTL is provided at no extra cost as a way to reduce storage usage and reduce the cost of storing irrelevant data without using provisioned throughput. With TTL enabled on a table, you can set a timestamp for deletion on a per-item basis, allowing you to limit storage usage to only those records that are relevant.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(57).jpg\"><span>TTL is useful if you have continuously accumulated data that lose relevance after a specific time period. For example session data, event logs, usage patterns, and other temporary data. If you have sensitive data that must be retained only for a certain amount of time according to contractual or regulatory obligations, TTL helps you ensure that it is removed promptly and as scheduled.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Therefore, the correct answer in this scenario is to:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enable TTL for the session data in the DynamoDB table</strong></b><span>.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Delete the stale data by regularly performing a scan on the table&nbsp;</strong></b><span>is incorrect because the Scan operation uses&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">eventually consistent</em></i><span>&nbsp;reads when accessing the data in a table and therefore, the result set might not include the changes to data in the table immediately before the operation began. This is an inefficient option that can simply be replaced by using TTL.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use&nbsp;atomic counters&nbsp;to track the validity of the session data and deleting it once becomes stale</strong></b><span>&nbsp;is incorrect because atomic counters are primarily used in updating data and for scenarios where you want the updates to not be idempotent.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use&nbsp;conditional writes&nbsp;to add the session data to the DynamoDB table and then automatically deleting it based on the condition you specify</strong></b><span>&nbsp;is incorrect because conditional writes are only helpful in cases where multiple users attempt to modify the same item.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546454,
        "value": "Delete the stale data by regularly performing a scan on the table.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546455,
        "value": "Use atomic counters to track the validity of the session data and delete once it becomes stale.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546456,
        "value": "Use conditional writes to add the session data to the DynamoDB table and then automatically delete it based on the condition you specify.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546457,
        "value": "Enable TTL for the session data in the DynamoDB table.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 56,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546456,
        "questionId": 385768,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385768,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An application hosted in a multicontainer Docker platform in Elastic Beanstalk uses DynamoDB to handle the session data of its users. These data are only used in a particular timeframe and the stale data can be deleted after the user logged out of the system.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the most suitable way to delete the session data?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887985,
    "question": "Amazon ECS",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Port mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition, which can be configured in the task definition.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(58).jpg\"><span>For task definitions that use the&nbsp;awsvpc&nbsp;network mode, you should only specify the&nbsp;containerPort. The&nbsp;hostPort&nbsp;can be left blank or it must be the same value as the&nbsp;containerPort.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Port mappings on Windows use the&nbsp;NetNAT&nbsp;gateway address rather than&nbsp;localhost. There is no loopback for port mappings on Windows, so you cannot access a container’s mapped port from the host itself.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Task Definition.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Service scheduler</strong></b><span>&nbsp;is incorrect because&nbsp;this only provides you the ability to run tasks manually (for batch jobs or single run tasks), with Amazon ECS placing tasks on your cluster for you. The service scheduler is ideally suited for long-running stateless services and applications but not for configuring port mappings.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Container instance</strong></b><span>&nbsp;is incorrect because this is just an Amazon EC2 instance running the Amazon ECS container agent and registered into a cluster. When you run tasks with Amazon ECS, your tasks using the EC2 launch type are placed on your active container instances. However, you can’t manually configure the port mappings directly on your container instances but through task definitions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;Container Agent</strong></b><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;</em></i><span>is incorrect because this only allows container instances to connect to your cluster. The Amazon ECS container agent is included in the Amazon ECS-optimized AMIs, but you can also install it on any Amazon EC2 instance that supports the Amazon ECS specification. As with the other incorrect options, you can’t configure port mappings with this component.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PortMapping.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PortMapping.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definition_portmappings\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definition_portmappings</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546458,
        "value": "Task definition",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546459,
        "value": "Container instance",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546460,
        "value": "Service scheduler",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546461,
        "value": "Container Agent",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 57,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546461,
        "questionId": 385769,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385769,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is building a Docker application using Amazon ECS. The application requires containers to maintain long-lived connections and access specific ports on the host container instance to send or receive traffic using port mapping.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which component of ECS should the developer configure to properly implement this task?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887986,
    "question": "Amazon S3.",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Lambda</strong></b><span>&nbsp;supports synchronous and asynchronous invocation of a Lambda function. You can control the invocation type only when you invoke a Lambda function (referred to as&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">on-demand invocation</em></i><span>). The following examples illustrate on-demand invocations:</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– Your custom application invokes a Lambda function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>– You manually invoke a Lambda function (for example, using the AWS CLI) for testing purposes.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In both cases, you invoke your Lambda function using the&nbsp;</span><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>Invoke</span></a><span>&nbsp;operation, and you can specify the invocation type as synchronous or asynchronous.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>When you use AWS services as a trigger, the invocation type is predetermined for each service. You have no control over the invocation type that these event sources use when they invoke your Lambda function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the Invoke API,&nbsp;you have 3 options to choose from for the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">InvocationType:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">RequestResponse</strong></b><span>&nbsp;(default) – Invoke the function synchronously. Keep the connection open until the function returns a response or times out. The API response includes the function response and additional data.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Event</strong></b><span>&nbsp;– Invoke the function asynchronously. Send events that fail multiple times to the function’s dead-letter queue (if it’s configured). The API response only includes a status code.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">DryRun</strong></b><span>&nbsp;– Validate parameter values and verify that the user or role has permission to invoke the function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>By configuring the application to asynchronously process requests by changing the invocation type of the Lambda function to “Event,” the function can run in the background without blocking the main application. When the processing is complete, Lambda can store it back to S3 and trigger another event, such as a notification to the user that the image is ready.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is to&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">configure the application to asynchronously process the requests and change the invocation type of the Lambda function to&nbsp;Event.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Configuring the application to asynchronously process the requests and use the default invocation type of the Lambda function</strong></b><span>&nbsp;is incorrect because this will invoke your Lambda function synchronously. The default invocation type is&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">RequestResponse</strong></b><span>&nbsp;which invokes the function synchronously and keeps the connection open until the function returns a response or times out.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using AWS Serverless Application Model (AWS SAM) to allow asynchronous requests to your Lambda function</strong></b><span>&nbsp;is incorrect because AWS&nbsp;SAM just is an open-source framework that you can use to build serverless applications on AWS.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Using a combination of Lambda and Step Functions to orchestrate service components and asynchronously process the requests</strong></b><span>&nbsp;is incorrect because the AWS Step Functions service just lets you coordinate multiple AWS services into serverless workflows so you can build and update apps quickly. Although this can be a valid solution, it&nbsp;is not cost-effective since the application does not have a lot of components to orchestrate. Lambda functions can effectively meet the requirements in this scenario without using Step Functions by processing the requests asynchronously.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-options.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/invocation-options.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546462,
        "value": "Configure the application to asynchronously process the requests and use the default invocation type of the Lambda function.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546463,
        "value": "Use a combination of Lambda and Step Functions to orchestrate service components and asynchronously process the requests.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546464,
        "value": "Use AWS Serverless Application Model (AWS SAM) to allow asynchronous requests to your Lambda function.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546465,
        "value": "Configure the application to asynchronously process the requests and change the invocation type of the Lambda function to Event.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 58,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546465,
        "questionId": 385770,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385770,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer is building a photo-sharing application that automatically enhances images uploaded by users to Amazon S3. When a user uploads an image, its S3 path is sent to an image-processing application hosted on AWS Lambda. The Lambda function applies the selected filter to the image and stores it back to S3.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>If the upload is successful, the application will return a prompt telling the user that the request has been accepted. The entire processing typically takes an average of 5 minutes to complete, which causes the application to become unresponsive.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST suitable and cost-effective option which will prevent the application from being unresponsive?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887987,
    "question": "ISMS",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">AWS Secrets Manager</strong></b><span>&nbsp;is an AWS service that makes it easier for you to manage secrets.&nbsp;</span><i><em class=\"Editor__editor-text-italic___C9n8O\">Secrets</em></i><span>&nbsp;can be database credentials, passwords, third-party API keys, and even arbitrary text. You can store and control access to these secrets centrally by using the Secrets Manager console, the Secrets Manager command line interface (CLI), or the Secrets Manager API and SDKs.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>In the past, when you created a custom application that retrieves information from a database, you typically had to embed the credentials (the secret) for accessing the database directly in the application. When it came time to rotate the credentials, you had to do much more than just create new credentials. You had to invest time to update the application to use the new credentials. Then you had to distribute the updated application. If you had multiple applications that shared credentials and you missed updating one of them, the application would break. Because of this risk, many customers have chosen not to regularly rotate their credentials, which effectively substitutes one risk for another.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(60).jpg\"><span>Secrets Manager enables you to replace hardcoded credentials in your code (including passwords), with an API call to Secrets Manager to retrieve the secret programmatically. This helps ensure that the secret can’t be compromised by someone examining your code, because the secret simply isn’t there. Also, you can configure Secrets Manager to automatically rotate the secret for you according to a schedule that you specify. This enables you to replace long-term secrets with short-term ones, which helps to significantly reduce the risk of compromise.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">creating a secret in AWS Secrets Manager and enabling automatic rotation of the database credentials</strong></b><span>&nbsp;is the most appropriate solution for this scenario.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a parameter to the Systems Manager Parameter Store using the PutParameter API with a type of&nbsp;SecureString&nbsp;</strong></b><span>is incorrect because, by default,&nbsp;Systems Manager Parameter Store doesn’t rotate its parameters.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Enable IAM DB authentication which rotates the credentials by default</strong></b><span>&nbsp;is incorrect because this solution&nbsp;only enables the service to connect to Amazon RDS with IAM credentials. It doesn’t have the capability to rotate the credentials like what AWS Secrets Manager does to its secrets.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:</span><i><b><strong class=\"Editor__editor-text-bold___25KrR Editor__editor-text-italic___C9n8O\">&nbsp;</strong></b></i><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an IAM Role which has full access to the database. Attach the role to the services which requires access</strong></b><span>&nbsp;is incorrect because although IAM Role is a preferred way to grant access to certain services, this solution doesn’t rotate the keys/credentials.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546466,
        "value": "Create a parameter to the Systems Manager Parameter Store using the PutParameter API with a type of SecureString.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546467,
        "value": "Enable IAM DB authentication which rotates the credentials by default.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546468,
        "value": "Create an IAM Role which has full access to the database. Attach the role to the services which require access.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546469,
        "value": "Create a secret in AWS Secrets Manager and enable automatic rotation of the database credentials.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 59,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546466,
        "questionId": 385771,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385771,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>To improve their information security management system (ISMS), a company recently released a new policy which requires all database credentials to be encrypted and be automatically rotated to avoid unauthorized access.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following is the MOST appropriate solution to secure the credentials?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887988,
    "question": "Lambda function",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Environment variables for Lambda functions</strong></b><span>&nbsp;enable you to dynamically pass settings to your function code and libraries without making changes to your code. Environment variables are key-value pairs that you create and modify as part of your function configuration using either the AWS Lambda Console, the AWS Lambda CLI, or the AWS Lambda SDK. AWS Lambda then makes these key-value pairs available to your Lambda function code using standard APIs supported by the language, like&nbsp;process.env&nbsp;for Node.js functions.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can use environment variables to help libraries know what directory to install files in, where to store outputs, store connection and logging settings, and more. By separating these settings from the application logic, you don’t need to update your function code when changing the function behavior based on different settings.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Use environment variables to set the parameters per environment.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a stage variable called&nbsp;ENV&nbsp;and invoke the Lambda function by its alias name</strong></b><span>&nbsp;is incorrect because the stage variable is a feature of API Gateway, not AWS Lambda.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create individual Lambda Layers for each environment</strong></b><span>&nbsp;is incorrect because this feature is only used to&nbsp;pull in additional code and content in the form of layers. A layer is a ZIP archive that contains libraries, a custom runtime, or other dependencies.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Publish three versions of the Lambda function. Assign the aliases DEV, UAT, and PROD to each version</strong></b><span>&nbsp;is incorrect because&nbsp;this is just like a pointer to a specific Lambda function version.&nbsp;By using aliases, you can access the Lambda function, which the alias is pointing to, without the caller knowing the specific version the alias is pointing to.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/env_variables.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/env_variables.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-configuration.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/lambda/latest/dg/lambda-configuration.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546470,
        "value": "Publish three versions of the Lambda function. Assign the aliases DEV, UAT, and PROD to each version.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546471,
        "value": "Create a stage variable called ENV and invoke the Lambda function by its alias name.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546472,
        "value": "Create individual Lambda Layers for each environment",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546473,
        "value": "Use environment variables to set the parameters per environment.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 60,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546473,
        "questionId": 385772,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385772,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>A developer has deployed a Lambda function that runs in DEV, UAT, and PROD environments. The function uses different parameters that varies based on the environment it is running in. The parameters are currently hardcoded in the function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which action should the developer do to reference the appropriate parameters without modifying the code every time the environment changes?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887989,
    "question": "X-Ray",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Even with sampling, a complex application generates a lot of data. The AWS X-Ray console provides an easy-to-navigate view of the service graph. It shows health and performance information that helps you identify issues and opportunities for optimization in your application. For advanced tracing, you can drill down to traces for individual requests or use&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">filter expressions</strong></b><span>&nbsp;to find traces related to specific paths or users.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(62).jpg\"><span>When you instrument your application, the X-Ray SDK records information about incoming and outgoing requests, the AWS resources used, and the application itself. You can add other information to the segment document as annotations and metadata.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Annotations</strong></b><span>&nbsp;are simple key-value pairs that are indexed for use with&nbsp;</span><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>filter expressions</span></a><span>. Use annotations to record data that you want to use to group traces in the console, or when calling the&nbsp;</span><a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetTraceSummaries.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>GetTraceSummaries</span></a><span>&nbsp;API. X-Ray indexes up to 50 annotations per trace.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Metadata</strong></b><span>&nbsp;are key-value pairs with values of any type, including objects and lists, but that are not indexed. Use metadata to record data you want to store in the trace but don’t need to use for searching traces. You can view annotations and metadata in the segment or subsegment details in the X-Ray console.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence,&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">adding the custom attributes as annotations in your segment document</strong></b><span>&nbsp;is the correct answer.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Including the custom attributes as new segment fields in the segment document</strong></b><span>&nbsp;is incorrect because a segment field can’t be used as a filter expression. You have to add the custom attributes as annotations to the segment document that you’ll send to X-Ray, just as mentioned above.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Creating a new sampling rule based on the custom attributes&nbsp;</strong></b><span>is incorrect because sampling&nbsp;is primarily used to ensure efficient tracing and to provide a representative sample of the requests that your application serves.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Adding the custom attributes as metadata in your segment document&nbsp;</strong></b><span>is incorrect because metadata is primarily used to record custom data that you want to store in the trace but not for searching traces.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-annotations\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-annotations</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546474,
        "value": "Add the custom attributes as annotations in your segment document.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546475,
        "value": "Create a new sampling rule based on the custom attributes.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546476,
        "value": "Add the custom attributes as metadata in your segment document.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546477,
        "value": "Include the custom attributes as new segment fields in the segment document.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 61,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546476,
        "questionId": 385773,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385773,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An application, which already uses X-Ray, generates thousands of trace data every hour.&nbsp;The developer wants to use a filter expression that will limit the results based on custom attributes or keys that he specifies.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>How should the developer refactor the application in order to filter the results in the X-Ray console?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887990,
    "question": "S3 bucket",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Amazon Cognito provides authentication, authorization, and user management for your web and mobile apps. Your users can sign in directly with a username and password or through a third party such as Facebook, Amazon, or Google.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The two main components of Amazon Cognito are user pools and identity pools. User pools are user directories that provide sign-up and sign-in options for your app users. Identity pools enable you to grant your users access to other AWS services. You can use identity pools and user pools separately or together.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(63).jpg\"><span>Amazon Cognito identity pools (federated identities) support user authentication through Amazon Cognito user pools, federated identity providers—including Amazon, Facebook, Google, and SAML identity providers—as well as unauthenticated identities. This feature also supports&nbsp;</span><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/developer-authenticated-identities.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>Developer Authenticated Identities (Identity Pools)</span></a><span>, which lets you register and authenticate users via your own back-end authentication process.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct answer is:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create an Identity Pool in Amazon Cognito and enabling access to unauthenticated identities</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a User Pool in Amazon Cognito and&nbsp;enable unauthenticated identities&nbsp;</strong></b><span>is incorrect because you should have created an Identity Pool instead. Take note that a User Pool doesn’t have the option to enable unauthenticated identities. Moreover,&nbsp;you won’t be able to provide your users access to upload their media files to S3 using a User Pool.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Create a custom identity broker which integrates with the AWS Security Token Service&nbsp;and supports unauthenticated access</strong></b><i><em class=\"Editor__editor-text-italic___C9n8O\">&nbsp;</em></i><span>is incorrect because this is not a suitable solution in this scenario.&nbsp;You only need to build a custom identity broker application if your identity store is not compatible with SAML 2.0, which is required for identity federation.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The option that says:&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Integrate AWS IAM Identity Center</strong></b><span>&nbsp;is incorrect because&nbsp;this is only used to help you manage access and permissions to custom applications that support Security Assertion Markup Language (SAML) 2.0 and commonly used third-party software as a service (SaaS) applications. This is primarily used for&nbsp;existing corporate identities and not for social identity providers.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/cognito-user-pools-identity-pools/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/premiumsupport/knowledge-center/cognito-user-pools-identity-pools/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/getting-started-with-identity-pools.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/cognito/latest/developerguide/getting-started-with-identity-pools.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546478,
        "value": "Integrate AWS IAM Identity Center with your website.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546479,
        "value": "Create a custom identity broker which integrates with the AWS Security Token Service and supports unauthenticated access.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546480,
        "value": "Create an Identity Pool in Amazon Cognito and enable access to unauthenticated identities.",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546481,
        "value": "Create a User Pool in Amazon Cognito and enable access to unauthenticated identities.",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 62,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": false,
        "choiceId": 1546479,
        "questionId": 385774,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385774,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The users of a social media website must be authenticated using social identity providers such as Twitter, Facebook, and Google. Users can login to the site which will allow them to upload their selfies, memes, and other media files in an S3 bucket. As an additional feature, you should also enable guest user access to certain sections of the website.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following should you do to accomplish this task?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887991,
    "question": "API gateway",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can monitor API execution using CloudWatch, which collects and processes raw data from API Gateway into readable, near-real-time metrics. These statistics are recorded for a period of two weeks so that you can access historical information and gain a better perspective on how your web application or service is performing. By default, API Gateway metric data is automatically sent to CloudWatch in one-minute periods.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>The metrics reported by API Gateway provide information that you can analyze in different ways. The list below shows some common uses for the metrics. These are suggestions to get you started, not a comprehensive list.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– Monitor the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">IntegrationLatency</strong></b><span>&nbsp;metrics to measure the responsiveness of the backend.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– Monitor the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Latency</strong></b><span>&nbsp;metrics to measure the overall responsiveness of your API calls.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>&nbsp;– Monitor the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">CacheHitCount</strong></b><span>&nbsp;and&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">CacheMissCount</strong></b><span>&nbsp;metrics to optimize cache capacities to achieve a desired performance.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Hence, the correct metrics that you have to use in this scenario are&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Latency</strong></b><span>&nbsp;and</span><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;IntegrationLatency.</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Count</strong></b><span>&nbsp;is incorrect because this&nbsp;metric simply gets the total number of API requests in a given period.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CacheMissCount</strong></b><span>&nbsp;is incorrect because this metric just gets the number of requests served from the backend in a given period when API caching is enabled.&nbsp;The&nbsp;Sum&nbsp;statistic represents this metric, namely, the total count of the cache misses in the given period.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">CacheHitCount</strong></b><span>&nbsp;is incorrect because this&nbsp;fetches the number of requests served from the API cache in a given period.&nbsp;The&nbsp;Sum&nbsp;statistic represents this metric, namely, the total count of the cache hits in the given period.</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-metrics-and-dimensions.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-metrics-and-dimensions.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/monitoring-cloudwatch.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/apigateway/latest/developerguide/monitoring-cloudwatch.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><b><strong class=\"Editor__editor-text-bold___25KrR\">&nbsp;</strong></b></p>",
    "choices": [
      {
        "id": 1546482,
        "value": "Count",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546483,
        "value": "CacheMissCount",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546484,
        "value": "Latency",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546485,
        "value": "CacheHitCount",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546486,
        "value": "IntegrationLatency",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 63,
    "type": "MULTIPLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546484,
        "questionId": 385775,
        "response": null,
        "answerFeedback": null
      },
      {
        "isCorrect": true,
        "choiceId": 1546486,
        "questionId": 385775,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385775,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>An API gateway with a Lambda proxy integration takes a long time to complete its processing. There were also occurrences where some requests timed out. You want to monitor the responsiveness of your API calls as well as the underlying Lambda function.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following CloudWatch metrics should you use to troubleshoot this issue? (Select TWO.)</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  },
  {
    "answerId": 38887992,
    "question": "AWS SAM",
    "questionClass": "EDU",
    "hint": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>For serverless applications (also referred to as Lambda-based applications), the optional&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Transform</strong></b><span>&nbsp;section specifies the version of the AWS Serverless Application Model (AWS SAM) to use. When you specify a transform, you can use AWS SAM syntax to declare resources in your template. The model defines the syntax that you can use and how it is processed.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><img src=\"http://static.cdn.epam.com/uploads/edd5f87315fbce8b3b6bc0b7376c0f0e/Troubleshooting/Exam_1/hint(65).jpg\"><span>This&nbsp;section specifies one or more macros that AWS CloudFormation uses to process your template. The Transform section builds on the simple, declarative language of AWS CloudFormation with a powerful macro system.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You can declare one or more macros within a template. AWS CloudFormation executes macros in the order that they are specified. When you create a change set, AWS CloudFormation generates a change set that includes the processed template content. You can then review the changes and execute the change set.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>AWS CloudFormation also supports the AWS::Serverless and AWS::Include transforms, which are macros hosted by AWS CloudFormation. AWS CloudFormation treats these transforms the same as any macros you create in terms of execution order and scope.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Therefore, the&nbsp;</span><b><strong class=\"Editor__editor-text-bold___25KrR\">Transform</strong></b><span>&nbsp;section should be the correct one to be added to your template.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Mappings</strong></b><span>&nbsp;section is incorrect because&nbsp;this is just a literal&nbsp;mapping of keys and associated values that you can use to specify conditional parameter values, similar to a lookup table.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Parameters</strong></b><span>&nbsp;section is incorrect because this only contains the values that will be passed to your template at runtime (when you create or update a stack). You can refer to parameters from the Resources and Outputs sections of the template, but this is not used to specify the AWS SAM version.</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">Format Version</strong></b><span>&nbsp;section is incorrect because this just refers to the AWS CloudFormation template version that the template conforms to, and not&nbsp;the version of the AWS Serverless Application Model (AWS SAM)</span></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><b><strong class=\"Editor__editor-text-bold___25KrR\">References:</strong></b></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><a href=\"https://aws.amazon.com/blogs/aws/cloudformation-macros/\" target=\"_blank\" class=\"Editor__editor-link___3vl2C\"><span>https://aws.amazon.com/blogs/aws/cloudformation-macros/</span></a></p><p class=\"Editor__editor-paragraph___HPmFS\"><span>&nbsp;</span></p>",
    "choices": [
      {
        "id": 1546487,
        "value": "Transform",
        "isCorrect": true,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546488,
        "value": "Format Version",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546489,
        "value": "Parameters",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      },
      {
        "id": 1546490,
        "value": "Mappings",
        "isCorrect": false,
        "isAdvancedEditor": false,
        "language": "",
        "responses": []
      }
    ],
    "idx": 64,
    "type": "SINGLE",
    "userAnswers": [
      {
        "isCorrect": true,
        "choiceId": 1546487,
        "questionId": 385776,
        "response": null,
        "answerFeedback": null
      }
    ],
    "exact": null,
    "isFinalScore": false,
    "media": {
      "audioUrl": null,
      "pictureUrl": null,
      "videoUrl": null
    },
    "score": null,
    "questionId": 385776,
    "description": "<p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>You are deploying a serverless application composed of Lambda, API Gateway, CloudFront, and DynamoDB using CloudFormation. The AWS SAM syntax should be used to declare resources in your template which requires you to specify the version of the AWS Serverless Application Model (AWS SAM).</span></p><p class=\"Editor__editor-paragraph___HPmFS\" dir=\"ltr\"><span>Which of the following sections is required, aside from the&nbsp;Resources&nbsp;section, that should be in your CloudFormation template?</span></p>",
    "language": "java",
    "file": null,
    "noMatchResponses": [],
    "answerReview": null,
    "answerFeedbacks": [],
    "topic": {
      "id": 8225,
      "name": "CDA-Practice exam-1",
      "skillId": "",
      "categoryId": 1633
    }
  }
]